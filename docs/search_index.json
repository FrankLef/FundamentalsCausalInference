[["index.html", "Study project: Fundamentals of Causal Inferences With R Study Project About Packages", " Study project: Fundamentals of Causal Inferences With R François Lefebvre 2022-02-07 Study Project About This is a study project of Brumback (2022). Many thanks to Babette Brumback for a great book to tackle the question of causality. All my gratitude goes to Ms Brumback for such a useful and much needed book. The suggestions for errata are in the section Errata. Comments are also included in the section Comments. Packages The functions have been rewritten to simplify them and improve the learning experience (personal opinion) for newbies such as me. The following packages are so useful that they could not be avoided. In particular, dplyr and tidyr make the coding experience so much more interesting that one could almost claim they have become the standard in R coding. dplyr for data wrangling. see Wickham, François, et al. (2021) tidyr for data wrangling. see Wickham (2021) ggplot2 for plots, see Wickham, Chang, et al. (2021)` gt for all tables, see Iannone, Cheng, and Schloerke (2021) dagitty for analysis of structural causal models, see Textor, van der Zander, and Ankan (2021) ggdag for directed acyclic graphs, see Barrett (2021) gee: a generalized estimation equation solver. Introduced in chapter 4. See Carey, Lumley, and Ripley (2019). MonteCarlo: To perform Monte Carlo simulations. Introduced in chapter 4, section 4.2. See Leschinski (2019). simstudy: To run all sorts of simulations. A great tool to learn right from the start since simulations are so important. See Goldfeld and Wujciak-Jens (2021). References "],["intro.html", "Chapter 1 Introduction 1.1 A Brief History 1.2 Data Examples 1.3 Exercises", " Chapter 1 Introduction library(ggplot2, quietly = TRUE) library(ggdag, quietly = TRUE) 1.1 A Brief History 1.2 Data Examples 1.2.1 Mortality Rates by Country 1.2.2 National Center for Education Statistics 1.2.3 Reducing Alcohol Consumption 1.2.3.1 The What-If? Study 1.2.3.1.1 The Double What-If? Study The code can be found in the file doublewhatifsim.R and is verified against the authors file just below. The DAG for the Double What-If? study in the dagitty version is scm &lt;- list() scm &lt;- within(scm, { the_nodes &lt;- c(&quot;U&quot; = &quot;Unmeasured, healthy behavior (U=1)&quot;, &quot;AD0&quot; = &quot;Adherence time 0&quot;, &quot;VL0&quot; = &quot;Viral Load time 0&quot;, &quot;T&quot; = &quot;Naltrexone (T=1)&quot;, &quot;A&quot; = &quot;Reduced drinking (A=1)&quot;, &quot;AD1&quot; = &quot;Adherence time 1&quot;, &quot;VL1&quot; = &quot;Viral Load time 1&quot;) coords &lt;- data.frame( name = names(the_nodes), x = c(2, 3, 4, 1, 2, 3, 4), y = c(2, 2, 2, 1, 1, 1, 1) ) dag &lt;- dagify( AD0 ~ U, VL0 ~ AD0, A ~ `T` + U, AD1 ~ A, VL1 ~ AD0 + AD1 + U, outcome = &quot;VL1&quot;, exposure = &quot;T&quot;, latent = &quot;U&quot;, coords = coords, labels = the_nodes) # status&#39; colors colrs &lt;- c(&quot;latent&quot; = &quot;palevioletred&quot;, &quot;exposure&quot; = &quot;mediumspringgreen&quot;, &quot;outcome&quot; = &quot;cornflowerblue&quot;) # plot the DAG plot &lt;- dag %&gt;% tidy_dagitty() %&gt;% ggdag_status(color = status, text = TRUE, node_size = 10, text_size = 3, text_col = &quot;black&quot;) + scale_color_manual(values = colrs, na.value = &quot;honeydew3&quot;) + scale_fill_manual(values = colrs, na.value = &quot;honeydew3&quot;) + ggdag::theme_dag_blank(panel.background = element_rect(fill=&quot;snow&quot;, color=&quot;snow&quot;)) + theme(legend.position = &quot;bottom&quot;, legend.title = element_blank()) + labs(title = &quot;The Double What-If? Study&quot;) }) scm$plot and the code for doublewhatifsim.R is #&#39; \\code{doublewhatifsim} script rewritten #&#39; #&#39; \\code{doublewhatifsim} script rewritten. #&#39; #&#39; Simulate the What-If study data. #&#39; #&#39; @param n Nb of observations. #&#39; @param seed Integer, the seed used for random numbers. #&#39; #&#39; @return Dataframe doublewhatifsim &lt;- function(n = 1000, seed = 444) { set.seed(seed) # variables each with probability 0.5 U &lt;- rbinom(n, size = 1, prob = 0.5) # probability of AD0 depends on U AD0prob &lt;- 0.2 + 0.6 * U # generate independent bernoulli variables with varying probabilities AD0 &lt;- rbinom(n, size = 1, prob = AD0prob) VL0prob &lt;- 0.8 - 0.4 * AD0 VL0 &lt;- rbinom(n, size = 1, prob = VL0prob) `T` &lt;- rbinom(n, size = 1, prob = 0.5) Aprob &lt;- 0.05 + `T` * U * 0.8 A &lt;- rbinom(n, size = 1, prob = Aprob) AD1prob &lt;- 0.1 + 0.8 * A AD1 &lt;- rbinom(n, size = 1, prob = AD1prob) VL1prob &lt;- VL0prob + 0.1 - 0.45 * AD1 VL1 &lt;- rbinom(n, size =1 , prob = VL1prob) data.frame( &quot;AD0&quot; = AD0, &quot;VL0&quot; = VL0, &quot;T&quot; = `T`, &quot;A&quot; = A, &quot;AD1&quot; = AD1, &quot;VL1&quot; = VL1 ) } which we verify against the raw data set provided by the author. bb &lt;- doublewhatifdat d &lt;- doublewhatifsim() stopifnot(identical(d, bb)) 1.2.4 General Social Survey 1.2.5 A Cancer Clinical Trial 1.3 Exercises Please note that the solutions to exercises of Brumback (2022) below are my own and have not been verified or approved in any way by the author. 1.3.1 Exercise 1 8 Experiment 1.3.2 Exercise 2 9 Analogy 1.3.3 Exercise 3 2 Consistency: They are well known to cause substantial weight gain. That is, observed by different persons, different places and time. 6 Plausability 7 Coherence 1.3.4 Exercise 4 8 Experiment 9 Analogy 1.3.5 Exercise 5 3 Specificity 1.3.6 Exercise 6 5 Biological gradient: increasing levels of physical activity are more strongly protective 8 Experiment 1.3.7 Exercise 7 6 Plausability 4 Temporality 1.3.8 Exercise 8 4 Temporality References "],["probability.html", "Chapter 2 Conditional Probability and Expectation 2.1 Conditional Probability 2.2 Conditional Expectation and he Law of Total expectation 2.3 Estimation 2.4 Sampling Distributions and the Bootstrap 2.5 Exercises", " Chapter 2 Conditional Probability and Expectation library(dplyr, quietly = TRUE) library(boot, quietly = TRUE) The mortality data is dataMortality &lt;- data.frame( &quot;T&quot; = c(TRUE, TRUE, FALSE, FALSE), &quot;H&quot; = c(FALSE, TRUE, FALSE, TRUE), &quot;deaths&quot; = c(756340, 2152660, 2923480, 7517520), &quot;population&quot; = c(282305227, 48262955, 1297258493, 133015479), &quot;Y&quot; = c(0.002679, 0.044603, 0.002254, 0.056516) ) stopifnot(near(sum(dataMortality$Y), sum(dataMortality$deaths / dataMortality$population), tol = 1e-6)) 2.1 Conditional Probability 2.1.1 Law of total probability It is important to note that \\(\\sum_i{H_i} = H\\), that is \\(H\\) can be partioned in \\(i\\) non-overlapping partitions. Then the law of total probabilities is \\[ \\begin{align*} P(A) &amp;= \\sum_i{P(A \\cap H_i)}= \\sum_i{P(A \\mid H_i) P(H_i)} \\\\ &amp;\\text{and we condition the whole expression with B} \\\\ P(A \\mid B) &amp;= \\sum_i{P(A \\cap H_i \\mid B)}= \\sum_i{P(A \\mid B, H_i) P(B,H_i)} \\\\ \\end{align*} \\] and the multiplication rule is \\[ \\begin{align*} P(A, B \\mid C) &amp;= \\frac{P(A, B, C)}{P(C)} \\\\ &amp;= \\frac{P(A \\mid B, C) P(B, C)}{P(C)} \\\\ &amp;= \\frac{P(A \\mid B, C) P(B \\mid C) P(C)}{P(C)} \\\\ &amp;= P(A \\mid B, C) P(B \\mid C) \\end{align*} \\] 2.2 Conditional Expectation and he Law of Total expectation The function expit() used by the author is actually the same as gtools::inv.logit() or stats::plogis(). In this project we use stats::plogis() because it is in base R and we want to minimize dependencies. 2.3 Estimation Using the What-if example we have \\[ \\begin{align*} X_i \\beta &amp;= X_{i,1} \\beta_i +\\ldots+X_{i, p}\\beta_p \\\\ &amp;\\therefore \\\\ X_i \\beta &amp;= \\beta_1 A_i + \\beta_2 T_i + \\beta_3 H_i \\\\ \\end{align*} \\] and \\[ X_i^T(Y_i - X_i \\beta) \\\\ \\therefore \\\\ \\begin{bmatrix} 1 \\cdot(Y_i - \\beta_1 - A_i \\beta_2 - T_i \\beta_3 - H_i \\beta_4) \\\\ A_i \\cdot(Y_i - \\beta_1 - A_i \\beta_2 - T_i \\beta_3 - H_i \\beta_4) \\\\ T_i \\cdot(Y_i - \\beta_1 - A_i \\beta_2 - T_i \\beta_3 - H_i \\beta_4)\\\\ H_i \\cdot(Y_i - \\beta_1 - A_i \\beta_2 - T_i \\beta_3 - H_i \\beta_4) \\end{bmatrix} \\] 2.4 Sampling Distributions and the Bootstrap Run and verify with authors results on p. 32 d &lt;- sim() stopifnot(near(d$bad, 0.8374, tol = 0.01), near(d$good, 0.948, tol = 0.01)) d ## $bad ## [1] 0.8318 ## ## $good ## [1] 0.9515 #&#39; Bootstrap an unconditional sampling distribution #&#39; #&#39; Bootstrap an unconditional sampling distribution. #&#39; # Estimate the unconditional sampling distribution by bootstrapping. #&#39; #&#39; @param dat Dataframe of raw data. #&#39; @param formula Formula of linear model. #&#39; @param cond Formula of condition. #&#39; @R Number of bootstrap replicates. #&#39; @conf Confidence interval #&#39; #&#39; @return Vector of summarized results lmodboot &lt;- function(dat, formula = Y ~ `T` + A + H, cond = Y ~ `T` + A + H, R = 1000, conf = 0.95) { # the name of the intercept variable used by glm x0 &lt;- &quot;(Intercept)&quot; # the name of the predictor variables in the condition formula cond &lt;- all.vars(cond[[3]]) estimator &lt;- function(data, ids) { dat &lt;- data[ids, ] coefs &lt;- coef(glm(formula = formula, family = binomial, data = dat)) # use cond to identify conditioned variables. # i.e. the user can decide not to use all variables from the formula # or, in other words, condition on some variables coefs &lt;- coefs[c(x0, cond)] p &lt;- sum(coefs) out &lt;- c(p) names(out) &lt;- c(&quot;logitp&quot;) out } out &lt;- run_boot(data = dat, statistic = estimator, R = R, conf = conf) out &lt;- invlogit_effects(out) out } Run and verify against the authors results on p.34 d &lt;- lmodboot(whatifdat) d ## name est conf lci uci ## 1 p 0.6059581 0.95 0.414774 0.7652328 # check results with book stopifnot(near(d[&quot;est&quot;], 0.60596, 0.01), near(d[&quot;lci&quot;], 0.41638, 0.01), near(d[&quot;uci&quot;], 0.76823, 0.015)) 2.5 Exercises Please note that the solutions to exercises of Brumback (2022) below are my own and have not been verified or approved in any way by the author. 2.5.1 Exercise 1 df &lt;- whatifdat probs &lt;- list() # probability of having A = 1 and T = 1 probs[&quot;B,C&quot;] &lt;- nrow(df[df$A == 1 &amp; df$`T` == 1, ]) / nrow(df) # conditioning on C means conditioning on T = 1 which means # that we have to filter the data with the condition T = 1 dfC &lt;- df[df$`T` == 1, ] # the probability of C, i.e. T = 1 probs[&quot;C&quot;] &lt;- nrow(dfC) / nrow(df) # the prob of B given C (i.e. nb of row with A = 1 using filtered data) probs[&quot;B|C&quot;] &lt;- nrow(dfC[dfC$A == 1, ]) / nrow(dfC) # check the result stopifnot(near(probs[[&quot;B,C&quot;]], probs[[&quot;B|C&quot;]] * probs[[&quot;C&quot;]])) msg &lt;- sprintf(&quot;prob(B,C) = %0.6f, prob(B|C) x prob(C) = %0.6f&quot;, probs[[&quot;B,C&quot;]], probs[[&quot;B|C&quot;]] * probs[[&quot;C&quot;]]) message(msg) ## prob(B,C) = 0.315152, prob(B|C) x prob(C) = 0.315152 2.5.2 Exercise 2 We create the datasets to reflect the conditioning, i.e. the filtering based on the conditions given. df &lt;- nces dfAC &lt;- df[df$highmathsat == 1 &amp; df$selective == 1, ] dfBC &lt;- df[df$female == 1 &amp; df$selective == 1, ] dfC &lt;- df[df$selective == 1, ] then we calculate the conditional probabilities probs &lt;- list() probs[&quot;A|B,C&quot;] &lt;- nrow(dfBC[dfBC$highmathsat == 1, ]) / nrow(dfBC) probs[&quot;B|A,C&quot;] &lt;- nrow(dfAC[dfAC$female == 1, ]) / nrow(dfAC) probs[&quot;A|C&quot;] &lt;- nrow(dfC[dfC$highmathsat == 1, ]) / nrow(dfC) probs[&quot;B|C&quot;] &lt;- nrow(dfC[dfC$female == 1, ]) / nrow(dfC) probs$x &lt;- probs[[&quot;B|A,C&quot;]] * probs[[&quot;A|C&quot;]] / probs[[&quot;B|C&quot;]] stopifnot(near(probs[[&quot;A|B,C&quot;]], probs$x)) msg &lt;- sprintf(&quot;%0.6f = %0.6f&quot;, probs[[&quot;A|B,C&quot;]], probs$x) message(msg) ## 0.345238 = 0.345238 2.5.3 Exercise 3 Mathematically \\[ \\begin{align*} P(A \\mid B) &amp;= \\frac{P(A,B)}{P(B)} \\\\ &amp;= \\frac{P(B \\mid A) P(A)}{P(B, A) + P(B, \\neg{A})} \\\\ &amp;= \\frac{P(B \\mid A) P(A)}{P(B \\mid A)P(A) + P(B \\mid \\neg{A})P(\\neg A)} \\end{align*} \\] Empirically df &lt;- whatifdat dfA &lt;- df[df$`T` == 1, ] dfAnot &lt;- df[df$`T` != 1, ] dfB &lt;- df[df$H == 1, ] probs &lt;- list() probs[&quot;A|B&quot;] &lt;- nrow(dfB[dfB$`T` == 1, ]) / nrow(dfB) probs[&quot;B|A&quot;] &lt;- nrow(dfA[dfA$H == 1, ]) / nrow(dfA) probs[&quot;B|-A&quot;] &lt;- nrow(dfAnot[dfAnot$H == 1, ]) / nrow(dfAnot) probs[&quot;A&quot;] &lt;- nrow(dfA) / nrow(df) probs[&quot;-A&quot;] &lt;- nrow(dfAnot) / nrow(df) probs$x &lt;- (probs[[&quot;B|A&quot;]] * probs[[&quot;A&quot;]]) / (probs[[&quot;B|A&quot;]] * probs[[&quot;A&quot;]] + probs[[&quot;B|-A&quot;]] * probs[[&quot;-A&quot;]]) stopifnot(near(probs$x, probs[[&quot;A|B&quot;]])) msg &lt;- sprintf(&quot;%0.6f = %0.6f&quot;, probs[[&quot;A|B&quot;]], probs$x) message(msg) ## 0.542373 = 0.542373 2.5.4 Exercise 4 See section 2.2, top of p. 23, for comment that conditional mean independence implies unconditional uncorrelation, but not the other way around. First, we see that the unconditional correlation is demonstrated. \\[ \\begin{align*} E(XY) &amp;= \\sum_x \\sum_y x \\cdot y \\cdot P(X = x, Y = y) \\\\ &amp;= 1 \\cdot 1 \\cdot P(X = 1, Y = 1) + 2 \\cdot -2 \\cdot P(X = 2, Y = -2) + 3 \\cdot 1 \\cdot P(X = 3, Y = 1) \\\\ &amp;= 1 \\cdot 1 \\cdot \\frac{1}{3} + 2 \\cdot -2 \\cdot \\frac{1}{3} + 3 \\cdot 1 \\cdot \\frac{1}{3} = 0 \\\\ \\\\ E(X)E(Y) &amp;= \\sum_x \\sum_y x \\cdot P(X = x, Y = y) \\times \\sum_x \\sum_y y \\cdot P(X = x, Y = y) \\\\ &amp;= \\left( 1 \\cdot \\frac{1}{3} + 2 \\cdot \\frac{1}{3} + 3 \\cdot \\frac{1}{3} \\right) \\times \\left( 1 \\cdot \\frac{2}{3} + -2 \\cdot \\frac{1}{3} \\right) = 0 \\\\ \\\\ &amp;\\therefore \\\\ E(XY) &amp;= 0 = E(X)E(Y) \\end{align*} \\] and to show that we do not have a mean conditional independence, it is sufficient to show for any value \\(x\\) that \\(E(Y \\mid X = x) \\neq E(Y)\\) \\[ \\begin{align*} E(Y \\mid X = 1) &amp;= \\sum_y y P(Y = y \\mid X = 1) \\\\ &amp;= \\sum_y y \\frac{P(X = 1, Y = y)}{P(X = 1)} \\\\ &amp;= 1 \\cdot \\frac{P(X = 1, Y = 1)}{P(X = 1)} -2 \\cdot \\frac{P(X = 1, Y = -2)}{P(X = 1)} \\\\ &amp;= 1 \\cdot \\frac{\\frac{1}{3}}{\\frac{1}{3}} - 2 \\cdot \\frac{0}{\\frac{1}{3}} = 1 \\\\ \\\\ E(Y) &amp;= \\sum_y y \\cdot P(Y= y) \\\\ &amp;= 1 \\cdot \\frac{2}{3} - 2 \\cdot \\frac{1}{3} = 0 \\\\ \\\\ &amp;\\therefore \\\\ E(Y \\mid X = 1) &amp;\\neq E(Y) \\end{align*} \\] 2.5.5 Exercise 5 See section 2.4 at the end on how to do this, p. 34 and 35. The nonparametric estimate and ci is df &lt;- whatifdat df &lt;- df[(df$A == 1) &amp; (df$H == 0) &amp; (df$`T` == 1), ] nonparametric &lt;- list( est = mean(df$Y), se = sqrt(var(df$Y) / nrow(df)) ) nonparametric &lt;- within(nonparametric, { lci &lt;- est - 1.96 * se uci &lt;- est + 1.96 * se }) nonparametric ## $est ## [1] 0.1 ## ## $se ## [1] 0.0557086 ## ## $uci ## [1] 0.2091889 ## ## $lci ## [1] -0.009188859 and using the bootstrap function from above we get the parametric estimate and ci parametric &lt;- lmodboot(whatifdat, formula = Y ~ `T` + A + H, cond = Y ~ `T` + A) parametric ## name est conf lci uci ## 1 p 0.09001343 0.95 0.04382705 0.214635 which is very similar to the nonparametric and a little narrower because of the bias-variance tradeoff as discussed in the last paragraph of chapter 2. References "],["outcomes.html", "Chapter 3 Potential Outcomes and the Fundamental Problem of Causal Inference 3.1 Potential Outcomes and the Consistency Assumption 3.2 Circumventing the Fundamental Problem of Causal Inference 3.3 Effect Measures 3.4 Exercises", " Chapter 3 Potential Outcomes and the Fundamental Problem of Causal Inference library(dplyr, quietly = TRUE) library(tidyr, quietly = TRUE) library(gt, quietly = TRUE) library(boot, quietly = TRUE) 3.1 Potential Outcomes and the Consistency Assumption 3.2 Circumventing the Fundamental Problem of Causal Inference 3.3 Effect Measures #&#39; Compute estimates of the unconditional association measures #&#39; #&#39; Compute estimates of the unconditional association measures. #&#39; #&#39; Compute estimates of the unconditional association measures, #&#39; hence the u in \\code{bootu()}, and their confidence intervals. #&#39; 1- We use Gaussian, Poisson and Binomial glm to solve the #&#39; estimating equations of the measures, not their distributions #&#39; 2- The association measures&#39; distributions (ci) are estimated by #&#39; bootstrapping #&#39; Assumptions: We assume that (3.2) holds but not (3.1) #&#39; See p. 45 and 46 for more details. #&#39; @param dat Dataframe of raw data. #&#39; @param formula Formula of linear model. #&#39; @R Number of bootstrap replicates. #&#39; @conf Confidence interval #&#39; #&#39; @return Dataframe of summarized results bootu &lt;- function(dat, formula = Y ~ `T`, R = 1000, conf = 0.95) { # get the name of dependent variable from the formula y &lt;- all.vars(formula[[2]]) # get the name of independent variables from the formula x &lt;- all.vars(formula[[3]]) # the name of the intercept variable used by glm x0 &lt;- &quot;(Intercept)&quot; # estimate the conditional probabilities # and the four association measures estimator &lt;- function(data, ids) { dat &lt;- data[ids, ] # estimate the conditional probabilities coefs &lt;- coef(glm(formula = formula, family = gaussian, data = dat)) p0 &lt;- coefs[x0] p1 &lt;- sum(coefs) # estimate the risk difference rd &lt;- p1 - p0 # use loglinear model to estimate the log relative risk coefs &lt;- coef(glm(formula = formula, family = poisson, data = dat)) logrr &lt;- coefs[x] # prepare data to estimate the log other relative risk ystar &lt;- 1 - dat[, y] xstar &lt;- 1 - dat[, x] # use loglinear model to estimate the log other relative risk coefs &lt;- coef(glm(ystar ~ xstar, family = poisson)) logrrstar &lt;- coefs[2] # use logistic model to estimate the log of other risk coefs &lt;- coef(glm(formula = formula, family = binomial, data = dat)) logor &lt;- coefs[x] # return the results out &lt;- c(p0, p1, rd, logrr, logrrstar, logor) names(out) &lt;- c(&quot;p0&quot;, &quot;p1&quot;, &quot;rd&quot;, &quot;logrr&quot;, &quot;logrrstar&quot;, &quot;logor&quot;) out } out &lt;- run_boot(data = dat, statistic = estimator, R = R, conf = conf) out &lt;- exp_effects(out) out } run the function to get the association measures dataGSS &lt;- gss[, c(&quot;trump&quot;, &quot;gthsedu&quot;, &quot;magthsedu&quot;, &quot;white&quot;, &quot;female&quot;, &quot;gt65&quot;)] dataGSS &lt;- gss[complete.cases(dataGSS), ] stopifnot(nrow(dataGSS) == 2348 - 180) # see comment on p. 46 message(&quot;this takes 30 sec.: we load a saved file instead&quot;) ## this takes 30 sec.: we load a saved file instead # startTime &lt;- Sys.time() # d &lt;- bootu(dat = dataGSS, formula = trump ~ gthsedu) a_file &lt;- file.path(dir_data, &quot;chap03_bootu.rds&quot;) # saveRDS(d, file = a_file) d &lt;- readRDS(file = a_file) # endTime &lt;- Sys.time() # print(endTime - startTime) gt_measures(d, title = &quot;Table 3.2&quot;, subtitle = &quot;Unconditional probabilities and association measures&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #yvfsjcrdob .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #yvfsjcrdob .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yvfsjcrdob .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #yvfsjcrdob .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #yvfsjcrdob .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yvfsjcrdob .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yvfsjcrdob .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #yvfsjcrdob .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #yvfsjcrdob .gt_column_spanner_outer:first-child { padding-left: 0; } #yvfsjcrdob .gt_column_spanner_outer:last-child { padding-right: 0; } #yvfsjcrdob .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #yvfsjcrdob .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #yvfsjcrdob .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #yvfsjcrdob .gt_from_md > :first-child { margin-top: 0; } #yvfsjcrdob .gt_from_md > :last-child { margin-bottom: 0; } #yvfsjcrdob .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #yvfsjcrdob .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #yvfsjcrdob .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yvfsjcrdob .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #yvfsjcrdob .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yvfsjcrdob .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #yvfsjcrdob .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #yvfsjcrdob .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yvfsjcrdob .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yvfsjcrdob .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #yvfsjcrdob .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yvfsjcrdob .gt_sourcenote { font-size: 90%; padding: 4px; } #yvfsjcrdob .gt_left { text-align: left; } #yvfsjcrdob .gt_center { text-align: center; } #yvfsjcrdob .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #yvfsjcrdob .gt_font_normal { font-weight: normal; } #yvfsjcrdob .gt_font_bold { font-weight: bold; } #yvfsjcrdob .gt_font_italic { font-style: italic; } #yvfsjcrdob .gt_super { font-size: 65%; } #yvfsjcrdob .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table 3.2 Unconditional probabilities and association measures Measure Estimate CI1 p0 0.233 (0.211, 0.257) p1 0.271 (0.241, 0.3) rd 0.038 (0, 0.074) rr 1.162 (1.001, 1.342) rrstar 1.052 (0.999, 1.105) or 1.222 (1, 1.483) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval verify with authors results, p. 48-49 bb &lt;- data.frame( name = c(&quot;p0&quot;, &quot;p1&quot;, &quot;rd&quot;, &quot;rr&quot;, &quot;rrstar&quot;, &quot;or&quot;), est = c(0.23338, 0.27117, 0.037782, 1.1619, 1.0518, 1.221), lci = c(0.21030, 0.24095, 0.00078085, 1.0047, 1.0006, 1.0056), uci = c(0.25647, 0.30139, 0.07478354, 1.3437, 1.1057, 1.4853)) stopifnot( all(abs(d$est - bb$est) &lt; 0.01), all(abs(d$lci - bb$lci) &lt; 0.015), all(abs(d$uci - bb$uci) &lt; 0.02)) Now we estimate the four effect measures using conditional association measures. We notice that The function used in chapter 3 on p. 50-52 is called lmodboot.r(). The same name is used in chapter 2 on p.33-34 for a function computing only the estimand (sampling distribution) but not the association measures We therefore rename the lmodboot.r() of chapter 3 as bootc to show it relates to bootu with the c meaning conditional and avoid conflicting function names with lmodboot.r() of chapter 2 #&#39; Compute estimates of the conditional association measures #&#39; #&#39; Compute estimates of the conditional association measures. #&#39; #&#39; Estimate the expected conditional outcomes and the #&#39; conditional effect or association measures. #&#39; IMPORTANT: This is the function in chapter 3 called lmodboot.r #&#39; It has been renamed bootc.r to avoid conflict with #&#39; lmodboot.r of chapter 2 #&#39; #&#39; @param dat Dataframe of raw data. #&#39; @param formula Formula of linear model. #&#39; @param cond0 Formula of condition 0 #&#39; @param cond1 Formula of condition 1 #&#39; @param family Family used by \\code{glm} #&#39; @R Number of bootstrap replicates. #&#39; @conf Confidence interval #&#39; #&#39; @return Dataframe of summarized results bootc &lt;- function(dat, formula = Y ~ `T` + A + H, cond0 = Y ~ A + H, cond1 = Y ~ `T` + A + H, family = c(&quot;binomial&quot;, &quot;poisson&quot;, &quot;gaussian&quot;), R = 1000, conf = 0.95) { # the family used by glm family &lt;- match.arg(family) # the name of the intercept variable used by glm x0 &lt;- &quot;(Intercept)&quot; # the name of the predictors from condition formulas cond0 and cond1 cond0 &lt;- all.vars(cond0[[3]]) cond1 &lt;- all.vars(cond1[[3]]) estimator &lt;- function(data, ids) { dat &lt;- data[ids, ] coefs &lt;- coef(glm(formula = formula, family = family, data = dat)) # use cond to identify conditioned variables. # i.e. the user can decide not to use all variables from the formula # or, in other words, condition on some variables xbeta0 &lt;- sum(coefs[c(x0, cond0)]) xbeta1 &lt;- sum(coefs[c(x0, cond1)]) p0 &lt;- plogis(xbeta0) # plogis is the inverse of logit p1 &lt;- plogis(xbeta1) # plogis is the inverse of logit rd &lt;- p1 - p0 logrr &lt;- log(p1) - log(p0) logrrstar &lt;- log(1 - p0) - log(1 - p1) logor &lt;- log(p1 / (1 - p1)) - log(p0 / (1 - p0)) # return the results out &lt;- c(p0, p1, rd, logrr, logrrstar, logor) names(out) &lt;- c(&quot;p0&quot;, &quot;p1&quot;, &quot;rd&quot;, &quot;logrr&quot;, &quot;logrrstar&quot;, &quot;logor&quot;) out } out &lt;- run_boot(data = dat, statistic = estimator, R = R, conf = conf) out &lt;- exp_effects(out) out } To use the function with conditioning on variables, i.e. filtering on variables, we note that \\[ \\begin{align*} Y &amp;= \\text{trump} \\\\ T &amp;= \\text{gthsedu} \\\\ H_1 &amp;= \\text{magthsedu} \\\\ H_2 &amp;= \\text{white} \\\\ H_3 &amp;= \\text{female} \\\\ H_4 &amp;= \\text{gt65} \\\\ \\end{align*} \\] Therefore \\[ \\begin{align*} E(Y &amp;\\mid T = 0, H_1 = 1, H_2 = 1, H_3 = 1, H_4 = 1) \\\\ &amp;\\therefore \\text{because T = 0} \\\\ Y &amp;\\sim H_1 + H_2 + H_3 + H_4 \\\\ \\text{trump} &amp;\\sim \\text{magthsedu} + \\text{white} + \\text{female} + \\text{gt65} \\\\ \\end{align*} \\] message(&quot;this takes 10 sec.: we load a saved file instead&quot;) ## this takes 10 sec.: we load a saved file instead # startTime &lt;- Sys.time() # d &lt;- bootc(dat = dataGSS, # formula = trump ~ gthsedu + magthsedu + white + female + gt65, # cond0 = trump ~ magthsedu + white + female + gt65, # cond1 = trump ~ gthsedu + magthsedu + white + female + gt65) a_file &lt;- file.path(dir_data, &quot;chap03_bootc.rds&quot;) # saveRDS(d, file = a_file) d &lt;- readRDS(file = a_file) # endTime &lt;- Sys.time() # print(endTime - startTime) gt_measures(d, title = &quot;Table 3.3&quot;, subtitle = &quot;Conditional probabilities and association measures&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #llseixaila .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #llseixaila .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #llseixaila .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #llseixaila .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #llseixaila .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #llseixaila .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #llseixaila .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #llseixaila .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #llseixaila .gt_column_spanner_outer:first-child { padding-left: 0; } #llseixaila .gt_column_spanner_outer:last-child { padding-right: 0; } #llseixaila .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #llseixaila .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #llseixaila .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #llseixaila .gt_from_md > :first-child { margin-top: 0; } #llseixaila .gt_from_md > :last-child { margin-bottom: 0; } #llseixaila .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #llseixaila .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #llseixaila .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #llseixaila .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #llseixaila .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #llseixaila .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #llseixaila .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #llseixaila .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #llseixaila .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #llseixaila .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #llseixaila .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #llseixaila .gt_sourcenote { font-size: 90%; padding: 4px; } #llseixaila .gt_left { text-align: left; } #llseixaila .gt_center { text-align: center; } #llseixaila .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #llseixaila .gt_font_normal { font-weight: normal; } #llseixaila .gt_font_bold { font-weight: bold; } #llseixaila .gt_font_italic { font-style: italic; } #llseixaila .gt_super { font-size: 65%; } #llseixaila .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table 3.3 Conditional probabilities and association measures Measure Estimate CI1 p0 0.255 (0.19, 0.322) p1 0.301 (0.235, 0.371) rd 0.046 (0.003, 0.091) rr 1.182 (0.999, 1.396) rrstar 1.066 (1.002, 1.136) or 1.261 (1.005, 1.581) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval verify with authors results, p.52 bb &lt;- data.frame( name = c(&quot;p0&quot;, &quot;p1&quot;, &quot;rd&quot;, &quot;rr&quot;, &quot;rrstar&quot;, &quot;or&quot;), est = c(0.25458, 0.30101, 0.046438, 1.1824, 1.0664, 1.261), lci = c(0.18518, 0.22995, 0.0022706, 1.0039, 1.0018, 1.0091), uci = c(0.32397, 0.37208, 0.0906057, 1.3927, 1.1352, 1.5758)) stopifnot( all(abs(d$est - bb$est) &lt; 0.01), all(abs(d$lci - bb$lci) &lt; 0.015), all(abs(d$uci - bb$uci) &lt; 0.02)) 3.4 Exercises Please note that the solutions to exercises of Brumback (2022) below are my own and have not been verified or approved in any way by the author. 3.4.1 Exercise 1 dataGSS1 &lt;- gss[, c(&quot;owngun&quot;, &quot;conservative&quot;, &quot;gt65&quot;, &quot;female&quot;, &quot;white&quot;)] dataGSS1 &lt;- gss[complete.cases(dataGSS1), ] stopifnot(nrow(dataGSS1) == 1461) 3.4.1.1 a) unconditional probabilites This model corresponds to \\[ \\begin{align*} E(Y \\mid T) &amp;= \\beta_0 + \\beta_1 T \\\\ &amp;\\therefore \\\\ E(T \\mid T = 0) &amp;= E(owngun \\mid conservative = 0) = \\beta_0 \\\\ \\\\ E(T \\mid T = 1) &amp;= E(owngun \\mid conservative = 1) = \\beta_0 + \\beta_1 \\\\ \\end{align*} \\] message(&quot;this takes 20 sec.: we load a saved file instead&quot;) ## this takes 20 sec.: we load a saved file instead # startTime &lt;- Sys.time() # d1a &lt;- bootu(dat = dataGSS1, formula = owngun ~ conservative) a_file &lt;- file.path(dir_data, &quot;chap03_Ex1a.rds&quot;) # saveRDS(d1a, file = a_file) d1a &lt;- readRDS(file = a_file) # endTime &lt;- Sys.time() # print(endTime - startTime) gt_measures(d1a[, c(&quot;name&quot;, &quot;est&quot;, &quot;conf&quot;, &quot;lci&quot;, &quot;uci&quot;)], title = &quot;Exercise 1 a): Table 3.2&quot;, subtitle = &quot;Unconditional probabilities and association measures&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #xofgsyzgwi .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xofgsyzgwi .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xofgsyzgwi .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xofgsyzgwi .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #xofgsyzgwi .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xofgsyzgwi .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xofgsyzgwi .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xofgsyzgwi .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xofgsyzgwi .gt_column_spanner_outer:first-child { padding-left: 0; } #xofgsyzgwi .gt_column_spanner_outer:last-child { padding-right: 0; } #xofgsyzgwi .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xofgsyzgwi .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #xofgsyzgwi .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xofgsyzgwi .gt_from_md > :first-child { margin-top: 0; } #xofgsyzgwi .gt_from_md > :last-child { margin-bottom: 0; } #xofgsyzgwi .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xofgsyzgwi .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #xofgsyzgwi .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xofgsyzgwi .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #xofgsyzgwi .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xofgsyzgwi .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xofgsyzgwi .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xofgsyzgwi .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xofgsyzgwi .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xofgsyzgwi .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #xofgsyzgwi .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xofgsyzgwi .gt_sourcenote { font-size: 90%; padding: 4px; } #xofgsyzgwi .gt_left { text-align: left; } #xofgsyzgwi .gt_center { text-align: center; } #xofgsyzgwi .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xofgsyzgwi .gt_font_normal { font-weight: normal; } #xofgsyzgwi .gt_font_bold { font-weight: bold; } #xofgsyzgwi .gt_font_italic { font-style: italic; } #xofgsyzgwi .gt_super { font-size: 65%; } #xofgsyzgwi .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Exercise 1 a): Table 3.2 Unconditional probabilities and association measures Measure Estimate CI1 p0 0.308 (0.279, 0.336) p1 0.475 (0.431, 0.521) rd 0.167 (0.114, 0.223) rr 1.542 (1.349, 1.773) rrstar 1.318 (1.198, 1.454) or 2.033 (1.62, 2.571) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval From the results just above have that \\(E(owngun) = E(owngun \\mid conservative = 0)\\) and \\(E(owngun \\mid conservative = 1)\\) and that \\(E(owngun) - E(owngun \\mid conservative = 1)\\) is 0.17 (0.11, 0.22). Therefore people with conservative views sem more likely to oen a gun. But there is not necessarily a causality. See Inference section below. 3.4.1.2 b) conditional probabilites message(&quot;this takes 10 sec.: we load a saved file instead&quot;) ## this takes 10 sec.: we load a saved file instead # startTime &lt;- Sys.time() # d1b &lt;- bootc(dat = dataGSS1, # formula = owngun ~ conservative + gt65 + female + white, # cond0 = owngun ~ gt65 + white, # cond1 = owngun ~ conservative + gt65 + white) a_file &lt;- file.path(dir_data, &quot;chap03_Ex1b.rds&quot;) # saveRDS(d1b, file = a_file) d1b &lt;- readRDS(file = a_file) # endTime &lt;- Sys.time() # print(endTime - startTime) gt_measures(d1b[, c(&quot;name&quot;, &quot;est&quot;, &quot;conf&quot;, &quot;lci&quot;, &quot;uci&quot;)], title = &quot;Exercise 1 b): Table 3.3&quot;, subtitle = &quot;Conditional probabilities and association measures&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #llyupbqoqs .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #llyupbqoqs .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #llyupbqoqs .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #llyupbqoqs .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #llyupbqoqs .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #llyupbqoqs .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #llyupbqoqs .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #llyupbqoqs .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #llyupbqoqs .gt_column_spanner_outer:first-child { padding-left: 0; } #llyupbqoqs .gt_column_spanner_outer:last-child { padding-right: 0; } #llyupbqoqs .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #llyupbqoqs .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #llyupbqoqs .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #llyupbqoqs .gt_from_md > :first-child { margin-top: 0; } #llyupbqoqs .gt_from_md > :last-child { margin-bottom: 0; } #llyupbqoqs .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #llyupbqoqs .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #llyupbqoqs .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #llyupbqoqs .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #llyupbqoqs .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #llyupbqoqs .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #llyupbqoqs .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #llyupbqoqs .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #llyupbqoqs .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #llyupbqoqs .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #llyupbqoqs .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #llyupbqoqs .gt_sourcenote { font-size: 90%; padding: 4px; } #llyupbqoqs .gt_left { text-align: left; } #llyupbqoqs .gt_center { text-align: center; } #llyupbqoqs .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #llyupbqoqs .gt_font_normal { font-weight: normal; } #llyupbqoqs .gt_font_bold { font-weight: bold; } #llyupbqoqs .gt_font_italic { font-style: italic; } #llyupbqoqs .gt_super { font-size: 65%; } #llyupbqoqs .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Exercise 1 b): Table 3.3 Conditional probabilities and association measures Measure Estimate CI1 p0 0.471 (0.397, 0.541) p1 0.626 (0.555, 0.694) rd 0.155 (0.098, 0.213) rr 1.330 (1.185, 1.493) rrstar 1.415 (1.228, 1.623) or 1.881 (1.477, 2.388) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval Now if we let \\(E(owngun \\mid gt65, white) = E(Y \\mid T = 0, H = 1)\\) and \\(E(owngun \\mid conservative, gt65, white) = E(Y \\mid T = 1, H = 1)\\) then \\(RD = E(Y \\mid T = 1, H = 1) - E(Y \\mid T = 0, H = 1)\\) is 0.16 (0.10, 0.21) indicating that white male older than 65 with conservative views are more likely to own a gun than white male older than 65 with no declared conservative views. Again see comment in Inference section below which explains why we cannot conclude causality. 3.4.1.3 Inference Is the assumption that political views are formed before gun purchases realistic? Conservative views could be seen as preliminary to gun purchase but it could easily be argued that many people without conservative views buy guns. It is also unclear as to what conservative views are. This can be variable in different contexts and break the consistency assumption. The consistency assumption (see section 3.1, p.38) requires that the observed outcome be consistent with the potential outcomes. Importantly, he consistency assumption requires the potential outcomes to be well-defined (p.39). Therefore we would refrain from concluding that political views are a cause of gun ownership. What assumptions would be needed to interpret these estimates casually? The assumptions necessary to interpret the assumptions causally would be that there is no dependencies between white, gt65 and conservative owning a gun is not in itself a cause of conservative views 3.4.2 Exercise 2 dataGSS2 &lt;- gss[, c(&quot;trump&quot;, &quot;gthsedu&quot;, &quot;magthsedu&quot;, &quot;pagthsedu&quot;, &quot;white&quot;, &quot;female&quot;, &quot;gt65&quot;)] dataGSS2$pamiss &lt;- ifelse(is.na(dataGSS2$pagthsedu), 1, 0) dataGSS2$pagthsedu[is.na(dataGSS2$pagthsedu)] &lt;- 0 dataGSS2 &lt;- dataGSS2[complete.cases(dataGSS2), ] stopifnot(nrow(dataGSS2) == 2168) Let \\(Y = trump, T = gthsedu, H = white \\cap female \\cap gt65\\) then we have \\[ \\begin{align*} E(Y \\mid T, H, pagthsedu, pamiss) \\end{align*} \\] and we are using the following conditioning \\[ \\begin{align*} p_0 = E(Y \\mid T = 0, H, pagthsedu = 1, pamiss = 0) \\\\ p_1 = E(Y \\mid T = 1, H, pagthsedu = 1, pamiss = 0) \\end{align*} \\] and we use the logistic model to estimate the associaiton measures as follows message(&quot;this takes 10 sec.: we load a saved file instead&quot;) ## this takes 10 sec.: we load a saved file instead # startTime &lt;- Sys.time() # d2 &lt;- bootc(dat = dataGSS2, # formula = trump ~ gthsedu + magthsedu + white + female + gt65 + # pagthsedu + pamiss, # cond0 = trump ~ magthsedu + white + female + gt65 + pagthsedu, # cond1 = trump ~ gthsedu + magthsedu + white + female + gt65 + pagthsedu) a_file &lt;- file.path(dir_data, &quot;chap03_Ex2.rds&quot;) # saveRDS(d2, file = a_file) d2 &lt;- readRDS(file = a_file) # endTime &lt;- Sys.time() # print(endTime - startTime) gt_measures(d2[, c(&quot;name&quot;, &quot;est&quot;, &quot;conf&quot;, &quot;lci&quot;, &quot;uci&quot;)], title = &quot;Exercise 2: Table 3.3&quot;, subtitle = &quot;Conditional probabilities and association measures&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #iqcijaqrxl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #iqcijaqrxl .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iqcijaqrxl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #iqcijaqrxl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #iqcijaqrxl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iqcijaqrxl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iqcijaqrxl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #iqcijaqrxl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #iqcijaqrxl .gt_column_spanner_outer:first-child { padding-left: 0; } #iqcijaqrxl .gt_column_spanner_outer:last-child { padding-right: 0; } #iqcijaqrxl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #iqcijaqrxl .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #iqcijaqrxl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #iqcijaqrxl .gt_from_md > :first-child { margin-top: 0; } #iqcijaqrxl .gt_from_md > :last-child { margin-bottom: 0; } #iqcijaqrxl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #iqcijaqrxl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #iqcijaqrxl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iqcijaqrxl .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #iqcijaqrxl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iqcijaqrxl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #iqcijaqrxl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #iqcijaqrxl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iqcijaqrxl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iqcijaqrxl .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #iqcijaqrxl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iqcijaqrxl .gt_sourcenote { font-size: 90%; padding: 4px; } #iqcijaqrxl .gt_left { text-align: left; } #iqcijaqrxl .gt_center { text-align: center; } #iqcijaqrxl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #iqcijaqrxl .gt_font_normal { font-weight: normal; } #iqcijaqrxl .gt_font_bold { font-weight: bold; } #iqcijaqrxl .gt_font_italic { font-style: italic; } #iqcijaqrxl .gt_super { font-size: 65%; } #iqcijaqrxl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Exercise 2: Table 3.3 Conditional probabilities and association measures Measure Estimate CI1 p0 0.245 (0.165, 0.315) p1 0.286 (0.207, 0.357) rd 0.041 (-0.003, 0.087) rr 1.166 (0.988, 1.393) rrstar 1.057 (0.995, 1.127) or 1.233 (0.985, 1.566) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval The results are identical to the ones in table 3.3 of section 3.3. Since we are conditioning on \\(pagthsedu = 1, pamiss = 0\\) and that \\((pagthsedu = 1) \\Rightarrow (pamiss = 0)\\) then it is the same as conditioning on \\((pagthsedu = 1)\\) and so, since \\(pagthsedu\\) is always constant at 1, then it has no impact on the result. 3.4.3 Exercise 3 3.4.3.1 a) dataBRFSSa &lt;- brfss dataBRFSSa %&gt;% mutate(cat = paste(whitenh, blacknh, hisp, othernh, multinh, sep = &quot;-&quot;)) %&gt;% group_by(cat) %&gt;% count() ## # A tibble: 5 x 2 ## # Groups: cat [5] ## cat n ## &lt;chr&gt; &lt;int&gt; ## 1 0-0-0-0-1 7085 ## 2 0-0-0-1-0 16015 ## 3 0-0-1-0-0 25267 ## 4 0-1-0-0-0 25345 ## 5 1-0-0-0-0 273359 Note on the data: As just shown above, the variables whitenh, blacknh, hisp, othernh, multinh are mutually exclusive and thus can be seen as dummy variables for a category called \\(ethnicity\\). Therefore we need to include all of them in the analysis. Not just whitenh as one could wrongly assumed after reading the question. Yes, I made that mistake myself. Also, since they are dummy variavles, the reference variable need not be included. In this case the reference variable is othernh. The probabilities of consuming zero drinks \\(zerodrinks\\) related to residence in rural county \\(rural\\), conditioned on being male \\(female = 0\\), white non-hispanic \\(whitenh = 1\\), younger than 65 year-old \\(gt65 = 0\\) and having greater than high school education \\(gthsedu = 1\\) is \\[ \\begin{align*} P(zerodrinks &amp;\\mid rural \\cap female = 0 \\cap whitenh = 1 \\cap gt65 = 0 \\cap gthsedu = 1) \\\\ &amp;\\text{let} \\\\ Y &amp;= zerodrinks \\\\ T &amp;= rural \\\\ H = h \\ &amp;:= female = 0 \\cap whitenh = 1 \\cap gt65 = 0 \\cap gthsedu = 1 \\\\ &amp;\\therefore \\\\ P(Y &amp;\\mid T, H = h) \\end{align*} \\] and we are measuring \\[ \\begin{align*} p_0 = E(Y \\mid T = 0, H) \\\\ p_1 = E(Y \\mid T = 1, H) \\end{align*} \\] We use boot.c from above and remember that whitenh, blacknh, hisp, othernh, multinh are mutually exclusive dummy variables and so \\(whitenh = 1 \\implies blacknh = 0 \\cap hisp = 0 \\cap othernh = 0 \\cap multinh = 0\\). We also use only 500 bootstrapping iterations given te large volume of data. # startTime &lt;- Sys.time() # d3a &lt;- bootc(dat = dataBRFSSa, # formula = zerodrinks ~ rural + female + whitenh + blacknh + # hisp + multinh + gt65 + gthsedu, # cond0 = zerodrinks ~ whitenh + gthsedu, # cond1 = zerodrinks ~ rural + whitenh + gthsedu, # R = 500) # endTime &lt;- Sys.time() # print(endTime - startTime) message(&quot;This took 20 min, so we load a saved file.&quot;) ## This took 20 min, so we load a saved file. a_file &lt;- file.path(dir_data, &quot;chap03_Ex3a.rds&quot;) # saveRDS(d3a, file = a_file) d3a &lt;- readRDS(a_file) gt_measures(d3a[, c(&quot;name&quot;, &quot;est&quot;, &quot;conf&quot;, &quot;lci&quot;, &quot;uci&quot;)], title = &quot;Exercise 3 a): Table 3.3&quot;, subtitle = &quot;Conditional probabilities and association measures&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #iizpjarakv .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #iizpjarakv .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iizpjarakv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #iizpjarakv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #iizpjarakv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iizpjarakv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iizpjarakv .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #iizpjarakv .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #iizpjarakv .gt_column_spanner_outer:first-child { padding-left: 0; } #iizpjarakv .gt_column_spanner_outer:last-child { padding-right: 0; } #iizpjarakv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #iizpjarakv .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #iizpjarakv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #iizpjarakv .gt_from_md > :first-child { margin-top: 0; } #iizpjarakv .gt_from_md > :last-child { margin-bottom: 0; } #iizpjarakv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #iizpjarakv .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #iizpjarakv .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iizpjarakv .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #iizpjarakv .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iizpjarakv .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #iizpjarakv .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #iizpjarakv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iizpjarakv .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iizpjarakv .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #iizpjarakv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iizpjarakv .gt_sourcenote { font-size: 90%; padding: 4px; } #iizpjarakv .gt_left { text-align: left; } #iizpjarakv .gt_center { text-align: center; } #iizpjarakv .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #iizpjarakv .gt_font_normal { font-weight: normal; } #iizpjarakv .gt_font_bold { font-weight: bold; } #iizpjarakv .gt_font_italic { font-style: italic; } #iizpjarakv .gt_super { font-size: 65%; } #iizpjarakv .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Exercise 3 a): Table 3.3 Conditional probabilities and association measures Measure Estimate CI1 p0 0.295 (0.292, 0.297) p1 0.351 (0.347, 0.356) rd 0.057 (0.052, 0.061) rr 1.192 (1.178, 1.208) rrstar 1.087 (1.08, 1.095) or 1.297 (1.272, 1.322) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval We observe that \\(P(Y \\mid T = 1, H = h) = 0.35\\) and \\(P(Y \\mid T = 0, H = h) = 0.29\\) so that the fact that male, white non-hispanic people younger than 65 with higher education are more likely to not have any drink in the past month. To conclude causality we must ensure the consistency assumption (see p. 39) and the positivity assumption (see p. 41). In other words consistency assumption: The relation between the the potential and observed outcome is well defined. Here it seems that not having a drink in the past month is clearly linked to the potential outcome. positivity assumption: We must have \\(0 &lt; P(Y \\mid T, H) &lt; 1\\) which is the case here. 3.4.3.2 b) We restrict the brfss data to only include lines where respondents consumed alcoholic drinks during the past 30 days \\(maxdrinks \\neq 0\\) dataBRFSSb &lt;- brfss[brfss$maxdrinks != 0, c(&quot;whitenh&quot;, &quot;blacknh&quot;, &quot;hisp&quot;, &quot;othernh&quot;, &quot;multinh&quot;, &quot;gt65&quot;, &quot;female&quot;, &quot;rural&quot;, &quot;gthsedu&quot;, &quot;zerodrinks&quot;, &quot;maxdrinks&quot;)] All the comments from a) above on the ethnicity variables applies. The same rational is used to define the variables so that we now have # startTime &lt;- Sys.time() # d3b &lt;- bootc(dat = dataBRFSSb, # formula = maxdrinks ~ rural + female + whitenh + blacknh + # hisp + multinh + gt65 + gthsedu, # cond0 = maxdrinks ~ whitenh + gthsedu, # cond1 = maxdrinks ~ rural + whitenh + gthsedu, # family = &quot;poisson&quot;, R = 500) # endTime &lt;- Sys.time() # print(endTime - startTime) message(&quot;This took 20 min, so we load a saved file.&quot;) ## This took 20 min, so we load a saved file. a_file &lt;- file.path(dir_data, &quot;chap03_Ex3b.rds&quot;) # saveRDS(d3b, file = a_file) d3b &lt;- readRDS(a_file) gt_measures(d3b[, c(&quot;name&quot;, &quot;est&quot;, &quot;conf&quot;, &quot;lci&quot;, &quot;uci&quot;)], title = &quot;Exercise 3 b): Table 3.3&quot;, subtitle = &quot;Conditional probabilities and association measures&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gffmkpgirv .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gffmkpgirv .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gffmkpgirv .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gffmkpgirv .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #gffmkpgirv .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gffmkpgirv .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gffmkpgirv .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gffmkpgirv .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gffmkpgirv .gt_column_spanner_outer:first-child { padding-left: 0; } #gffmkpgirv .gt_column_spanner_outer:last-child { padding-right: 0; } #gffmkpgirv .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gffmkpgirv .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gffmkpgirv .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gffmkpgirv .gt_from_md > :first-child { margin-top: 0; } #gffmkpgirv .gt_from_md > :last-child { margin-bottom: 0; } #gffmkpgirv .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gffmkpgirv .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #gffmkpgirv .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gffmkpgirv .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #gffmkpgirv .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gffmkpgirv .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gffmkpgirv .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gffmkpgirv .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gffmkpgirv .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gffmkpgirv .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #gffmkpgirv .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gffmkpgirv .gt_sourcenote { font-size: 90%; padding: 4px; } #gffmkpgirv .gt_left { text-align: left; } #gffmkpgirv .gt_center { text-align: center; } #gffmkpgirv .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gffmkpgirv .gt_font_normal { font-weight: normal; } #gffmkpgirv .gt_font_bold { font-weight: bold; } #gffmkpgirv .gt_font_italic { font-style: italic; } #gffmkpgirv .gt_super { font-size: 65%; } #gffmkpgirv .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Exercise 3 b): Table 3.3 Conditional probabilities and association measures Measure Estimate CI1 p0 0.815 (0.814, 0.817) p1 0.820 (0.818, 0.822) rd 0.004 (0.003, 0.006) rr 1.005 (1.003, 1.008) rrstar 1.025 (1.014, 1.036) or 1.030 (1.017, 1.044) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval We note that the expected rate for rural \\(p_1 = 0.82\\) vs non-rural residents \\(p_1 = 0.82\\) is not much different. Therefore whether the person resides in a rural area or not does not make it more likely to drink. The consistency and positivity assumptions as described in a) above would also be reauired to conclude causality. 3.4.4 Exercise 4 As discussed on p. 39, the consistency assumption requires that the potential outcome be well defined. We have to state that the extrapolation would apply only to the specific percentages of exposure in the experiment. To say it in the words of page 39, Extrapolation to a situation where the percentage is not the same would be tenuous. also, the following points, mentioned in p. 40, are important The fact that the difference in exposure rate is caused by chance is always a possibility and makes extrapolation tenuous The study population may no longer be relevant as vaccination rate and recovery rate (i.e. infected people who recovered) could have changed significantly in the meantime One must keep in mind that extrapolating an average result to any individual is problematic. References "],["measures.html", "Chapter 4 Effect-Measure Modification and Causal Interaction 4.1 Effect-Measure Modification and Statistical Interaction 4.2 Qualitative Agreement of Effect Measures in Modification 4.3 Causal Interaction 4.4 Exercises", " Chapter 4 Effect-Measure Modification and Causal Interaction library(dplyr, quietly = TRUE) library(tidyr, quietly = TRUE) library(gt, quietly = TRUE) library(ggplot2, quietly = TRUE) library(boot, quietly = TRUE) library(gee, quietly = TRUE) library(MonteCarlo, quietly = TRUE) library(ggvenn, quietly = TRUE) 4.1 Effect-Measure Modification and Statistical Interaction 4.1.1 RECOVERY trial Create the data.frame for RECOVERY trial recovery &lt;- expand.grid(Y = 0:1, `T` = 0:1, M = 0:1) recovery$n &lt;- as.integer(c(787, 2851, 368, 1412, 278, 405, 86, 238)) recovery &lt;- lapply(X = seq_len(nrow(recovery)), FUN = function(i) { data.frame( M = rep(recovery$M[i], recovery$n[i]), `T` = rep(recovery$`T`[i], recovery$n[i]), Y = rep(recovery$Y[i], recovery$n[i]) ) }) recovery &lt;- do.call(rbind, recovery) # create an id variable for use with gee() later recovery$id &lt;- seq_len(nrow(recovery)) #&#39; Compute estimates of the association measures for 2 strata #&#39; #&#39; Compute estimates of the association measures for 2 strata. #&#39; #&#39; IMPORTANT: #&#39; The formula must always be in form Y ~ `T` + M, that is with only #&#39; 2 predictors: T as the treatment variable and M as the modifier #&#39; variable #&#39; #&#39; @param dat Dataframe of raw data. #&#39; @param formula Formula in format \\code{Y ~ `T` + M} #&#39; @R Number of bootstrap replicates. #&#39; @conf Confidence interval #&#39; #&#39; @return Dataframe of summarized results boot &lt;- function(dat, formula = Y ~ `T` + M, R = 1000, conf = 0.95) { # the name of the response variable y &lt;- all.vars(formula[[2]]) # the name of the treatment variable t &lt;- all.vars(formula[[3]])[1] # the name of the modifier variable m &lt;- all.vars(formula[[3]])[2] estimator &lt;- function(data, ids) { dat &lt;- data[ids, ] # estimate the expected potential outcomes EYT0.M0 &lt;- mean(dat[dat[, t] == 0 &amp; dat[, m] == 0, y]) EYT0.M1 &lt;- mean(dat[dat[, t] == 0 &amp; dat[, m] == 1, y]) EYT1.M0 &lt;- mean(dat[dat[, t] == 1 &amp; dat[, m] == 0, y]) EYT1.M1 &lt;- mean(dat[dat[, t] == 1 &amp; dat[, m] == 1, y]) # estimate the effect measures RD.M0 &lt;- EYT1.M0 - EYT0.M0 RD.M1 &lt;- EYT1.M1 - EYT0.M1 logRR.M0 &lt;- log(EYT1.M0 / EYT0.M0) logRR.M1 &lt;- log(EYT1.M1 / EYT0.M1) logRRstar.M0 &lt;- log((1 - EYT0.M0) / (1 - EYT1.M0)) logRRstar.M1 &lt;- log((1 - EYT0.M1) / (1 - EYT1.M1)) logOR.M0 &lt;- logRR.M0 + logRRstar.M0 logOR.M1 &lt;- logRR.M1 + logRRstar.M1 # the effect measure difference EYT0.diff &lt;- EYT0.M1 - EYT0.M0 EYT1.diff &lt;- EYT1.M1 - EYT1.M0 RD.diff &lt;- RD.M1 - RD.M0 logRR.diff &lt;- logRR.M1 - logRR.M0 logRRstar.diff &lt;- logRRstar.M1 - logRRstar.M0 logOR.diff &lt;- logOR.M1 - logOR.M0 out &lt;- c(EYT0.M0, EYT0.M1, EYT1.M0, EYT1.M1, RD.M0, RD.M1, logRR.M0, logRR.M1, logRRstar.M0, logRRstar.M1, logOR.M0, logOR.M1, EYT0.diff, EYT1.diff, RD.diff, logRR.diff, logRRstar.diff, logOR.diff) names(out) &lt;- c(&quot;EYT0.M0&quot;, &quot;EYT0.M1&quot;, &quot;EYT1.M0&quot;, &quot;EYT1.M1&quot;, &quot;RD.M0&quot;, &quot;RD.M1&quot;, &quot;logRR.M0&quot;, &quot;logRR.M1&quot;, &quot;logRRstar.M0&quot;, &quot;logRRstar.M1&quot;, &quot;logOR.M0&quot;, &quot;logOR.M1&quot;, &quot;EYT0.diff&quot;, &quot;EYT1.diff&quot;, &quot;RD.diff&quot;, &quot;logRR.diff&quot;, &quot;logRRstar.diff&quot;, &quot;logOR.diff&quot;) out } out &lt;- run_boot(data = dat, statistic = estimator, R = R, conf = conf) # vector of variables to exponentiate vars &lt;- c(&quot;RR.M0&quot; = &quot;logRR.M0&quot;, &quot;RR.M1&quot; = &quot;logRR.M1&quot;, &quot;RR.diff&quot; = &quot;logRR.diff&quot;, &quot;RRstar.M0&quot; = &quot;logRRstar.M0&quot;, &quot;RRstar.M1&quot; = &quot;logRRstar.M1&quot;, &quot;RRstar.diff&quot; = &quot;logRRstar.diff&quot;, &quot;OR.M0&quot; = &quot;logOR.M0&quot;, &quot;OR.M1&quot; = &quot;logOR.M1&quot;, &quot;OR.diff&quot; = &quot;logOR.diff&quot;) out &lt;- exp_effects(data = out, vars = vars) out } run boot() with the RECOVERY data set recovery.out &lt;- boot(recovery, formula = Y ~ `T` + M) verify the results with the authors on p. 65. bb &lt;- data.frame( name = c(&quot;EYT0.M0&quot;, &quot;EYT0.M1&quot;, &quot;EYT1.M0&quot;, &quot;EYT1.M1&quot;, &quot;RD.M0&quot;, &quot;RD.M1&quot;, &quot;EYT0.diff&quot;, &quot;EYT1.diff&quot;, &quot;RD.diff&quot;, &quot;RR.M0&quot;, &quot;RR.M1&quot;, &quot;RR.diff&quot;, &quot;RRstar.M0&quot;, &quot;RRstar.M1&quot;, &quot;RRstar.diff&quot;, &quot;OR.M0&quot;, &quot;OR.M1&quot;, &quot;OR.diff&quot;), est = c(0.784, 0.593, 0.793, 0.735, 0.01, 0.142, -0.191, -0.059, 0.132, 1.012, 1.239, 1.224, 1.046, 1.533, 1.466, 1.059, 1.9, 1.794) ) comp &lt;- data.frame(bb = bb, d = recovery.out[match(bb$name, recovery.out$name), &quot;est&quot;]) comp$dev &lt;- abs(comp$bb.est - comp$d) stopifnot(sum(comp$dev) &lt; 0.01) and we communicate the results in a table gt_measures_modif(recovery.out, title = &quot;Table 4.2 RECOVERY Trial&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #iojjvmuvdq .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #iojjvmuvdq .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iojjvmuvdq .gt_title { color: #333333; font-size: 125%; font-weight: bold; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #iojjvmuvdq .gt_subtitle { color: #333333; font-size: 85%; font-weight: bold; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #iojjvmuvdq .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iojjvmuvdq .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #iojjvmuvdq .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #iojjvmuvdq .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #iojjvmuvdq .gt_column_spanner_outer:first-child { padding-left: 0; } #iojjvmuvdq .gt_column_spanner_outer:last-child { padding-right: 0; } #iojjvmuvdq .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #iojjvmuvdq .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #iojjvmuvdq .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #iojjvmuvdq .gt_from_md > :first-child { margin-top: 0; } #iojjvmuvdq .gt_from_md > :last-child { margin-bottom: 0; } #iojjvmuvdq .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #iojjvmuvdq .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #iojjvmuvdq .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iojjvmuvdq .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #iojjvmuvdq .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #iojjvmuvdq .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #iojjvmuvdq .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #iojjvmuvdq .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #iojjvmuvdq .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iojjvmuvdq .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #iojjvmuvdq .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #iojjvmuvdq .gt_sourcenote { font-size: 90%; padding: 4px; } #iojjvmuvdq .gt_left { text-align: left; } #iojjvmuvdq .gt_center { text-align: center; } #iojjvmuvdq .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #iojjvmuvdq .gt_font_normal { font-weight: normal; } #iojjvmuvdq .gt_font_bold { font-weight: bold; } #iojjvmuvdq .gt_font_italic { font-style: italic; } #iojjvmuvdq .gt_super { font-size: 65%; } #iojjvmuvdq .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table 4.2 RECOVERY Trial Effect-measure Modification M0 M1 diff Estimate CI1 Estimate CI1 Estimate CI1 EYT0 0.784 (0.77, 0.797) 0.593 (0.555, 0.629) -0.191 (-0.23, -0.153) EYT1 0.793 (0.774, 0.812) 0.735 (0.686, 0.785) -0.059 (-0.11, -0.005) RD 0.010 (-0.014, 0.033) 0.142 (0.08, 0.207) 0.132 (0.067, 0.201) RR 1.012 (0.982, 1.043) 1.239 (1.131, 1.366) 1.224 (1.114, 1.354) RRstar 1.046 (0.934, 1.169) 1.533 (1.243, 1.904) 1.466 (1.161, 1.867) OR 1.059 (0.918, 1.218) 1.900 (1.41, 2.594) 1.794 (1.298, 2.52) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval plotting the results makes it easier to see the measures vary among the strata. We can clearly see here significant difference in effect measures between the 2 strata. It supports the observation in the text concerning the lack of effect of dexamethasone without intrusive mechanical ventilation (M0) vs its use with intrusive mechanical ventilation (M1) which is significant. ggp_measures_modif(recovery.out, title = &quot;RECOVERY trial&quot;) The gee::gee() function is used to find information on the coefficients and see if they are statistically significant. The same could be done withe glm::glm() but gee offers results with robust statistics which is very useful in practical terms. Luckily, the gee() works exactly like the glm() functions, with the same extractor functions coefficients(), effects(), etc. See the documentation of lm with ?lm for more details. We are going through an example just below to illustrate how tthe extractor functions are used which is not shown in the textbook. linmod &lt;- gee::gee(Y ~ `T` + M + `T` * M, id = id, data = recovery, family = gaussian) ## Beginning Cgee S-function, @(#) geeformula.q 4.13 98/01/27 ## running glm to get initial regression estimate ## (Intercept) T M T:M ## 0.78367235 0.00958608 -0.19070017 0.13200964 summary(linmod) ## ## GEE: GENERALIZED LINEAR MODELS FOR DEPENDENT DATA ## gee S-function, version 4.13 modified 98/01/27 (1998) ## ## Model: ## Link: Identity ## Variance to Mean Relation: Gaussian ## Correlation Structure: Independent ## ## Call: ## gee::gee(formula = Y ~ T + M + T * M, id = id, data = recovery, ## family = gaussian) ## ## Summary of Residuals: ## Min 1Q Median 3Q Max ## -0.7932584 0.2067416 0.2163277 0.2163277 0.4070278 ## ## ## Coefficients: ## Estimate Naive S.E. Naive z Robust S.E. Robust z ## (Intercept) 0.78367235 0.006975704 112.3431253 0.006826403 114.8001855 ## T 0.00958608 0.012170195 0.7876686 0.011778554 0.8138588 ## M -0.19070017 0.017545664 -10.8687918 0.019999408 -9.5352906 ## T:M 0.13200964 0.030881745 4.2746820 0.033074076 3.9913327 ## ## Estimated Scale Parameter: 0.1770267 ## Number of Iterations: 1 ## ## Working Correlation ## [,1] ## [1,] 1 To extract the coefficients from the gee object we use the extractor function coefficients() or its alias coef() coef(linmod) ## (Intercept) T M T:M ## 0.78367235 0.00958608 -0.19070017 0.13200964 and to extract the entire coefficient data to work with it, just use coefficients() with summary() coef(summary(linmod)) ## Estimate Naive S.E. Naive z Robust S.E. Robust z ## (Intercept) 0.78367235 0.006975704 112.3431253 0.006826403 114.8001855 ## T 0.00958608 0.012170195 0.7876686 0.011778554 0.8138588 ## M -0.19070017 0.017545664 -10.8687918 0.019999408 -9.5352906 ## T:M 0.13200964 0.030881745 4.2746820 0.033074076 3.9913327 and in this case we are concerned about how significant the interaction is. Therefore the Robust z is extracted with coefficients() alias coef() coef(summary(linmod))[, &quot;Robust z&quot;] ## (Intercept) T M T:M ## 114.8001855 0.8138588 -9.5352906 3.9913327 we see that \\(T:M\\) is 3.99 standard deviations away from zero which will give us the 2-sided p-value that is significant z &lt;- coef(summary(linmod))[&quot;T:M&quot;, &quot;Robust z&quot;] 2 * (1 - pnorm(z)) ## [1] 6.570304e-05 4.1.2 NCES We process the NCES data the same way we did for the RECOVERY trial. Run the bootsrap nces.out &lt;- boot(nces, formula = highmathsat ~ female + selective) verify the results with the authors on p. 70. bb &lt;- data.frame( name = c(&quot;EYT0.M0&quot;, &quot;EYT0.M1&quot;, &quot;EYT1.M0&quot;, &quot;EYT1.M1&quot;, &quot;RD.M0&quot;, &quot;RD.M1&quot;, &quot;EYT0.diff&quot;, &quot;EYT1.diff&quot;, &quot;RD.diff&quot;, &quot;RR.M0&quot;, &quot;RR.M1&quot;, &quot;RR.diff&quot;, &quot;RRstar.M0&quot;, &quot;RRstar.M1&quot;, &quot;RRstar.diff&quot;, &quot;OR.M0&quot;, &quot;OR.M1&quot;, &quot;OR.diff&quot;), est = c(0.167, 0.675, 0.081, 0.345, -0.086, -0.33, 0.509, 0.264, -0.244, 0.486, 0.511, 1.052, 0.907, 0.496, 0.547, 0.44, 0.254, 0.576) ) comp &lt;- data.frame(bb = bb, d = nces.out[match(bb$name, nces.out$name), &quot;est&quot;]) comp$dev &lt;- abs(comp$bb.est - comp$d) stopifnot(sum(comp$dev) &lt; 0.01) and the table is gt_measures_modif(nces.out, title = &quot;Table 4.3 NCES data&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #yxbpwulhdl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #yxbpwulhdl .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yxbpwulhdl .gt_title { color: #333333; font-size: 125%; font-weight: bold; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #yxbpwulhdl .gt_subtitle { color: #333333; font-size: 85%; font-weight: bold; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #yxbpwulhdl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yxbpwulhdl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yxbpwulhdl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #yxbpwulhdl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #yxbpwulhdl .gt_column_spanner_outer:first-child { padding-left: 0; } #yxbpwulhdl .gt_column_spanner_outer:last-child { padding-right: 0; } #yxbpwulhdl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #yxbpwulhdl .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #yxbpwulhdl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #yxbpwulhdl .gt_from_md > :first-child { margin-top: 0; } #yxbpwulhdl .gt_from_md > :last-child { margin-bottom: 0; } #yxbpwulhdl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #yxbpwulhdl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #yxbpwulhdl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yxbpwulhdl .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #yxbpwulhdl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yxbpwulhdl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #yxbpwulhdl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #yxbpwulhdl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yxbpwulhdl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yxbpwulhdl .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #yxbpwulhdl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yxbpwulhdl .gt_sourcenote { font-size: 90%; padding: 4px; } #yxbpwulhdl .gt_left { text-align: left; } #yxbpwulhdl .gt_center { text-align: center; } #yxbpwulhdl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #yxbpwulhdl .gt_font_normal { font-weight: normal; } #yxbpwulhdl .gt_font_bold { font-weight: bold; } #yxbpwulhdl .gt_font_italic { font-style: italic; } #yxbpwulhdl .gt_super { font-size: 65%; } #yxbpwulhdl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table 4.3 NCES data Effect-measure Modification M0 M1 diff Estimate CI1 Estimate CI1 Estimate CI1 EYT0 0.167 (0.135, 0.198) 0.675 (0.602, 0.749) 0.509 (0.428, 0.589) EYT1 0.081 (0.056, 0.106) 0.345 (0.248, 0.451) 0.264 (0.163, 0.374) RD -0.086 (-0.125, -0.047) -0.330 (-0.453, -0.199) -0.244 (-0.374, -0.106) RR 0.486 (0.34, 0.702) 0.511 (0.377, 0.726) 1.052 (0.653, 1.754) RRstar 0.907 (0.866, 0.949) 0.496 (0.378, 0.664) 0.547 (0.415, 0.736) OR 0.440 (0.296, 0.663) 0.253 (0.147, 0.468) 0.576 (0.289, 1.21) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval and we plot the results ggp_measures_modif(nces.out, title = &quot;NCES data&quot;) We observe that RD: Risk difference shows that using selection to accept more women seem to decrease the % of school with hogh math SAT OR and RRstar: Show the same results as RD RR: Indicates that selection, in relative terms has no significant effect 4.2 Qualitative Agreement of Effect Measures in Modification This section relies heavily on the paper from Shannin and Brumback (2021) Jake Shannin (2021). It used a Monte-Carlo simulation in java by jake running 1000000 times for six effect measures (the 4 in this chapter, the hazard ratio HR and the recovery ration HR*). For the purpose of this project we only simulate the 4 effect measures discussed so far (RD, RR, RR* and OR). We use R package MonteCarlo with 5000 repetitions. The distribution used for simulation is the beta distribution which is generally used for values in [0,1]. It is also used as a prior of binomial regression in Bayes analysis which is the subject covered a little later in this section. Regardless if the 6 effects measures from Jake Shannin (2021) or the 4 from Brumback (2022) are used, the process and conclusion are the same. We point out that using the distribution \\(Beta(1, 1) \\sim Uniform(0, 1)\\) is equivalent to running a grid search. It is also equivalent to the uniform distribution used in Jake Shannin (2021). 4.2.1 Simulate the effect measures We run the Monte-Carlo simulation without constraint and with \\(Beta(1,1)\\) which is equivalent to \\(Uniform(0,1)\\) used by Jake Shannin (2021). message(&quot;this takes 1 sec.: we load a saved file instead&quot;) ## this takes 1 sec.: we load a saved file instead startTime &lt;- Sys.time() # gridsim &lt;- betasim_effect_measures(shape1 = 1, shape2 = 1, nrep = 5000) a_file &lt;- file.path(dir_data, &quot;chap04_gridsim.rds&quot;) # saveRDS(gridsim, file = a_file) gridsim &lt;- readRDS(file = a_file) endTime &lt;- Sys.time() # print(endTime - startTime) which gives the vector of percentages unlist(gridsim) ## RD_RR RD_RRstar RD_OR RR_RRstar ## 0.0000 0.0000 0.0000 0.0000 ## RR_OR RRstar_OR RD_RR_vs_RRstar_OR RD_RRstar_vs_RR_OR ## 0.0000 0.0000 0.0256 0.0278 ## RD_OR_vs_RR_RRstar RD_RR_RRstar RD_RR_OR RD_RRstar_OR ## 0.0000 0.0000 0.0556 0.0550 ## RR_RRstar_OR RD_RR_RRstar_OR NONE ## 0.0000 0.8360 0.0000 For the following discussion, we must note the following about the vector of percentages returned by the simulation. Pairwise events: Some measures move as 1 pair in the same direction while all the other pairs move in different direction between each other. These are 6 possibilities named RD_RR,RD_RRstar, RD_OR, RR_RRstar, RR_OR, RRstar_OR. Opposite pairwise events: Some measures move as 2 pairs but each of the 2 pairs does not move in the same direction. There are 3 possibilities, called RD_RR_vs_RRstar_OR, RD_RRstar_vs_RR_OR and RD_OR_vs_RR_RRstar. These are the problematic ones as they cannot be represented in the Venn diagram of section 4.2. However we can distribute them to ensure probabilities add up to 1. For example RD_RR_vs_RRstar_OR will be split 50% between pairwise events RD_RR and 50% to pairwise eventRRstar_OR. This enforces the very important rule that probabilities must add up to 1 without consequences on the conclusions reached. 3-wise events: Some 3 measures move in the same direction together There are 4 possibilities called RD_RR_RRstar, RD_RR_OR, RD_RRstar_OR and RR_RRstar_OR. All events: Sometimes all measures move together. This is the possibility of interest discussed by Shannin and Brumback (2021). This possibility is called ALL. No event: The possibility NONE concerns the event that no pair of measures move in the same direction. It is impossible and represents the empty set \\(\\emptyset\\) which is one of the 3 conditions of a \\(\\sigma-field\\). Validation: The sum of the vectors elements must be one. The event definitions above ensure that the sample space is actually a \\(\\sigma-field\\). See Geoffrey R. Grimmet (2001), section 1.2. then we compare with the authors results bb &lt;- c(&quot;RD_RR&quot; = 0.026, &quot;RD_RRstar&quot; = 0.026, &quot;RD_OR&quot; = 0, &quot;RR_RRstar&quot; = 0, &quot;RR_OR&quot; = 0.026, &quot;RRstar_OR&quot; = 0.026, &quot;RD_RR_vs_RRstar_OR&quot; = 0, &quot;RD_RRstar_vs_RR_OR&quot; = 0, &quot;RD_OR_vs_RR_RRstar&quot; = 0, &quot;RD_RR_RRstar&quot; = 0, &quot;RD_RR_OR&quot; = 0.057, &quot;RD_RRstar_OR&quot; = 0.057, &quot;RR_RRstar_OR&quot; = 0, &quot;RD_RR_RRstar_OR&quot; = 0.833, &quot;NONE&quot; = 0) comp &lt;- data.frame(bb = round(bb, 4), sim = round(unlist(gridsim), 4)) comp ## bb sim ## RD_RR 0.026 0.0000 ## RD_RRstar 0.026 0.0000 ## RD_OR 0.000 0.0000 ## RR_RRstar 0.000 0.0000 ## RR_OR 0.026 0.0000 ## RRstar_OR 0.026 0.0000 ## RD_RR_vs_RRstar_OR 0.000 0.0256 ## RD_RRstar_vs_RR_OR 0.000 0.0278 ## RD_OR_vs_RR_RRstar 0.000 0.0000 ## RD_RR_RRstar 0.000 0.0000 ## RD_RR_OR 0.057 0.0556 ## RD_RRstar_OR 0.057 0.0550 ## RR_RRstar_OR 0.000 0.0000 ## RD_RR_RRstar_OR 0.833 0.8360 ## NONE 0.000 0.0000 The results from the Monte Carlo simulation above confirm the main conclusion from Jake Shannin (2021) that all effect measures move together 84% of the time. c(&quot;simulation&quot; = unname(unlist(gridsim[&quot;RD_RR_RRstar_OR&quot;])), &quot;author&#39;s&quot; = unname(bb[&quot;RD_RR_RRstar_OR&quot;])) ## simulation author&#39;s ## 0.836 0.833 We note that the sim adds up correctly to 1 but not the authors which adds up to 1.051. This is explained on p. 72 as a bit of arbitrary allocations. The Jake Shannin (2021) paper (caption figure 1) mentions that they do not add to 1 because they include events that are not mutually exclusive. c(&quot;simulation&quot; = sum(unlist(gridsim)), &quot;author&#39;s&quot; = sum(bb)) ## simulation author&#39;s ## 1.000 1.051 Actually, this is caused by the Opposite pairwise events which cannot be represented in the 4-set Venn diagram. For the purpose of this books we will simply split them between the events that makes them up without consequence on the conclusion. The Opposite pairwise events are the following # The events that pair of measures move together but in opposite # direction of another pair who also move together unlist(gridsim[c(&quot;RD_RR_vs_RRstar_OR&quot;, &quot;RD_RRstar_vs_RR_OR&quot;, &quot;RD_OR_vs_RR_RRstar&quot;)]) ## RD_RR_vs_RRstar_OR RD_RRstar_vs_RR_OR RD_OR_vs_RR_RRstar ## 0.0256 0.0278 0.0000 and when we split them between their 2 sub-events we can generate the Venn diagram as follows ggp_venn_sim(gridsim, n = 1000, fill_colr = c(&quot;blue&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;red&quot;), title = &quot;Venn diagram of effect measure modifications&quot;) now for constrained data message(&quot;this takes 1 sec.: we load a saved file instead&quot;) ## this takes 1 sec.: we load a saved file instead startTime &lt;- Sys.time() # gridsim_const &lt;- betasim_effect_measures(shape1 = 1, shape2 = 1, nrep = 5000, # constrained = TRUE) a_file &lt;- file.path(dir_data, &quot;chap04_gridsim_const.rds&quot;) # saveRDS(gridsim_const, file = a_file) gridsim_const &lt;- readRDS(file = a_file) endTime &lt;- Sys.time() # print(endTime - startTime) which gives the vector of percentages unlist(gridsim_const) ## RD_RR RD_RRstar RD_OR RR_RRstar ## 0.0000000 0.0000000 0.0000000 0.0000000 ## RR_OR RRstar_OR RD_RR_vs_RRstar_OR RD_RRstar_vs_RR_OR ## 0.0000000 0.0000000 0.0486166 0.0541502 ## RD_OR_vs_RR_RRstar RD_RR_RRstar RD_RR_OR RD_RRstar_OR ## 0.0000000 0.0000000 0.1177866 0.1158103 ## RR_RRstar_OR RD_RR_RRstar_OR NONE ## 0.0000000 0.6636364 0.0000000 and comparing to the authors results bb_const &lt;- c(&quot;RD_RR&quot; = 0.053, &quot;RD_RRstar&quot; = 0.053, &quot;RD_OR&quot; = 0.053, &quot;RR_RRstar&quot; = 0, &quot;RR_OR&quot; = 0.053, &quot;RRstar_OR&quot; = 0.0, &quot;RD_RR_vs_RRstar_OR&quot; = 0, &quot;RD_RRstar_vs_RR_OR&quot; = 0, &quot;RD_OR_vs_RR_RRstar&quot; = 0, &quot;RD_RR_RRstar&quot; = 0, &quot;RD_RR_OR&quot; = 0.114, &quot;RD_RRstar_OR&quot; = 0.114, &quot;RR_RRstar_OR&quot; = 0, &quot;RD_RR_RRstar_OR&quot; = 0.667, &quot;NONE&quot; = 0) sum(bb_const) ## [1] 1.107 comp &lt;- data.frame(bb = round(bb_const, 4), sim = round(unlist(gridsim_const), 4)) comp ## bb sim ## RD_RR 0.053 0.0000 ## RD_RRstar 0.053 0.0000 ## RD_OR 0.053 0.0000 ## RR_RRstar 0.000 0.0000 ## RR_OR 0.053 0.0000 ## RRstar_OR 0.000 0.0000 ## RD_RR_vs_RRstar_OR 0.000 0.0486 ## RD_RRstar_vs_RR_OR 0.000 0.0542 ## RD_OR_vs_RR_RRstar 0.000 0.0000 ## RD_RR_RRstar 0.000 0.0000 ## RD_RR_OR 0.114 0.1178 ## RD_RRstar_OR 0.114 0.1158 ## RR_RRstar_OR 0.000 0.0000 ## RD_RR_RRstar_OR 0.667 0.6636 ## NONE 0.000 0.0000 The results from the Monte Carlo simulation with the constrained data agree the authors result. c(&quot;simulation&quot; = unname(unlist(gridsim_const[&quot;RD_RR_RRstar_OR&quot;])), &quot;author&#39;s&quot; = unname(bb_const[&quot;RD_RR_RRstar_OR&quot;])) ## simulation author&#39;s ## 0.6636364 0.6670000 Again the Opposite pairwise events cannot be represented in the 4-set Venn diagram. # The events that pair of measures move together but in opposite # direction of another pair who also move together unlist(gridsim_const[c(&quot;RD_RR_vs_RRstar_OR&quot;, &quot;RD_RRstar_vs_RR_OR&quot;, &quot;RD_OR_vs_RR_RRstar&quot;)]) ## RD_RR_vs_RRstar_OR RD_RRstar_vs_RR_OR RD_OR_vs_RR_RRstar ## 0.0486166 0.0541502 0.0000000 but if we do it as mentioned above then we can show a Venn diagram as follows # This is a custom function using the venn package ggp_venn_sim(gridsim_const, fill_colr = c(&quot;cyan&quot;, &quot;gold&quot;, &quot;springgreen&quot;, &quot;hotpink&quot;), title = &quot;Venn diagram for constrained data&quot;) 4.2.2 Applications 4.2.2.1 Simulation of distribution of effect measures We use a parametric Monte Carlo simulation using the beta distribution to evaluate the effect of the distribution assumption on the effect-measure modifications. We run the Monte-Carlo simulation with 5000 repetitions, a grid of shape1 and shape2 parameters for the Beta distribution and no constraint. Namely betasim_effect_measures(shape1 = c(0.5, 1, 3, 5, 7), shape2 = c(0.5, 1, 3, 5, 7), nrep = 5000) message(&quot;this takes 25 sec.: we load a saved file instead&quot;) ## this takes 25 sec.: we load a saved file instead startTime &lt;- Sys.time() # priorsim &lt;- betasim_effect_measures(shape1 = c(0.5, 1, 3, 5, 7), # shape2 = c(0.5, 1, 3, 5, 7), # nrep = 5000) a_file &lt;- file.path(dir_data, &quot;chap04_priorsim.rds&quot;) # saveRDS(priorsim, file = a_file) priorsim &lt;- readRDS(file = a_file) endTime &lt;- Sys.time() # print(endTime - startTime) and we look at the matrix for the event RD_RR_RRstar_OR which represents the event that all effect measures move in the same direction. The matrix elements correspond to the percentage frequency of the event given the beta distribution with shape parameters shape1 = s1 with s1 indicated as column names, and shape2 = s1 parameter with s2 indicated in the row names. The beta distribution with shape1 = 1 and shape2 = 1 is similar to the uniform distribution on \\([0, 1]\\). Therefore this element is the one simulated by Shannon and Brumback, see Jake Shannin (2021) and, in fact, with 5000 repetitions nrep = 5000the measure is almost always very close to what is mentioned in Jake Shannin (2021). Also note that for large \\(shape1 = shape2 = \\text{large number}\\) the beta distribution is similar to the normal distribution with a mean of \\(shape1 / (shape1 + shape2)\\). The simulation shows that in that case the percentage of measures moving in the same directions is nearing 100%. See for example when \\(shape1 = shape2 = 7\\) in the matrix of results from the sim. here is the matrix of percentage of times that all measures move in the same direction, i.e. the event RD_RR_RRstar_OR round(priorsim[[&quot;RD_RR_RRstar_OR&quot;]], 2) ## s1=0.5 s1=1 s1=3 s1=5 s1=7 ## s2=0.5 0.77 0.81 0.83 0.82 0.83 ## s2=1 0.81 0.83 0.86 0.87 0.86 ## s2=3 0.82 0.86 0.90 0.91 0.91 ## s2=5 0.82 0.86 0.90 0.92 0.93 ## s2=7 0.84 0.86 0.91 0.93 0.93 and to show as a heatmap ggp_betasim(priorsim, var = &quot;RD_RR_RRstar_OR&quot;, colr = list(&quot;low&quot; = &quot;deepskyblue1&quot;, &quot;high&quot; = &quot;deepskyblue4&quot;)) and comparing with the author round(c(&quot;simulation&quot; = priorsim[[&quot;RD_RR_RRstar_OR&quot;]][&quot;s2=1&quot;, &quot;s1=1&quot;], &quot;author&#39;s&quot; = unname(bb[&quot;RD_RR_RRstar_OR&quot;])), 3) ## simulation author&#39;s ## 0.833 0.833 We can see that the range is wide and should be considered. range(priorsim[[&quot;RD_RR_RRstar_OR&quot;]]) ## [1] 0.7732 0.9344 Now we do it with constrained data message(&quot;this takes 30 sec.: we load a saved file instead&quot;) ## this takes 30 sec.: we load a saved file instead startTime &lt;- Sys.time() # priorsim_const &lt;- betasim_effect_measures(shape1 = c(0.5, 1, 3, 5, 7), # shape2 = c(0.5, 1, 3, 5, 7), # nrep = 5000, constrained = TRUE) a_file &lt;- file.path(dir_data, &quot;chap04_priorsim_const.rds&quot;) # saveRDS(priorsim_const, file = a_file) priorsim_const &lt;- readRDS(file = a_file) endTime &lt;- Sys.time() # print(endTime - startTime) ggp_betasim(priorsim_const, var = &quot;RD_RR_RRstar_OR&quot;, colr = list(&quot;low&quot; = &quot;lightsalmon1&quot;, &quot;high&quot; = &quot;lightsalmon4&quot;), title = &quot;Monte Carlo simulation. Constrained data.&quot;) and comparing with the author round(c(&quot;simulation&quot; = priorsim_const[[&quot;RD_RR_RRstar_OR&quot;]][&quot;s2=1&quot;, &quot;s1=1&quot;], &quot;author&#39;s&quot; = unname(bb_const[&quot;RD_RR_RRstar_OR&quot;])), 3) ## simulation author&#39;s ## 0.662 0.667 and the range is even larger and therefore more significant. range(priorsim_const[[&quot;RD_RR_RRstar_OR&quot;]]) ## [1] 0.5710824 0.8565217 4.2.2.2 Application: Data pre-processing (data cleaning) Unless the \\(p_0, p_1\\) obtained are uniformly distributed (not the most common scenario for sure) it seems from the results above that the likelihood of not having all effect measures moving in the same direction is low. Thus, it could be a good hint to uncover hidden processes in a data pre-processing routine. We note the important rule mentioned at the beginning of section 4.2 when relative risk \\(RR\\) and other relative risk \\(RR^*\\) both change in the same direction [] then so must the difference the risk difference and odds ratio. Another rule from section 4.2 can help in data cleaning When \\(RR_0\\) and \\(RR_1\\) are on opposite side of 1, that is, when in one stratum the treatment is helpful and in the other it is harmful, then all measures will automatically change together. Thus a quick, easy way to clean up potential data problems and obtain relevant details on outliers and hidden processes might be Exclude cases when \\(RR\\) and \\(RR^*\\) change in the same direction to reduce the data load. Exclude cases when \\(RR_0\\) and \\(RR_1\\) are on opposite side of 1 Investigate the remining cases asthey are good candidates for hidden processes 4.2.2.3 Application: Bayesian prior in Beta-binomial model If we use information from the population, or from expert knowledge, that effect measures should move in the same direction then a beta distribution with \\(shape1 &gt; 1, shape2 &gt; 1\\) would make sense and provide a better prior for the Beta-binomial model. On the contrary, if we wish that the model look into the unlikely events that effect measure do not move in the same directions, then a beta distribution with \\(shape1 \\leq 1, shape2 \\leq 1\\) could be supported by the results from above. 4.3 Causal Interaction 4.4 Exercises Please note that the solutions to exercises of Brumback (2022) below are my own and have not been verified or approved in any way by the author. 4.4.1 Exercise 1 Comment: Using the causal power, the conclusion is different than the official answer. It is not obvious why the official solution does not make use of the causal power. Let \\(Y \\in \\{0,1\\}\\) mean that there is a cost barrier \\(Y=1\\) or not \\(Y=0\\). Let \\(T \\in \\{0,1\\}\\) mean that the individual is a person with disability \\(T=1\\) or not \\(T=0\\) Let \\(M \\in \\{0,1\\}\\) mean that the individual is 65-year or older \\(M = 1\\) or is younger than 65 year-old \\(M=0\\). and so we are given that \\[ p_0 = \\hat{E}(Y \\mid T = 0, M = 0) = 0.225 \\\\ p_1 = \\hat{E}(Y \\mid T = 1, M = 0) = 0.383 \\\\ p_2 = \\hat{E}(Y \\mid T = 0, M = 1) = 0.04 \\\\ p_3 = \\hat{E}(Y \\mid T = 1, M = 1) = 0.072 \\] and so we compute the effect measures by age group \\[ \\begin{align*} RD_0 &amp;= p_1 - p_0 = 0.383-0.225 \\\\ RD_1 &amp;= p_3 - p_2 = 0.072-0.04 \\\\ RR_0 &amp;= \\frac{p_1}{p_0} = \\frac{0.383}{0.225} \\\\ RR_1 &amp;= \\frac{p_3}{p_2} = \\frac{0.072}{0.04} \\\\ RR^*_0 &amp;= \\frac{1-p_0}{1-p_1}=\\frac{1-0.225}{1-0.383} \\\\ RR^*_1 &amp;= \\frac{1-p_2}{1-p_3}=\\frac{1-0.04}{1-0.072} \\\\ RO_0 &amp;= \\frac{\\frac{p_1}{1-p_1}}{\\frac{p_0}{1-p_0}} \\\\ RO_1 &amp;= \\frac{\\frac{p_3}{1-p_3}}{\\frac{p_2}{1-p_2}} \\end{align*} \\] which gives p0 &lt;- 0.225 p1 &lt;- 0.383 p2 &lt;- 0.04 p3 &lt;- 0.072 RD0 &lt;- p1 - p0 RD1 &lt;- p3 - p2 RR0 &lt;- p1 / p0 RR1 &lt;- p3 / p2 RR0star &lt;- (1-p0) / (1-p1) RR1star &lt;- (1-p2) / (1-p3) RO0 &lt;- (p1 / (1-p1)) / (p0 / (1-p0)) RO1 &lt;- (p3 / (1-p3)) / (p2 / (1-p2)) c(&quot;RD0&quot; = RD0, &quot;RD1&quot; = RD1, &quot;RR0&quot; = RR0, &quot;RR1&quot; = RR1, &quot;RR0star&quot; = RR0star, &quot;RR1star&quot; = RR1star, &quot;RO0&quot; = RO0, &quot;RO1&quot; = RO1) ## RD0 RD1 RR0 RR1 RR0star RR1star RO0 RO1 ## 0.158000 0.032000 1.702222 1.800000 1.256078 1.034483 2.138124 1.862069 and if we define \\[ \\begin{align*} RD &amp;= RD_1 - RD_0 \\\\ RR &amp;= RR_1 - RR_0 \\\\ RRstar &amp;= RR1star_1 - RRstar_0 \\\\ RO &amp;= RO_1 - RO_0 \\end{align*} \\] then RD = RD1 - RD0 RR = RR1 - RR0 RRstar = RR1star - RR0star RO = RO1 - RO0 c(&quot;RD&quot; = RD, &quot;RR&quot; = RR, &quot;RRstar&quot; = RRstar, &quot;RO&quot; = RO) ## RD RR RRstar RO ## -0.12600000 0.09777778 -0.22159504 -0.27605457 Is there a clear answer to determining which age group has a stronger effect of disability having a cost barrier to health care? The difference in \\(RD\\) from people 65-year older and younger ones is -0.126 but the difference in Risk ratio \\(RR\\) is 0.098 and therefore not in the same direction which normally is a minority case and needs to investigated before reaching a conclusion. Thereofre, no, there is no clear answer to the question. Which age group would benefit the most from an intervention? The causal power (see p. 45) \\(CP_0\\) represents the fraction of people who are younger than 65 year-old who have a disability would not have met a cost barrier to health if they had received helped to compensate for their disabilities. \\[ CP_0 = \\frac{p_1 - p_0}{1-p_0}= \\frac{0.383-0.225}{1-0.225} = 0.2 \\] The causal power (see p. 45) \\(CP_1\\) represents the fraction of people who are older than 65 year-old who have a disability would not have met a cost barrier to health if they had received helped to compensate for their disabilities. \\[ CP_1 = \\frac{p_3 - p_2}{1-p_2}= \\frac{0.072-0.04}{1-0.04} = 0.3 \\] Therefore it seems that the help would benefit people older than 65 about 50% more than younger people. However we have to be careful since, as mentioned above, not ll measures move in the same direction and further investigation is necessary. 4.4.2 Exercise 2 We process the data with function boot from above. sepsis.out &lt;- boot(sepsis, formula = zubrod45 ~ shock + gt65) then create the table of results gt_measures_modif(sepsis.out, title = &quot;**Sepsis Study**&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #jpsnetghha .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #jpsnetghha .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jpsnetghha .gt_title { color: #333333; font-size: 125%; font-weight: bold; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #jpsnetghha .gt_subtitle { color: #333333; font-size: 85%; font-weight: bold; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #jpsnetghha .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jpsnetghha .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #jpsnetghha .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #jpsnetghha .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #jpsnetghha .gt_column_spanner_outer:first-child { padding-left: 0; } #jpsnetghha .gt_column_spanner_outer:last-child { padding-right: 0; } #jpsnetghha .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #jpsnetghha .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #jpsnetghha .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #jpsnetghha .gt_from_md > :first-child { margin-top: 0; } #jpsnetghha .gt_from_md > :last-child { margin-bottom: 0; } #jpsnetghha .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #jpsnetghha .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #jpsnetghha .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jpsnetghha .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #jpsnetghha .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #jpsnetghha .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #jpsnetghha .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #jpsnetghha .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #jpsnetghha .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jpsnetghha .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #jpsnetghha .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #jpsnetghha .gt_sourcenote { font-size: 90%; padding: 4px; } #jpsnetghha .gt_left { text-align: left; } #jpsnetghha .gt_center { text-align: center; } #jpsnetghha .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #jpsnetghha .gt_font_normal { font-weight: normal; } #jpsnetghha .gt_font_bold { font-weight: bold; } #jpsnetghha .gt_font_italic { font-style: italic; } #jpsnetghha .gt_super { font-size: 65%; } #jpsnetghha .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Sepsis Study Effect-measure Modification M0 M1 diff Estimate CI1 Estimate CI1 Estimate CI1 EYT0 0.150 (0.093, 0.207) 0.375 (0.267, 0.48) 0.225 (0.102, 0.345) EYT1 0.371 (0.211, 0.531) 0.571 (0.421, 0.715) 0.200 (-0.026, 0.42) RD 0.222 (0.051, 0.39) 0.196 (0.017, 0.371) -0.025 (-0.276, 0.223) RR 2.482 (1.358, 4.528) 1.524 (1.035, 2.22) 0.614 (0.297, 1.257) RRstar 1.353 (1.019, 1.76) 1.458 (0.971, 2.109) 1.078 (0.66, 1.729) OR 3.357 (1.422, 7.756) 2.222 (1.025, 4.59) 0.662 (0.207, 2.058) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval and plotting the results ggp_measures_modif(sepsis.out, title = &quot;Sepsis Study&quot;) Both \\(RR\\) and \\(OR\\) are show a reduction in relative terms when comparing 65-yars olds to younger people. That is, in relative terms, the event of a shock does reduces more the zubrod score for older people. However the effect is not entirely clear as not all effect measures change in the same direction as should be the case. More investigaitons is required. 4.4.3 Exercise 3 We process the data with function boot from above. See exercise #3 of chapter 3 for details on the brfss data set. We are required to filter respondents aged less than 65. dataBRFSS &lt;- brfss[brfss$gt65 == 0, ] we process with 500 boot iterations message(&quot;This takes 2 min.: We used a saved file.&quot;) ## This takes 2 min.: We used a saved file. # startTime &lt;- Sys.time() # brfss.out &lt;- boot(dataBRFSS, formula = insured ~ gthsedu + whitenh, # R = 500, conf = 0.95) # endTime &lt;- Sys.time() # print(endTime - startTime) a_file &lt;- file.path(dir_data, &quot;chap04_ex3.rds&quot;) # saveRDS(brfss.out, file = a_file) brfss.out &lt;- readRDS(file = a_file) then create the table of results gt_measures_modif(brfss.out, title = &quot;**BRFSS Survey**&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #qulfxsumbd .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #qulfxsumbd .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qulfxsumbd .gt_title { color: #333333; font-size: 125%; font-weight: bold; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #qulfxsumbd .gt_subtitle { color: #333333; font-size: 85%; font-weight: bold; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #qulfxsumbd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qulfxsumbd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #qulfxsumbd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #qulfxsumbd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #qulfxsumbd .gt_column_spanner_outer:first-child { padding-left: 0; } #qulfxsumbd .gt_column_spanner_outer:last-child { padding-right: 0; } #qulfxsumbd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #qulfxsumbd .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #qulfxsumbd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #qulfxsumbd .gt_from_md > :first-child { margin-top: 0; } #qulfxsumbd .gt_from_md > :last-child { margin-bottom: 0; } #qulfxsumbd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #qulfxsumbd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #qulfxsumbd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qulfxsumbd .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #qulfxsumbd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #qulfxsumbd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #qulfxsumbd .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #qulfxsumbd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #qulfxsumbd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qulfxsumbd .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #qulfxsumbd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #qulfxsumbd .gt_sourcenote { font-size: 90%; padding: 4px; } #qulfxsumbd .gt_left { text-align: left; } #qulfxsumbd .gt_center { text-align: center; } #qulfxsumbd .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #qulfxsumbd .gt_font_normal { font-weight: normal; } #qulfxsumbd .gt_font_bold { font-weight: bold; } #qulfxsumbd .gt_font_italic { font-style: italic; } #qulfxsumbd .gt_super { font-size: 65%; } #qulfxsumbd .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } BRFSS Survey Effect-measure Modification M0 M1 diff Estimate CI1 Estimate CI1 Estimate CI1 EYT0 0.697 (0.691, 0.703) 0.845 (0.841, 0.848) 0.148 (0.141, 0.155) EYT1 0.881 (0.878, 0.884) 0.933 (0.932, 0.935) 0.052 (0.048, 0.056) RD 0.184 (0.178, 0.191) 0.088 (0.085, 0.092) -0.096 (-0.104, -0.088) RR 1.264 (1.253, 1.276) 1.105 (1.1, 1.109) 0.874 (0.865, 0.882) RRstar 2.552 (2.464, 2.637) 2.321 (2.249, 2.393) 0.910 (0.869, 0.953) OR 3.227 (3.091, 3.361) 2.564 (2.475, 2.654) 0.795 (0.753, 0.84) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval and plotting the results ggp_measures_modif(brfss.out, title = &quot;BRFSS Survey&quot;) For causal interpretaion we would need to assume that whitenh and gthsedu are not correlated together by another latent variable which could possibly be the case here. if a causal interpretation were possible since all effect measures show a reduction of the effect of having higher education when the respondent is not white non-hispanic. In other words being white and nonhispanic interacts with higher education to have an increased chance of being insured. 4.4.4 Exercise 4 dataWAVE &lt;- data.frame( T1 = c(0, 0, 1, 1), T2 = c(0, 1, 0, 1), Y = c(0.019, 0.057, 0.039, 0.094), n = c(108, 105, 103, 107)) 4.4.4.1 Using glm To evaluate statistical significance we use the glm() function. Because our outcome is numeric, we choose to fit the gaussian parametric model. Also we use the weights parameter with the variable \\(n\\) since the data is aggregated. wave.glm &lt;- glm(formula = Y ~ T1 + T2 + T1:T2, family = gaussian, weights = n, data = dataWAVE) summary(wave.glm) ## ## Call: ## glm(formula = Y ~ T1 + T2 + T1:T2, family = gaussian, data = dataWAVE, ## weights = n) ## ## Deviance Residuals: ## [1] 0 0 0 0 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.019 NaN NaN NaN ## T1 0.020 NaN NaN NaN ## T2 0.038 NaN NaN NaN ## T1:T2 0.017 NaN NaN NaN ## ## (Dispersion parameter for gaussian family taken to be NaN) ## ## Null deviance: 3.2636e-01 on 3 degrees of freedom ## Residual deviance: 6.2593e-33 on 0 degrees of freedom ## AIC: -299.44 ## ## Number of Fisher Scoring iterations: 1 And the glm function cannot compute because of the dispersion measure for the gaussian family. Therefore we use gee which uses robust statistics and saves the day. 4.4.4.2 Using gee gee does not have a weights parameter like glm so we expand the data before using gee. dfs &lt;- vector(mode = &quot;list&quot;, length = 4) pos &lt;- 1 dfs[[pos]] &lt;- do.call(rbind, replicate(dataWAVE$n[pos], data.frame(T1 = 0, T2 = 0, Y = 0.019), simplify = FALSE)) pos &lt;- 2 dfs[[pos]] &lt;- do.call(rbind, replicate(dataWAVE$n[pos], data.frame(T1 = 0, T2 = 1, Y = 0.057), simplify = FALSE)) pos &lt;- 3 dfs[[pos]] &lt;- do.call(rbind, replicate(dataWAVE$n[pos], data.frame(T1 = 1, T2 = 0, Y = 0.039), simplify = FALSE)) pos &lt;- 4 dfs[[pos]] &lt;- do.call(rbind, replicate(dataWAVE$n[pos], data.frame(T1 = 1, T2 = 1, Y = 0.094), simplify = FALSE)) dataWAVErep &lt;- do.call(rbind, dfs) dataWAVErep$id &lt;- seq_len(nrow(dataWAVErep)) then we use gee wave.gee &lt;- gee::gee(formula = Y ~ T1 + T2 + T1 * T2, id = id, family = gaussian, data = dataWAVErep) ## Beginning Cgee S-function, @(#) geeformula.q 4.13 98/01/27 ## running glm to get initial regression estimate ## (Intercept) T1 T2 T1:T2 ## 0.019 0.020 0.038 0.017 summary(wave.gee) ## ## GEE: GENERALIZED LINEAR MODELS FOR DEPENDENT DATA ## gee S-function, version 4.13 modified 98/01/27 (1998) ## ## Model: ## Link: Identity ## Variance to Mean Relation: Gaussian ## Correlation Structure: Independent ## ## Call: ## gee::gee(formula = Y ~ T1 + T2 + T1 * T2, id = id, data = dataWAVErep, ## family = gaussian) ## ## Summary of Residuals: ## Min 1Q Median 3Q Max ## -9.055257e-16 -9.055257e-16 2.775558e-17 1.595946e-16 2.567391e-16 ## ## ## Coefficients: ## Estimate Naive S.E. Naive z Robust S.E. Robust z ## (Intercept) 0.019 4.658032e-17 4.078976e+14 8.713425e-17 2.180543e+14 ## T1 0.020 6.666917e-17 2.999887e+14 8.854187e-17 2.258818e+14 ## T2 0.038 6.634338e-17 5.727776e+14 9.066498e-17 4.191254e+14 ## T1:T2 0.017 9.416210e-17 1.805397e+14 9.205772e-17 1.846668e+14 ## ## Estimated Scale Parameter: 0 ## Number of Iterations: 1 ## ## Working Correlation ## [,1] ## [1,] 1 Just by looking at the Robust z indicating that \\(T1:T2\\) is 1.85e14 from zero it is obvious that the interaction is statistically significant. coef(summary(wave.gee)) ## Estimate Naive S.E. Naive z Robust S.E. Robust z ## (Intercept) 0.019 4.658032e-17 4.078976e+14 8.713425e-17 2.180543e+14 ## T1 0.020 6.666917e-17 2.999887e+14 8.854187e-17 2.258818e+14 ## T2 0.038 6.634338e-17 5.727776e+14 9.066498e-17 4.191254e+14 ## T1:T2 0.017 9.416210e-17 1.805397e+14 9.205772e-17 1.846668e+14 The actual p-value calculation (see p. 67 on how to do this) is z &lt;- coef(summary(wave.gee))[&quot;T1:T2&quot;, &quot;Robust z&quot;] 2 * (1 - pnorm(z)) ## [1] 0 and since the p-value is 0 then it is statistically significant. 4.4.5 Exercise 5 dataGSS &lt;- gss[, c(&quot;attend&quot;, &quot;gthsedu&quot;, &quot;female&quot;)] dataGSS &lt;- dataGSS[complete.cases(dataGSS), ] dataGSS$id &lt;- seq_len(nrow(dataGSS)) To determine a synergetic effect we are looking for the pattern where \\(Y(t_1 = 0, t_2 = 0) = 0\\), \\(Y(t_1 = 1, t_2 = 0) = 0\\), \\(Y(t_1 = 0, t_2 = 1) = 0\\) and \\(Y(t_1 = 1, t_2 = 1) = 1\\). That is, as explained in p. 76 of section 4.3, both \\(T_1\\) and \\(T_2\\) for \\(Y=1\\), otherwise \\(Y=0\\), It is the causal type 2 shown in table 4.4 on p. 75. Assuming monotocity we can use the result from VanderWeele and Robins (2007) discussed in p.76 of section 4.3 stating that a sufficient condition for the synergistic effect is \\[ E(Y(1, 1)) - E(Y(0, 1)) - E(Y(1, 0)) + E(Y(0, 0)) &gt; 0 \\] and if we estimate with the regression model \\[ Y = \\beta_0 + \\beta_1 T_1 + \\beta_2 T_2 + + \\beta_3 T_1T_2 \\] then we hcan determine our result with the estimates \\[ \\begin{align*} \\hat{E}(Y(0, 0)) &amp;= \\beta_0 \\\\ \\hat{E}(Y(1, 0)) &amp;= \\beta_1 \\\\ \\hat{E}(Y(0, 1)) &amp;= \\beta_2 \\\\ \\hat{E}(Y(1, 1)) &amp;=\\beta_3 \\end{align*} \\] doing he fit with gee, with the binomial family because our outcome is binary, we obtain gss.gee &lt;- gee::gee(formula = attend ~ gthsedu + female + gthsedu * female, id = id, family = binomial, data = dataGSS) ## Beginning Cgee S-function, @(#) geeformula.q 4.13 98/01/27 ## running glm to get initial regression estimate ## (Intercept) gthsedu female gthsedu:female ## -1.0509842 0.4313711 0.5352755 -0.3694460 summary(gss.gee) ## ## GEE: GENERALIZED LINEAR MODELS FOR DEPENDENT DATA ## gee S-function, version 4.13 modified 98/01/27 (1998) ## ## Model: ## Link: Logit ## Variance to Mean Relation: Binomial ## Correlation Structure: Independent ## ## Call: ## gee::gee(formula = attend ~ gthsedu + female + gthsedu * female, ## id = id, data = dataGSS, family = binomial) ## ## Summary of Residuals: ## Min 1Q Median 3Q Max ## -0.3884615 -0.3738562 -0.2590361 0.6261438 0.7409639 ## ## ## Coefficients: ## Estimate Naive S.E. Naive z Robust S.E. Robust z ## (Intercept) -1.0509842 0.08865639 -11.854580 0.08858032 -11.864759 ## gthsedu 0.4313711 0.13913457 3.100388 0.13901520 3.103050 ## female 0.5352755 0.11599024 4.614832 0.11589072 4.618795 ## gthsedu:female -0.3694460 0.18182758 -2.031848 0.18167157 -2.033593 ## ## Estimated Scale Parameter: 1.001718 ## Number of Iterations: 1 ## ## Working Correlation ## [,1] ## [1,] 1 so now lets compute the sufficient condition from VanderWeele and Robins (2007) using the estimates from the regression \\[ \\begin{align*} \\hat{E}(Y(1, 1)) - \\hat{E}(Y(0, 1)) - \\hat{E}(Y(1, 0)) + \\hat{E}(Y(0, 0)) \\end{align*} \\] Y11 &lt;- coef(gss.gee)[&quot;gthsedu:female&quot;] Y01 &lt;- coef(gss.gee)[&quot;female&quot;] Y10 &lt;- coef(gss.gee)[&quot;gthsedu&quot;] Y00 &lt;- coef(gss.gee)[&quot;(Intercept)&quot;] Y11 - Y01 - Y10 - Y00 ## gthsedu:female ## -0.2851084 Therefore the sufficient condition is not met. We cannot positively confirm a causal effect without more information. 4.4.6 Exercise 6 Since we condition on H then we would filter the data based on H and apply the sufficient condition for synergy to each data set filtered for each value of H. References "],["dag.html", "Chapter 5 Causal Directed Acyclic Graphs 5.1 Theory 5.2 Examples 5.3 Exercises", " Chapter 5 Causal Directed Acyclic Graphs library(tidyr) library(dplyr) library(dagitty) library(ggplot2) library(ggdag) library(gt) library(simstudy) We use the dagitty and ggdag packages to analyse the DAG and plot them. We also sue the simstudy package from now on to perform the simulations. 5.1 Theory 5.1.1 Conditional Indepence and DAG Causal directed acyclic graphs provide a convenient and efficient way to represent statistical ans causal dependence. For example scm_5.1 &lt;- list() scm_5.1 &lt;- within(scm_5.1, { the_nodes &lt;- c(&quot;X1&quot; = &quot;&quot;, &quot;X2&quot; = &quot;&quot;, &quot;X3&quot; = &quot;&quot;, &quot;X4&quot; = &quot;&quot;) dag &lt;- dagify( X2 ~ X1, X3 ~ X2, X4 ~ X1 + X2, labels = the_nodes) text_labels &lt;- c(expression(X[1]), expression(X[2]), expression(X[3]), expression(X[4])) plot &lt;- ggp_dag(dag, text_labels = text_labels) }) Figure 5.1: Example of a Directed Acyclic Graph can be expressed in terms of conditional probabilities as \\[ \\begin{align*} P(X_1, X_2, X_3, X_4) = P(X_4 \\mid X_2, X_1)P(X_3 \\mid X_2)P(X_2 \\mid X_1)P(X_1) \\end{align*} \\] 5.1.2 D-Separation A path is said to be d-separated, or blocked,, by a set of variables \\(C\\) if and only if the path i) containis a chain as in figure 5.2a such that the midlle variable \\(Z\\) is in \\(C\\) or ii) contains a fork as in figure 5.2b such that such that the middle variable \\(Z\\) is not in \\(C\\) or iii) contains an inverted fork, or collider, as in figure 5.2c such that the midlle variable \\(Z\\) is not in \\(C\\) and such that no descendant of a collider is in \\(C\\). and we illustrate the 3 basic graphical structures as follows scm_5.2 &lt;- list() scm_5.2 &lt;- within(scm_5.2, { # CHAIN dagChain &lt;- dagify( Z ~ X1, X2 ~ Z) text_labels &lt;- c(expression(X[1]), expression(X[2]), &quot;Z&quot;) plotChain &lt;- ggp_dag(dagChain, text_size = 5, text_labels = text_labels) + theme(title = element_text(size = 10)) + labs(title = &quot;Chain: Z is an intermediate variable&quot;) # FORK dagFork &lt;- dagify( X1 ~ Z, X2 ~ Z) plotFork &lt;- ggp_dag(dagFork, text_size = 5, text_labels = text_labels) + theme(title = element_text(size = 10)) + labs(title = &quot;Fork: Z is a common cause&quot;) # COLLIDER dagColl &lt;- dagify( Z ~ X1, Z ~ X2) plotColl &lt;- ggp_dag(dagColl, text_size = 5, text_labels = text_labels) + theme(title = element_text(size = 10)) + labs(title = &quot;Collider: Z is a common effect&quot;) # DESCENDANT dagDesc &lt;- dagify( W ~ X1, W ~ X2, Z ~ W) text_labels &lt;- c(expression(X[1]), expression(X[2]), expression(X[3]), &quot;Z&quot;) plotDesc &lt;- ggp_dag(dagDesc, text_size = 5, text_labels = text_labels) + theme(title = element_text(size = 10)) + labs(title = &quot;Descendant: Z is an effect of a common effect&quot;) }) gridExtra::grid.arrange(scm_5.2$plotChain, scm_5.2$plotFork, scm_5.2$plotColl, scm_5.2$plotDesc, nrow = 2, ncol = 2) Figure 5.2: Graphical structures 5.1.3 Causal DAG with collider and for our first practice of d-separation we have a DAG with a collider scm_5.3 &lt;- list() scm_5.3 &lt;- within(scm_5.3, { dag &lt;- dagify( A ~ W1, Y ~ W3, W2 ~ W1 + W3, W4 ~ W2) text_labels &lt;- c(&quot;A&quot;, expression(W[1]), expression(W[2]), expression(W[3]), expression(W[4], &quot;Y&quot;)) plot &lt;- ggp_dag(dag, text_labels = text_labels) }) Figure 5.3: Causal DAG With Collider The conditional independences can be obtained using impliedConditionalIndependencies from thedagitty package. You must ensure that you use the parameter type = \"all.pairs explicitly. The default is type = \"missing.edge. We will not list all of them, just their number, 93. # use type = &quot;all.pairs&quot; to get everything. # impliedConditionalIndependencies uses type &quot;missing.edge&quot; by default. length(impliedConditionalIndependencies(scm_5.3$dag, type = &quot;all.pairs&quot;)) ## [1] 93 some of those independence are impliedConditionalIndependencies(scm_5.3$dag, type = &quot;missing.edge&quot;) ## A _||_ W2 | W1 ## A _||_ W3 ## A _||_ W4 | W2 ## A _||_ W4 | W1 ## A _||_ Y ## W1 _||_ W3 ## W1 _||_ W4 | W2 ## W1 _||_ Y ## W2 _||_ Y | W3 ## W3 _||_ W4 | W2 ## W4 _||_ Y | W3 ## W4 _||_ Y | W2 5.2 Examples 5.2.1 Causal DAG With Intermediate Value Here we have \\(A \\not\\!\\perp\\!\\!\\!\\perp Y \\mid M\\) because \\(M\\) is a collider and conditioning on \\(M\\) would open up the path. scm_5.4 &lt;- list() scm_5.4 &lt;- within(scm_5.4, { dag &lt;- dagify( M ~ A + H, Y ~ A + M + H) plot &lt;- ggp_dag(dag) }) Figure 5.4: Causal DAG With Intermediate Variable 5.2.2 A counfounder may occur after the exposure Figure 5.5 illustrates and unmeasured true confounder \\(U\\) of the effect of \\(A\\) on \\(Y\\) that can be handled by conditioning on the measured variable \\(Z\\), even if \\(Z\\) occur after \\(A\\). scm_5.5 &lt;- list() scm_5.5 &lt;- within(scm_5.5, { dag &lt;- dagify( A ~ U, Z ~ U, Y ~ A + Z, latent = &quot;U&quot;, exposure = &quot;A&quot;, outcome = &quot;Y&quot;) plot &lt;- ggp_dag(dag) }) Figure 5.5: Confounder May Occur After the Exposure 5.2.3 Potential Outcomes are the Ultimate Counfounder The collection of potential outcomes \\(\\{Y(a)\\}_{a \\in A}\\) can be viewed as the ultimate confounder, even if it is not a tue confounder. The unmeasured counfounder \\(U = \\{Y(a)\\}_{a \\in A}\\) will always block all backdoor paths from \\(A\\) to \\(Y\\), because \\(Y\\) is a deterministic function of \\(A\\) and \\(\\{Y(a)\\}_{a \\in A}\\); that is \\(Y = Y(A)\\), or, for binary \\(Y\\), \\(Y = AY(1) + (1-A)Y(0)\\) scm_5.6 &lt;- list() scm_5.6 &lt;- within(scm_5.6, { the_nodes &lt;- c(&quot;A&quot; = &quot;&quot;, &quot;Y&quot; = &quot;&quot;, &quot;U&quot; = &quot;(Y(0), y(1))&quot;) dag &lt;- dagify( A ~ U, Y ~ A + U, latent = &quot;U&quot;, labels = the_nodes) plot &lt;- ggp_dag(dag) }) Figure 5.6: One way to generate confounding and lets do the simulation of figure 5.6 on p. 88 with simstudy scm_5.6 &lt;- within(scm_5.6, { probY0 &lt;- 0.42 probY1 &lt;- 0.62 formulaA &lt;- &quot;(1-Y0) * (1- Y1) * 0.6307 + (1 - Y0) * Y1 * 0.4867 + Y0 * (1 - Y1) * 0.4699 + Y0 * Y1 * 0.4263&quot; set.seed(111) # generate the potential outcomes defs &lt;- defData(varname = &quot;Y0&quot;, dist = &quot;binomial&quot;, formula = &quot;..probY0&quot;, variance = 1) defs &lt;- defData(defs, varname = &quot;Y1&quot;, dist = &quot;binomial&quot;, formula = &quot;..probY1&quot;, variance = 1) defs &lt;- defData(defs, varname = &quot;probA&quot;, dist = &quot;nonrandom&quot;, formula = formulaA) defs &lt;- defData(defs, varname = &quot;A&quot;, dist = &quot;binomial&quot;, formula = &quot;probA&quot;, variance = 1) # Y must depend on A, Y1, Y0 in this way defs &lt;- defData(defs, varname = &quot;Y&quot;, dist = &quot;nonrandom&quot;, formula = &quot;A * Y1 + (1 - A) * Y0&quot;) # generate the data data &lt;- genData(1000, defs) # create the tabletbl &lt;- sim_5.6$data %&gt;% tbl &lt;- data %&gt;% group_by(A, Y0, Y1, Y) %&gt;% count(name = &quot;prob&quot;) %&gt;% ungroup() %&gt;% mutate(prob = prob / sum(prob)) stopifnot(near(sum(tbl$prob), 1)) # format the tableau summ &lt;- gt_probs(tbl, title = &quot;Table 5.1&quot;, subtitle = &quot;Simulation Probabilities for `sim1.r`&quot;) }) scm_5.6$summ html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #derlplfuuo .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #derlplfuuo .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #derlplfuuo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #derlplfuuo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #derlplfuuo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #derlplfuuo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #derlplfuuo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #derlplfuuo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #derlplfuuo .gt_column_spanner_outer:first-child { padding-left: 0; } #derlplfuuo .gt_column_spanner_outer:last-child { padding-right: 0; } #derlplfuuo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #derlplfuuo .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #derlplfuuo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #derlplfuuo .gt_from_md > :first-child { margin-top: 0; } #derlplfuuo .gt_from_md > :last-child { margin-bottom: 0; } #derlplfuuo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #derlplfuuo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #derlplfuuo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #derlplfuuo .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #derlplfuuo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #derlplfuuo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #derlplfuuo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #derlplfuuo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #derlplfuuo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #derlplfuuo .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #derlplfuuo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #derlplfuuo .gt_sourcenote { font-size: 90%; padding: 4px; } #derlplfuuo .gt_left { text-align: left; } #derlplfuuo .gt_center { text-align: center; } #derlplfuuo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #derlplfuuo .gt_font_normal { font-weight: normal; } #derlplfuuo .gt_font_bold { font-weight: bold; } #derlplfuuo .gt_font_italic { font-style: italic; } #derlplfuuo .gt_super { font-size: 65%; } #derlplfuuo .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table 5.1 Simulation Probabilities for sim1.r A Y0 Y1 Y prob 0 0 0 0 0.077 0 0 1 0 0.212 0 1 0 1 0.083 0 1 1 1 0.144 1 0 0 0 0.127 1 0 1 1 0.173 1 1 0 0 0.079 1 1 1 1 0.105 Fundamentals of Causal Inference, Babette A. Brumback, 2022 we also do it in base R with the script on p.88 sim1.r &lt;- function(n = 1000) { set.seed(111) probY0 &lt;- 0.42 probY1 &lt;- 0.62 Y0 &lt;- rbinom(n, size = 1, prob = probY0) Y1 &lt;- rbinom(n, size = 1, prob = probY1) probA &lt;- (1 - Y0) * (1 - Y1) * 0.6307 + (1 - Y0) * Y1 * 0.4867 + Y0 * (1- Y1) * 0.4699 + Y0 * Y1 * 0.4263 A &lt;- rbinom(n, size = 1, prob = probA) Y &lt;- A * Y1 + (1 - A) * Y0 data.frame(cbind(A, Y0, Y1, Y)) } and we obtain the same results as with simstudy tbl &lt;- sim1.r() %&gt;% group_by(A, Y0, Y1, Y) %&gt;% count(name = &quot;prob&quot;) %&gt;% ungroup() %&gt;% mutate(prob = prob / sum(prob)) stopifnot(near(sum(tbl$prob), 1)) tbl ## # A tibble: 8 x 5 ## A Y0 Y1 Y prob ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 0 0 0 0.077 ## 2 0 0 1 0 0.212 ## 3 0 1 0 1 0.083 ## 4 0 1 1 1 0.144 ## 5 1 0 0 0 0.127 ## 6 1 0 1 1 0.173 ## 7 1 1 0 0 0.079 ## 8 1 1 1 1 0.105 but when compare with the authors bb_5.6 &lt;- data.frame( A = c(0, 0, 0, 0, 1, 1, 1, 1), Y0 = c(0, 0, 1, 1, 0, 0, 1, 1), Y1 = c(0, 1, 0, 1, 0, 1, 0, 1), Y = c(0, 0, 1, 1, 0, 1, 0, 1), prob = c(0.0814, 0.1846, 0.0846, 0.1494, 0.139, 0.175, 0.075, 0.111) ) bb_5.6 ## A Y0 Y1 Y prob ## 1 0 0 0 0 0.0814 ## 2 0 0 1 0 0.1846 ## 3 0 1 0 1 0.0846 ## 4 0 1 1 1 0.1494 ## 5 1 0 0 0 0.1390 ## 6 1 0 1 1 0.1750 ## 7 1 1 0 0 0.0750 ## 8 1 1 1 1 0.1110 it is different. Table 5.1 is entitled Simulation probabilities for sim1.r because they are simulated probabilities. If the simulation size is increased 10000 the results are more in line with the authors. data.frame(&quot;author&quot; = bb_5.6$prob, &quot;sim&quot; = scm_5.6$tbl$prob) %&gt;% mutate(diff = sim - author) ## author sim diff ## 1 0.0814 0.077 -0.0044 ## 2 0.1846 0.212 0.0274 ## 3 0.0846 0.083 -0.0016 ## 4 0.1494 0.144 -0.0054 ## 5 0.1390 0.127 -0.0120 ## 6 0.1750 0.173 -0.0020 ## 7 0.0750 0.079 0.0040 ## 8 0.1110 0.105 -0.0060 and we also confirm the theoretical probabilities of the first line in the table as follows \\[ \\begin{align*} \\text{using (5.1), p.81, we can write the joint distribution as} \\\\ P(Y = 0, A = 0, Y1 = 0, Y0 = 0) = \\\\ P(Y = 0 \\mid A = 0, Y1 = 0, Y0 = 0) P(A = 0 \\mid Y1 = 0, Y0 = 0)P(Y1 = 0 \\mid Y0 = 0)\\ P(Y0 =0) \\end{align*} \\] and \\[ P(Y = 0 \\mid A = 0, Y1 = 0, Y0 = 0)=1 \\] and from the simulation we have \\[ \\begin{align*} P(A = 1 \\mid Y0 = 0, Y1 = 0) &amp;= 0.6307 \\\\ P(A = 0 \\mid Y0 = 0, Y1 = 0) &amp;= - 0.6307 = 0.3693\\\\ P(A = 1 \\mid Y0 = 1, Y1 = 0) &amp;= 0.4699 \\\\ P(A = 0 \\mid Y0 = 1, Y1 = 0) &amp;= 1 - 0.4699 = 0.5301 \\\\ P(A = 1 \\mid Y0 = 0, Y1 = 1) &amp;= 0.4867 \\\\ P(A = 0 \\mid Y0 = 0, Y1 = 1) &amp;= 1 - 0.4867 = 0.5133 \\\\ P(A = 1 \\mid Y0 = 1, Y1 = 1) &amp;= 0.4263 \\\\ P(A = 0 \\mid Y0 = 1, Y1 = 1) &amp;= 1 - 0.4263 = 0.5737 \\end{align*} \\] and we note that \\(Y0\\) and \\(Y1\\) are independent, i.e. \\(P(Y1 \\mid Y0) = P(Y1)\\) so that \\[ \\begin{align*} P(Y0 = 1) &amp;= 0.42\\\\ P(Y0 = 0) &amp;= 1 - 0.42 = 0.58\\\\ P(Y1 = 1) &amp;= 0.62\\\\ P(Y1 = 0) &amp;= 1 - 0.62 = 0.38 \\end{align*} \\] and since \\(Y0\\) and \\(Y1\\) are independent, i.e. \\(P(Y1 \\mid Y0) = P(Y1)\\) then \\[ \\begin{align*} P(Y = 0, A = 0, Y1 = 0, Y0 = 0) &amp;= \\\\ P(Y = 0 \\mid A = 0, Y1 = 0, Y0 = 0) P(A = 0 \\mid Y1 = 0, Y0 = 0) \\cdot P(Y1 = 0 \\mid Y0 = 0)P(Y0 = 0) &amp;= \\\\ 1 \\cdot P(A = 0 \\mid Y1 = 0, Y0 = 0) \\cdot P(Y1 = 0)P(Y0 = 0) &amp;= \\\\ 1\\times 0.3693 \\times 0.58 \\times 0.38 &amp;= 0.0814 \\end{align*} \\] 5.2.4 Structural Causal Model 5.7 The causal DAG is scm_5.7 &lt;- list() scm_5.7 &lt;- within(scm_5.7, { dag &lt;- dagify( A ~ H, Y ~ A + H) plot &lt;- ggp_dag(dag) }) Figure 5.7: Another way to generate confounding and we simulate the model with simstudy (and with the authors script after) scm_5.7 &lt;- within(scm_5.7, { set.seed(222) # generate the confounder H first defs &lt;- defData(varname = &quot;H&quot;, dist = &quot;binomial&quot;, formula = 0.4, variance = 1) # let the treatment depend on the confounder formulaA &lt;- &quot;H * 0.8 + (1 - H) * 0.3&quot; defs &lt;- defData(defs, varname = &quot;A&quot;, dist = &quot;binomial&quot;, formula = formulaA, variance = 1) # let the outcome depend on the treatment and the confounder formulaY &lt;- &quot;A * (H * 0.5 + (1 - H) * 0.7) + (1 - A) * (H * 0.3 + (1 - H) * 0.5)&quot; defs &lt;- defData(defs, varname = &quot;Y&quot;, dist = &quot;binomial&quot;, formula = formulaY, variance = 1) # generate the data data &lt;- genData(1000, defs) # create the tabletbl &lt;- sim_5.6$data %&gt;% tbl &lt;- data %&gt;% group_by(A, H, Y) %&gt;% count(name = &quot;prob&quot;) %&gt;% ungroup() %&gt;% mutate(prob = prob / sum(prob)) stopifnot(near(sum(tbl$prob), 1)) # format the tableau summ &lt;- gt_probs(tbl, title = &quot;Table 5.2&quot;, subtitle = &quot;Simulation Probabilities for `sim2.r`&quot;) }) scm_5.7$summ html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #fpzmgpvcjo .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #fpzmgpvcjo .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #fpzmgpvcjo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #fpzmgpvcjo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #fpzmgpvcjo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #fpzmgpvcjo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #fpzmgpvcjo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #fpzmgpvcjo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #fpzmgpvcjo .gt_column_spanner_outer:first-child { padding-left: 0; } #fpzmgpvcjo .gt_column_spanner_outer:last-child { padding-right: 0; } #fpzmgpvcjo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #fpzmgpvcjo .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #fpzmgpvcjo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #fpzmgpvcjo .gt_from_md > :first-child { margin-top: 0; } #fpzmgpvcjo .gt_from_md > :last-child { margin-bottom: 0; } #fpzmgpvcjo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #fpzmgpvcjo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #fpzmgpvcjo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #fpzmgpvcjo .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #fpzmgpvcjo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #fpzmgpvcjo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #fpzmgpvcjo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #fpzmgpvcjo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #fpzmgpvcjo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #fpzmgpvcjo .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #fpzmgpvcjo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #fpzmgpvcjo .gt_sourcenote { font-size: 90%; padding: 4px; } #fpzmgpvcjo .gt_left { text-align: left; } #fpzmgpvcjo .gt_center { text-align: center; } #fpzmgpvcjo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #fpzmgpvcjo .gt_font_normal { font-weight: normal; } #fpzmgpvcjo .gt_font_bold { font-weight: bold; } #fpzmgpvcjo .gt_font_italic { font-style: italic; } #fpzmgpvcjo .gt_super { font-size: 65%; } #fpzmgpvcjo .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table 5.2 Simulation Probabilities for sim2.r A H Y prob 0 0 0 0.181 0 0 1 0.230 0 1 0 0.065 0 1 1 0.014 1 0 0 0.065 1 0 1 0.132 1 1 0 0.141 1 1 1 0.172 Fundamentals of Causal Inference, Babette A. Brumback, 2022 and with the script sim2.r in base R sim2.r &lt;- function(n = 1000) { set.seed(222) # generate the confounder first H &lt;- rbinom(n, size = 1, prob = 0.4) probA &lt;- H * 0.8 + (1 - H) * 0.3 A &lt;- rbinom(n, size = 1, prob = probA) probY &lt;- A * (H * 0.5 + (1 - H) * 0.7) + (1 - A) * (H * 0.3 + (1 - H) * 0.5) Y &lt;- rbinom(n, size = 1, prob = probY) data.frame(cbind(H, A, Y)) } with the same probabilities as simstudy tbl &lt;- sim2.r() %&gt;% group_by(A, H, Y) %&gt;% count(name = &quot;prob&quot;) %&gt;% ungroup() %&gt;% mutate(prob = prob / sum(prob)) stopifnot(near(sum(tbl$prob), 1)) tbl ## # A tibble: 8 x 4 ## A H Y prob ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; ## 1 0 0 0 0.181 ## 2 0 0 1 0.23 ## 3 0 1 0 0.065 ## 4 0 1 1 0.014 ## 5 1 0 0 0.065 ## 6 1 0 1 0.132 ## 7 1 1 0 0.141 ## 8 1 1 1 0.172 and the author provides the theoretical probability table bb_5.7 &lt;- data.frame( A = c(0, 0, 0, 0, 1, 1, 1, 1), H = c(0, 0, 1, 1, 0, 0, 1, 1), Y = c(0, 1, 0, 1, 0, 1, 0, 1), prob = c(0.21, 0.21, 0.056, 0.024, 0.024, 0.126, 0.16, 0.16) ) bb_5.7 ## A H Y prob ## 1 0 0 0 0.210 ## 2 0 0 1 0.210 ## 3 0 1 0 0.056 ## 4 0 1 1 0.024 ## 5 1 0 0 0.024 ## 6 1 0 1 0.126 ## 7 1 1 0 0.160 ## 8 1 1 1 0.160 and computating the theoretical prob. as was donw above \\[ \\begin{align*} P(Y, A, H) = P(Y \\mid A, H)P(A \\mid H)P(H) \\\\ \\end{align*} \\] and from the simulation we have \\[ \\begin{align*} P(H = 1) = 0.4 \\\\ P(H = 0) = 0.6 \\\\ P(A = 1 \\mid H = 0) = 0.3 \\\\ P(A = 0 \\mid H = 0) = 1 - 0.3 = 0.7 \\\\ P(A = 1 \\mid H = 1) = 0.8 \\\\ P(A = 0 \\mid H = 1) = 1 - 0.8 = 0.2 \\\\ P(Y = 1 \\mid A = 1, H = 1) = 0.5\\\\ P(Y = 0 \\mid A = 1, H = 1) = 1 - 0.5 = 0.5\\\\ P(Y = 1 \\mid A = 1, H = 0) = 0.7\\\\ P(Y = 0 \\mid A = 1, H = 0) = 1 - 0.7 = 0.3\\\\ P(Y = 1 \\mid A = 0, H = 1) = 0.3\\\\ P(Y = 0 \\mid A = 0, H = 1) = 1 - 0.3 = 0.7\\\\ P(Y = 1 \\mid A = 0, H = 0) = 0.5\\\\ P(Y = 0 \\mid A = 0, H = 0) = 1 - 0.5 = 0.5\\\\ \\end{align*} \\] Therefore for row 1 of table 5.2 we have \\[ \\begin{align*} P(Y = 0, A = 0, H = 0) &amp;= P(Y = 0 \\mid A = 0, H = 0)P(A = 0 \\mid H = 0)P(H = 0) \\\\ &amp;= 0.5 \\times 0.7 \\times 0.6 = 0.21 \\end{align*} \\] and for row 4 of table 5.2 \\[ \\begin{align*} P(Y = 1, A = 0, H = 1) &amp;= P(Y = 1 \\mid A = 0, H = 1)P(A = 0 \\mid H = 1)P(H = 1) \\\\ &amp;= 0.3 \\times 0.2 \\times 0.4 = 0.024 \\end{align*} \\] Using either sim1.r or sim2.r we can get the joint probability of \\(A\\) and \\(Y\\) using the law of total probabilities. bb_5.6 %&gt;% group_by(A, Y) %&gt;% summarize(prob = sum(prob)) ## `summarise()` has grouped output by &#39;A&#39;. You can override using the `.groups` argument. ## # A tibble: 4 x 3 ## # Groups: A [2] ## A Y prob ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 0 0.266 ## 2 0 1 0.234 ## 3 1 0 0.214 ## 4 1 1 0.286 bb_5.7 %&gt;% group_by(A, Y) %&gt;% summarize(prob = sum(prob)) ## `summarise()` has grouped output by &#39;A&#39;. You can override using the `.groups` argument. ## # A tibble: 4 x 3 ## # Groups: A [2] ## A Y prob ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0 0 0.266 ## 2 0 1 0.234 ## 3 1 0 0.184 ## 4 1 1 0.286 Now One might wonder if knowledge of \\((A, H, Y)\\) is equivalent to knowledge of \\((A, Y0, Y1, Y)\\) Given \\((A, Y)\\) we cannot recover both \\(Y0\\) and \\(Y1\\). For example we can recover \\(Y1 = 1\\) since \\[ \\begin{align*} P(Y1 = 1 \\mid A = 1, Y = 1) &amp;= \\frac{P(Y1 = 1, A = 1, Y = 1)}{P(A = 1, Y = 1)} \\\\ &amp;= \\frac{0.175 + 0.111}{0.175 + 0.111} = 1 \\end{align*} \\] but for \\(P(Y0 = 1 \\mid A = 1, Y = 1)\\) we have \\[ \\begin{align*} P(Y0 = 1 \\mid A = 1, Y = 1) &amp;= \\frac{P(Y0 = 1, A = 1, Y = 1)}{P(A = 1, Y = 1)} \\\\ &amp;= \\frac{0.111}{0.175 + 0.111} = 0.39 \\end{align*} \\] and so the likelihood that \\(Y0 = 1\\) is only 39% and it is therefore more likely that \\(Y0 = 0\\) . . . but not always. Does the additional knowledge of \\(H\\) help to identify \\(Y(0)\\)? We leave that as a question for the reader. If we include \\(H\\) in the DAG of figure 5.6 we obtain the DAG of figure 5.8 below. We observe that \\((Y(0), Y(1)) \\perp\\!\\!\\!\\perp A \\mid H\\). In addition, since \\(Y\\) is a collider \\((Y(0), Y(1)) \\not\\!\\perp\\!\\!\\!\\perp A \\mid Y\\), therefore if we use the data from figure 5.8 below (simall.r) we have \\[ \\begin{align*} P(Y0 = 1 \\mid H = 1) &amp;= \\frac{P(Y0 = 1, H = 1)}{P(H = 1)} \\\\ &amp;= \\frac{0.019 + 0.006 + 0.051 + 0.05}{0.031 + 0.02 + 0.019 + 0.006 + 0.109 + 0.117 + 0.051 + 0.05} \\\\ &amp;= \\frac{0.126}{0.403} = 0.31 \\end{align*} \\] Therefore \\(H\\) is not entirely sufficient to determine \\((Y(0), Y(1))\\) as it will do it only 31% of the time for \\(Y(0) = 1\\) and otherwise 69% of the time for \\(Y(0) = 0\\). 5.2.5 Potential Outcomes Behind the Scenes scm_5.8 &lt;- list() scm_5.8 &lt;- within(scm_5.8, { the_nodes &lt;- c(&quot;A&quot; = &quot;&quot;, &quot;Y&quot; = &quot;&quot;, &quot;U&quot; = &quot;(Y(0), y(1))&quot;) dag &lt;- dagify( A ~ H, Y ~ A + U, U ~ H, latent = &quot;U&quot;, labels = the_nodes) plot &lt;- ggp_dag(dag) }) Figure 5.8: Potential Outcomes Behind the Scenes scm_5.8 &lt;- within(scm_5.8, { set.seed(888) # generate the observed confounder H defs &lt;- defData(varname = &quot;H&quot;, dist = &quot;binomial&quot;, formula = 0.4, variance = 1) # let the treatment depend on the observed confounder formulaA &lt;- &quot;H * 0.8 + (1 - H) * 0.3&quot; defs &lt;- defData(defs, varname = &quot;A&quot;, dist = &quot;binomial&quot;, formula = formulaA, variance = 1) # generate the poential outcomes dependent on the observed confounder formulaY0 &lt;- &quot;H * 0.3 + (1 - H) * 0.5&quot; formulaY1 &lt;- &quot;H * 0.5 + (1 - H) * 0.7&quot; defs &lt;- defData(defs, varname = &quot;Y0&quot;, dist = &quot;binomial&quot;, formula = formulaY0, variance = 1) defs &lt;- defData(defs, varname = &quot;Y1&quot;, dist = &quot;binomial&quot;, formula = formulaY1, variance = 1) # let the outcome depend on the treatment and Y0, Y1 formulaY &lt;- &quot;A * Y1 + (1 - A) * Y0&quot; defs &lt;- defData(defs, varname = &quot;Y&quot;, dist = &quot;binomial&quot;, formula = formulaY, variance = 1) # generate the data data &lt;- genData(1000, defs) # create the tabletbl &lt;- sim_5.6$data %&gt;% tbl &lt;- data %&gt;% group_by(H, A, Y0, Y1, Y) %&gt;% count(name = &quot;prob&quot;) %&gt;% ungroup() %&gt;% mutate(prob = prob / sum(prob)) stopifnot(near(sum(tbl$prob), 1)) # format the tableau tbl &lt;- gt_probs(tbl, title = &quot;Table for `simall.r`&quot;, subtitle = &quot;Simulation Probabilities for `simall.r`&quot;) }) scm_5.8$tbl html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #rjnfbzjtxw .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #rjnfbzjtxw .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rjnfbzjtxw .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #rjnfbzjtxw .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #rjnfbzjtxw .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rjnfbzjtxw .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #rjnfbzjtxw .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #rjnfbzjtxw .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #rjnfbzjtxw .gt_column_spanner_outer:first-child { padding-left: 0; } #rjnfbzjtxw .gt_column_spanner_outer:last-child { padding-right: 0; } #rjnfbzjtxw .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #rjnfbzjtxw .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #rjnfbzjtxw .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #rjnfbzjtxw .gt_from_md > :first-child { margin-top: 0; } #rjnfbzjtxw .gt_from_md > :last-child { margin-bottom: 0; } #rjnfbzjtxw .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #rjnfbzjtxw .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #rjnfbzjtxw .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rjnfbzjtxw .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #rjnfbzjtxw .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #rjnfbzjtxw .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #rjnfbzjtxw .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #rjnfbzjtxw .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #rjnfbzjtxw .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rjnfbzjtxw .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #rjnfbzjtxw .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #rjnfbzjtxw .gt_sourcenote { font-size: 90%; padding: 4px; } #rjnfbzjtxw .gt_left { text-align: left; } #rjnfbzjtxw .gt_center { text-align: center; } #rjnfbzjtxw .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #rjnfbzjtxw .gt_font_normal { font-weight: normal; } #rjnfbzjtxw .gt_font_bold { font-weight: bold; } #rjnfbzjtxw .gt_font_italic { font-style: italic; } #rjnfbzjtxw .gt_super { font-size: 65%; } #rjnfbzjtxw .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table for simall.r Simulation Probabilities for simall.r H A Y0 Y1 Y prob 0 0 0 0 0 0.070 0 0 0 1 0 0.159 0 0 1 0 1 0.055 0 0 1 1 1 0.140 0 1 0 0 0 0.023 0 1 0 1 1 0.065 0 1 1 0 0 0.026 0 1 1 1 1 0.059 1 0 0 0 0 0.031 1 0 0 1 0 0.020 1 0 1 0 1 0.019 1 0 1 1 1 0.006 1 1 0 0 0 0.109 1 1 0 1 1 0.117 1 1 1 0 0 0.051 1 1 1 1 1 0.050 Fundamentals of Causal Inference, Babette A. Brumback, 2022 and with the script simall.r in base R simall.r &lt;- function(n = 1000) { set.seed(888) # generate the observed confounder H &lt;- rbinom(n, size = 1, prob = 0.4) # generate the treatment probA &lt;- H * 0.8 + (1 - H) * 0.3 A &lt;- rbinom(n, size = 1, prob = probA) # generate the poential outcomes dependent on the observed confounder probY0 &lt;- H * 0.3 + (1 - H) * 0.5 probY1 &lt;- H * 0.5 + (1 - H) * 0.7 Y0 &lt;- rbinom(n, size = 1, prob = probY0) Y1 &lt;- rbinom(n, size = 1, prob = probY1) # let the outcome depend on the treatment and Y0, Y1 probY &lt;- A * Y1 + (1 - A) * Y0 Y &lt;- rbinom(n, size = 1, prob = probY) data.frame(cbind(H, A, Y0, Y1, Y)) } and the causal DAG for the What-If? study is scm_5.9 &lt;- list() scm_5.9 &lt;- within(scm_5.9, { the_nodes &lt;- c(&quot;U&quot; = &quot;Unmeasured, healthy behavior (U=1)&quot;, &quot;AD0&quot; = &quot;Adherence time 0&quot;, &quot;VL0&quot; = &quot;Viral Load time 0&quot;, &quot;T&quot; = &quot;Naltrexone (T=1)&quot;, &quot;A&quot; = &quot;Reduced drinking (A=1)&quot;, &quot;AD1&quot; = &quot;Adherence time 1&quot;, &quot;VL1&quot; = &quot;Viral Load time 1&quot;) coords &lt;- data.frame( name = names(the_nodes), x = c(2, 3, 4, 1, 2, 3, 4), y = c(2, 2, 2, 1, 1, 1, 1) ) dag &lt;- dagify( AD0 ~ U, VL0 ~ AD0, A ~ `T` + U, AD1 ~ A, VL1 ~ AD0 + AD1 + U, outcome = &quot;VL1&quot;, exposure = &quot;T&quot;, latent = &quot;U&quot;, labels = the_nodes) text_labels &lt;- c(&quot;A&quot;, expression(AD[0]), expression(AD[1]), &quot;T&quot;, &quot;U&quot;, expression(VL[0]), expression(VL[1])) plot &lt;- ggp_dag(dag, text_labels = text_labels, text_size = 5) }) Figure 5.9: The Double What-If? Study 5.3 Exercises 5.3.1 Exercise 1 scm_ex5.1 &lt;- list() scm_ex5.1 &lt;- within(scm_ex5.1, { the_nodes &lt;- c(&quot;A&quot; = &quot;Nutrient&quot;, &quot;W1&quot; = &quot;Diet&quot;, &quot;W2&quot; = &quot;Weight&quot;, &quot;W3&quot; = &quot;Exercise&quot;, &quot;Y&quot; = &quot;Strength&quot;) dag &lt;- dagify( A ~ W1, Y ~ W3, W2 ~ W1 + W3, labels = the_nodes, exposure = &quot;A&quot;, outcome = &quot;Y&quot;) text_labels &lt;- c(&quot;A&quot;, expression(W[1]), expression(W[2]), expression(W[3]), &quot;Y&quot;) plot &lt;- ggp_dag(dag, text_labels = text_labels, box_padding = 3) }) Math the vairable to the causal DAG Figure 5.10: Causal DAG for Exercise 1 How wwould you analyse the effect of nutrient intake on increased strength? Since we have a collider at \\(W_3 = weight\\) then \\(diet\\) and \\(exercise\\) are not independent and \\(weight\\) is a confounder if we condition on it. That is \\[ Strength \\not \\! \\perp\\!\\!\\!\\perp Nutrient \\mid Weight \\] So the effect of \\(nutrient\\) on \\(strength\\) would be measured without conditioning on \\(weight\\). The regression \\[ strength = \\beta_0 + \\beta_1 nutrient \\] The analysis would be conducted by evaluating the effect measures as described in chapter 3 and 4. How might a reviewer critique your results The reviewer could raise the following points Several regression models including different mixtures of predictor variables should be run and evaluated toe stimate the impact of confounders Excluding other predictors in the regression models could make the analysis spurious as the effects of confounders might actually be determinant. 5.3.2 Exercise 2 The DAG is scm_ex5.2 &lt;- list() scm_ex5.2 &lt;- within(scm_ex5.2, { the_nodes &lt;- c(&quot;A&quot; = &quot;&quot;, &quot;H1&quot; = &quot;&quot;, &quot;H2&quot; = &quot;&quot;, &quot;H3&quot; = &quot;&quot;, &quot;H4&quot; = &quot;&quot;, &quot;Y&quot; = &quot;&quot;) dag &lt;- dagify( H2 ~ H1, H3 ~ H1, H4 ~ H1 + H3, A ~ H2 + H3, Y ~ A + H2 + H4, exposure = &quot;A&quot;, outcome = &quot;Y&quot;, labels = the_nodes) text_labels &lt;- c(&quot;A&quot;, expression(H[1]), expression(H[2]), expression(H[3]), expression(H[4]), &quot;Y&quot;) plot &lt;- ggp_dag(dag, text_labels = text_labels) }) Figure 5.11: Causal DAG for Exercise 2 Which varibales are true confounder? A true confounder is defined on p. 86 as a variable that influences the exposure and that also influences the outcome via a directed path that does not include the exposure. \\(H1\\) is a true confounder since * It influences the exposure \\(A\\) through the path \\(H_1 \\rightarrow H_3 \\rightarrow A\\) and influences the outcome through the path \\(H_1 \\rightarrow H_4 \\rightarrow Y\\) that does not include \\(A\\) \\(H2\\) is a true confounder since * It influences the exposure \\(A\\) through the path \\(H_2 \\rightarrow A\\) and influences the outcome through the path \\(H_2 \\rightarrow Y\\) that does not include \\(A\\) \\(H3\\) is a true confounder since * It influences the exposure \\(A\\) through the path \\(H_3 \\rightarrow A\\) and influences the outcome through the path \\(H_3 \\rightarrow H_4 \\rightarrow Y\\) that does not include \\(A\\) Is the set \\(\\{H_2, H_4\\}\\) a sufficient set of true confounders? The minimal adjustment sets, also called smallest sufficient set of true confounders, include the set \\(\\{H_2, H_4\\}\\) so the answer is yes. adjustmentSets(scm_ex5.2$dag, exposure = &quot;A&quot;, outcome = &quot;Y&quot;) ## { H2, H4 } ## { H2, H3 } Redraw the DAG to include potential outcomes behind the scene. We block \\(\\{H_2, H_4\\}\\) with the potential outcomes. Figure 5.12: Causal DAG for Exercise 2 with Potential Outcomes Are the potenial outcomes true confounders? No as they do not influence the exposure. See also section 5.2 p. 87, after figure 5.5, that says The collection of potential outcomes \\(\\{Y(a)\\}_{a \\in A}\\) van be viewed as the ultimate confounder, even when it is not a true confounder. And since the potential outcome is a latent variable it is not included in the minimal set. But the minimal set is clearly block by the potential outcomes node \\(U\\). adjustmentSets(scm_ex5.2po$dag) ## { H2, H4 } ## { H2, H3 } 5.3.3 Exercise 3 The simulation is done with simstudy scm_ex5.3 &lt;- list() scm_ex5.3 &lt;- within(scm_ex5.3, { set.seed(1234) defs &lt;- defData(varname = &quot;H1&quot;, dist = &quot;binomial&quot;, formula = 0.1, variance = 1) formulaH2 &lt;- &quot;0.1 + 0.1 * H1&quot; defs &lt;- defData(defs, varname = &quot;H2&quot;, dist = &quot;binomial&quot;, formula = formulaH2, variance = 1) formulaH3&lt;- &quot;0.2 + 0.2 * H2&quot; defs &lt;- defData(defs, varname = &quot;H3&quot;, dist = &quot;binomial&quot;, formula = formulaH3, variance = 1) defs &lt;- defData(defs, varname = &quot;H4&quot;, dist = &quot;binomial&quot;, formula = 0.5, variance = 1) formulaA &lt;- &quot;0.1 + 0.1 * H2 + 0.1 * H3 + 0.1 * H4&quot; defs &lt;- defData(defs, varname = &quot;A&quot;, dist = &quot;binomial&quot;, formula = formulaA, variance = 1) formulaY &lt;- &quot;0.1 + 0.2 * H1 + 0.2 * H2 + + 0.3 * A&quot; defs &lt;- defData(defs, varname = &quot;Y&quot;, dist = &quot;binomial&quot;, formula = formulaY, variance = 1) # generate the data data &lt;- genData(1000, defs) # create table of joint probabilities tbl &lt;- data %&gt;% group_by(H1, H2, H3, H4, A, Y) %&gt;% count(name = &quot;prob&quot;) %&gt;% ungroup() %&gt;% mutate(prob = prob / sum(prob)) stopifnot(near(sum(tbl$prob), 1)) # format the tableau summ &lt;- gt_probs(tbl, title = &quot;Table exercise 5.3&quot;, subtitle = &quot;Simulation Probabilities for `simex3.r`&quot;) }) Draw a causal DAG scm_ex5.3 &lt;- within(scm_ex5.3, { the_nodes &lt;- c(&quot;A&quot; = &quot;&quot;, &quot;H1&quot; = &quot;&quot;, &quot;H2&quot; = &quot;&quot;, &quot;H3&quot; = &quot;&quot;, &quot;H4&quot; = &quot;&quot;, &quot;Y&quot; = &quot;&quot;) dag &lt;- dagify( H2 ~ H1, H3 ~ H2, A ~ H2 + H3 + H4, Y ~ A + H1 + H2, exposure = &quot;A&quot;, outcome = &quot;Y&quot;, labels = the_nodes) text_labels &lt;- c(&quot;A&quot;, expression(H[1]), expression(H[2]), expression(H[3]), expression(H[4]), &quot;Y&quot;) plot &lt;- ggp_dag(dag, layout = &quot;nicely&quot;, text_labels = text_labels, text_size = 5) }) Figure 5.13: Causal DAG for Exercise 3 List the true confounders it is worth repeating the definition of true confounders found on p. 86 a variable that influences the exposure and that also influences the outcome via a directed path that does not include the exposure. which in this case are \\(\\{H_1, H_2\\}\\) because \\(H_1\\) influence the exposure through \\(H_1 \\rightarrow H_2 \\rightarrow A\\) and the outcome without the exposure in the path through \\(H_1 \\rightarrow Y\\) \\(H_2\\) influence the exposure through \\(H_2 \\rightarrow A\\) and the outcome without the exposure in the path through \\(H_2 \\rightarrow Y\\) List the smallest sufficient set of true confounders That set would be \\(\\{H_2\\}\\) since it blocks \\(H_1\\) as well adjustmentSets(scm_ex5.3$dag) ## { H2 } Therefore to redraw with potential outcomes we would blovk the paths \\(H_2 \\rightarrow Y\\) and \\(H_1 \\rightarrow Y\\) as follows scm_ex5.3po &lt;- list() scm_ex5.3po &lt;- within(scm_ex5.3po, { the_nodes &lt;- c(&quot;A&quot; = &quot;&quot;, &quot;H1&quot; = &quot;&quot;, &quot;H2&quot; = &quot;&quot;, &quot;H3&quot; = &quot;&quot;, &quot;H4&quot; = &quot;&quot;, &quot;U&quot; = &quot;(Y(0), Y(1))&quot;, &quot;Y&quot; = &quot;&quot;) dag &lt;- dagify( H2 ~ H1, H3 ~ H2, A ~ H2 + H3 + H4, U ~ H1 + H2, Y ~ A + U, exposure = &quot;A&quot;, outcome = &quot;Y&quot;, latent = &quot;U&quot;, labels = the_nodes) text_labels &lt;- c(&quot;A&quot;, expression(H[1]), expression(H[2]), expression(H[3]), expression(H[4]), &quot;U&quot;, &quot;Y&quot;) plot &lt;- ggp_dag(dag, layout = &quot;nicely&quot;, text_labels = text_labels, text_size = 5) }) Figure 5.14: Causal DAG for Exercise 3 With Potential Outcomes Verify that they form a sufficient set of confounders and again the minimal set is \\(\\{H_2\\}\\) but this time it is blocked by the latent variable \\(U\\). adjustmentSets(scm_ex5.3po$dag) ## { H2 } Are the potential outcomes true confounders? No as they do not influence the exposure. See also section 5.2 p. 87, after figure 5.5, that says The collection of potential outcomes \\(\\{Y(a)\\}_{a \\in A}\\) van be viewed as the ultimate confounder, even when it is not a true confounder. 5.3.4 Exercise 4 scm_ex5.4 &lt;- list() scm_ex5.4 &lt;- within(scm_ex5.4, { the_nodes &lt;- c(&quot;O&quot; = &quot;&quot;, &quot;T&quot; = &quot;&quot;, &quot;Y&quot; = &quot;&quot;) dag &lt;- dagify( Y ~ O + `T`, exposure = &quot;T&quot;, outcome = &quot;Y&quot;, labels = the_nodes) plot &lt;- ggp_dag(dag, text_size = 5) }) Figure 5.15: Causal DAG for Exercise 4 Explain why assessing safety of the vaccine by estimating the association between \\(T\\) and \\(Y\\) for those with \\(O = 1\\) is a biased analysis. By including \\(O = 1\\) in the analysis \\(Y\\) becomes a common effect of both \\(O\\) and \\(T\\). Therefore conditioning on \\(O\\) cause the study to focus on a slice of data that itself might influence the outcome since the fact that some participants are observed but not others might very well not be random and the result of one or many latent confounders. 5.3.5 Exercise 5 scm_ex5.5 &lt;- list() scm_ex5.5 &lt;- within(scm_ex5.5, { # the simulation set.seed(2468) defs &lt;- defData(varname = &quot;T&quot;, dist = &quot;binomial&quot;, formula = 0.5, variance = 1) formulaY &lt;- &quot;0.01 * T&quot; defs &lt;- defData(defs, varname = &quot;Y&quot;, dist = &quot;binomial&quot;, formula = formulaY, variance = 1) formulaO &lt;- &quot;Y + 0.1 * (1- Y)&quot; defs &lt;- defData(defs, varname = &quot;O&quot;, dist = &quot;binomial&quot;, formula = formulaO, variance = 1) # generate the data data &lt;- genData(1e4, defs) # create table of joint probabilities tbl &lt;- data %&gt;% group_by(`T`, Y, O) %&gt;% count(name = &quot;prob&quot;) %&gt;% ungroup() %&gt;% mutate(prob = prob / sum(prob)) stopifnot(near(sum(tbl$prob), 1)) # format the tableau summ &lt;- gt_probs(tbl, title = &quot;Table exercise 5.5&quot;, subtitle = &quot;Simulation Probabilities for `simex5.r`&quot;) # The DAG the_nodes &lt;- c(&quot;O&quot; = &quot;Inclusion&quot;, &quot;T&quot; = &quot;Infection HPV&quot;, &quot;Y&quot; = &quot;Cervical Cancer&quot;) dag &lt;- dagify( Y ~ `T`, O ~ Y, exposure = &quot;T&quot;, outcome = &quot;Y&quot;, labels = the_nodes) plot &lt;- ggp_dag(dag, text_size = 5) }) Figure 5.16: Causal DAG for Exercise 5 As explained in section 3.3 of chapter 3 if we use the information from the simulation then \\[ \\begin{align*} p_0 &amp;= E(Y = 1 \\mid T = 0) = 0.01 * 0.5 = 0.005 \\\\ p_1 &amp;= E(Y = 1 \\mid T = 1) = 0.01 \\\\ &amp;\\therefore \\\\ RD &amp;= 0.01 - 0.005 = 0.005 \\\\ OR &amp;= \\frac{\\frac{p_1}{1 - p_1}}{\\frac{p_0}{1-p_0}} = \\frac{0.1}{0.9} \\cdot \\frac{0.995}{0.005} = 22\\frac{1}{9} =22.11 \\end{align*} \\] 5.3.5.1 a) Show mathematically that the odds ratio comparing with \\(O\\) is the same as when not conditioning with \\(O\\) The odds ratio \\(OR\\) is \\[ \\begin{align*} OR &amp;= \\frac{P(Y=1 \\mid T = 1, O =1)}{1 - P(Y=1 \\mid T = 1, O =1)} \\cdot \\frac{1 - P(Y=1 \\mid T=0, O =1)}{P(Y=1 \\mid T=0, O =1)} \\\\ &amp; =\\frac{P(Y=1 \\mid T = 1, O =1)}{P(Y=0 \\mid T = 1, O =1)} \\cdot \\frac{P(Y=0 \\mid T = 0, O =1)}{P(Y = 1 \\mid T = 0, O =1)} \\\\ \\end{align*} \\] but we know that \\[ \\begin{align*} P(Y \\mid T, O)P(T, O) = P(T, Y, O) = P(T \\mid Y, O) P(Y, O) \\end{align*} \\] therefore \\[ \\begin{align*} OR &amp;= \\frac{P(Y=1 \\mid T=1, O=1)}{P(Y=0 \\mid T=1, O=1)} \\cdot \\frac{P(Y=0 \\mid T=0, O=1)}{P(Y=1 \\mid T=0, O=1)} \\\\ &amp;= \\frac{P(T=1 \\mid Y=1, O=1)}{P(T=1 \\mid Y=0, O=1)} \\cdot \\frac{P(T=0 \\mid Y=0, O=1)}{P(T=0 \\mid Y=1, O =1)} \\end{align*} \\] ans since \\[ T\\perp\\!\\!\\!\\perp O \\mid Y \\implies P(T \\mid Y, O) = P(T \\mid Y) \\] then \\[ \\begin{align*} OR &amp;= \\frac{P(T=1 \\mid Y=1, O=1)}{P(T=1 \\mid Y=0, O=1)} \\cdot \\frac{P(T=0 \\mid Y=0, O=1)}{P(T=0 \\mid Y=1, O=1)} \\\\ &amp;= \\frac{P(T=1 \\mid Y=1)}{P(T=1 \\mid Y=0)} \\cdot \\frac{P(T=0 \\mid Y=0)}{P(T=0 \\mid Y=1)} \\end{align*} \\] and again by using \\[ \\begin{align*} P(Y \\mid T)P(T) = P(T, Y) = P(T \\mid Y) P(Y) \\end{align*} \\] we have \\[ \\begin{align*} OR &amp;= \\frac{P(T=1 \\mid Y=1)}{P(T=1 \\mid Y=0)} \\cdot \\frac{P(T=0 \\mid Y=0)}{P(T=0 \\mid Y=1)} \\\\ &amp;= \\frac{P(Y=1 \\mid T=1)}{P(Y=1 \\mid T=0)} \\cdot \\frac{P(Y=0 \\mid T=0)}{P(Y=0 \\mid T=1)} \\end{align*} \\] 5.3.5.2 b) Show that when \\(Y=1\\) is rare, the odds ratio is similar to the risk ratio. from a) above we have \\[ \\begin{align*} OR &amp;= \\frac{P(Y=1 \\mid T=1)}{P(Y=1 \\mid T=0)} \\cdot \\frac{P(Y=0 \\mid T=0)}{P(Y=0 \\mid T=1)} \\end{align*} \\] and since \\(Y\\) is rare \\[ P(Y=0 \\mid T=0)\\approx 1 \\approx P(Y=0 \\mid T=1) \\] therefore \\[ \\begin{align*} OR &amp;= \\frac{P(Y=1 \\mid T=1)}{P(Y=1 \\mid T=0)} \\cdot \\frac{P(Y=0 \\mid T=0)}{P(Y=0 \\mid T=1)} \\\\ &amp;\\approx \\frac{P(Y=1 \\mid T=1)}{P(Y=1 \\mid T=0)} \\\\ &amp;= RR \\end{align*} \\] "],["backdoor.html", "Chapter 6 Backdoor Method via Standardization 6.1 Standardization via Outome Modeling", " Chapter 6 Backdoor Method via Standardization library(tidyr) library(dplyr) library(dagitty) library(ggplot2) library(ggdag) library(gt) 6.1 Standardization via Outome Modeling We use R to compute the standardized estimates with the following script #&#39; Compute standardized estimates #&#39; #&#39; Compute standardized estimates. #&#39; #&#39; The standardized estimates are computed using the outcome model. #&#39; IMPORTANT: The formula must be in the format \\code{Y ~ T + H + T*H}. #&#39; #&#39; @param dat Dataframe of raw data. #&#39; @param formula Formula in format \\code{Y ~ T + H + T*H} #&#39; @R Number of bootstrap replicates. #&#39; @conf Confidence interval #&#39; #&#39; @return Dataframe of estimates bootstand &lt;- function(dat, formula = Y ~ `T` + H + `T`*H, R = 1000, conf = 0.95) { # the name of the intercept variable used by lm x0 &lt;- &quot;(Intercept)&quot; # the name of the response variable y &lt;- all.vars(formula[[2]]) # name of the treatment variable t &lt;- all.vars(formula[[3]])[1] # name of the condition variable h &lt;- all.vars(formula[[3]])[2] # name of interaction th &lt;- paste(t, h, sep = &quot;:&quot;) estimator &lt;- function(data, ids) { dat &lt;- data[ids, ] # marginal expected value of H EH &lt;- mean(dat[, h]) # fit the outcome model and extract the coefficients coefs &lt;- coef(lm(formula = formula , data = dat)) # compute the marginal expected potential outcomes EY0 &lt;- coefs[x0] + coefs[h] * EH EY1 &lt;- coefs[x0] + coefs[t] + coefs[h] * EH + coefs[th] * EH # return the effect measures rd &lt;- EY1 - EY0 logrr &lt;- log(EY1 / EY0) out &lt;- c(EY0, EY1, rd, logrr) names(out) &lt;- c(&quot;EY0&quot;, &quot;EY1&quot;, &quot;rd&quot;, &quot;logrr&quot;) out } out &lt;- run_boot(data = dat, statistic = estimator, R = R, conf = conf) # exponentiate the log values out &lt;- exp_effects(data = out, vars = c(&quot;rr&quot; = &quot;logrr&quot;)) out } and for the What-If? study this gives whatif.out &lt;- bootstand(whatifdat, formula = Y ~ A + H + A*H) and we compare with the authors d &lt;- data.frame( name = c(&quot;EY0&quot;, &quot;EY1&quot;, &quot;RD&quot;, &quot;RR&quot;), auth = c(0.375, 0.289, -0.086, 0.77), est = whatif.out$est ) stopifnot(sum(abs(d$auth - d$est)) &lt; 0.01) and the results are presented in table 6.1 gt_measures(whatif.out, title = &quot;Table 6.1&quot;, subtitle = &quot;What-If Study: Standardized Estimates&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #xvazoighvn .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xvazoighvn .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xvazoighvn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xvazoighvn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #xvazoighvn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xvazoighvn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xvazoighvn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xvazoighvn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xvazoighvn .gt_column_spanner_outer:first-child { padding-left: 0; } #xvazoighvn .gt_column_spanner_outer:last-child { padding-right: 0; } #xvazoighvn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xvazoighvn .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #xvazoighvn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xvazoighvn .gt_from_md > :first-child { margin-top: 0; } #xvazoighvn .gt_from_md > :last-child { margin-bottom: 0; } #xvazoighvn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xvazoighvn .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #xvazoighvn .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xvazoighvn .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #xvazoighvn .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xvazoighvn .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xvazoighvn .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xvazoighvn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xvazoighvn .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xvazoighvn .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #xvazoighvn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xvazoighvn .gt_sourcenote { font-size: 90%; padding: 4px; } #xvazoighvn .gt_left { text-align: left; } #xvazoighvn .gt_center { text-align: center; } #xvazoighvn .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xvazoighvn .gt_font_normal { font-weight: normal; } #xvazoighvn .gt_font_bold { font-weight: bold; } #xvazoighvn .gt_font_italic { font-style: italic; } #xvazoighvn .gt_super { font-size: 65%; } #xvazoighvn .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Table 6.1 What-If Study: Standardized Estimates Measure Estimate CI1 EY0 0.375 (0.268, 0.487) EY1 0.289 (0.205, 0.376) rd -0.086 (-0.209, 0.036) rr 0.770 (0.529, 1.123) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval where we observe a reduction of the viral load but the difference is not statistically significant. "],["errata.html", "A Errata A.1 Preface A.2 Chapter 1 A.3 Chapter 2 A.4 Chapter 3 A.5 Chapter 4 A.6 Chapter 5 A.7 Chapter 6", " A Errata A.1 Preface page xi, last word of first paragraph is standaridzation, s/b standardization A.2 Chapter 1 A.2.1 Section 1.2.3.2, p. 11 The sentence of the 6th line on top of the page is We simulated the data according to the hyothetical Should be hypothetical. A.3 Chapter 2 A.3.1 Figure 2.1, p. 30 This is really a small detail. The caption of the bottom plot is \\(\\hat{E_{np}}(Y \\mid A= 1, H =1, T = 1)\\), s/b \\(\\hat{E}_{np}\\) A.4 Chapter 3 A.4.1 Typography: section 3.2 p. 40, equation 3.1 The current latex expression of conditional independence used seems to be (Y(0), Y(1)) \\ \\text{II} \\ T with the output \\[ (Y(0), Y(1)) \\ \\text{II} \\ T \\] a better typography would be \\perp\\!\\!\\!\\perp for the symbol \\(\\perp\\!\\!\\!\\perp\\). When used for equation 3.1 as (Y(0), Y(1)) \\perp\\!\\!\\!\\perp T we obtain \\[ (Y(0), Y(1)) \\perp\\!\\!\\!\\perp T \\] In the case when we want to show dependence, that is no independence then the latex expression is \\not\\!\\perp\\!\\!\\!\\perp for the symbol \\(\\not\\!\\perp\\!\\!\\!\\perp\\). For example equation 3.1 would become \\[ (Y(0), Y(1)) \\not\\!\\perp\\!\\!\\!\\perp T \\] A.5 Chapter 4 A.5.1 Section 4.1 p. 67 (on top) The line is which is statistically signficant should be significant A.6 Chapter 5 ## nothing found A.7 Chapter 6 A.7.1 Section 6.1 p. 100, first paragraph The second sentence says Mistakingly equation \\(E_H E(Y \\mid T=t \\mid H)\\) with [] Shouldnt it be \\(E_H E(Y \\mid T=t, H)\\)? "],["notes.html", "B Notes B.1 Chapter 2 B.2 Chapter 4", " B Notes B.1 Chapter 2 B.1.1 section 2.4 p. 31 The second sentence of the last paragraph on p. 33 says We also need the car package in order for the summary() function to operate on boot objects the way we describe. This sentence is not required if we use the boot::boot.ci() which simplifies lmodboot.r() and does not require the car package. See the code in this document for lmodboot.r in chapter 2. B.2 Chapter 4 B.2.1 Section 4.1 See the plots in section 4.2. They could be helpful to visualize the changes in effect measures from one level of modifier to the other. B.2.2 Section 4.2 B.2.2.1 Monte Carlo Simulation A Monte Carlo is provided in section 4.2 and coded in a function called betasim_effect_measures(). It uses the \\(Beta\\) distribution. It is helpful in that it confirms the same results as in Jake Shannin (2021) is less CPU intensive as it needs only 5000 iterations to confirm Jake Shannin (2021) is easier to code than java and uses R which is the declared language of Brumback (2022) allows some extra flexibility with the shape parameters of \\(Beta\\) to investigate the conclusion with diffferent curves. See the suggestion for applications below. B.2.2.2 page 72, Figure 4.1 The probabilites shown in the Venn diagram do not add up to 100% because, for example, the event that RR changes in the same direction as RD but not in the same direction as the other two measures []. It would akward to arbitrarily one of those 2 chances as zero. Jake Shannin (2021) mentions that it is the result of not mutually exclusive events. That is true. Yet, these events, properly grouped are actually mutually exclusive. In section 4.2 they are called Opposite pairwise events. Using these definitions then yes, they are mutually exclusive but cannot be properly shown in the Venn diagram. This can be easily solved by splitting the probabilities. See section 4.2 for details. The end result a proper partitioning of the sample space \\(\\Omega\\) and is, in fact, a \\(\\sigma-field\\) (See Geoffrey R. Grimmet (2001), section 1.2). Yet it does not change the conclusions reached in Jake Shannin (2021). B.2.2.3 Applications See my sub-section 4.2 called Applications where 2 possible applications are mentioned. Data pre-processing (data cleaning) Bayesian prior for Beta-binomial model B.2.3 Exercises B.2.3.1 Exercise 1 Using the causal power, the conclusion is different than the official answer. It is not obvious why the official solution does not make use of the causal power. B.2.3.2 Exercise 5 The official solution uses gee with the default family, that is gaussian. Since the outcome \\(attend\\) is binary isnt it better to use the binomial family? We quote p. 50 from chapter 3 in that respect Because our outcome is binary, we choose to fit the logistic parametric model References "],["functions.html", "C Functions C.1 Chapter 2 C.2 Chapter 3 C.3 Chapter 4 C.4 Chapter 5", " C Functions All the scripts for the functions below can be found at study project, mostly in the /lib folder. The functions are shown in order of appearance in the chapter where they are first used. C.1 Chapter 2 The file boot_utils includes several utility functions used by the bootstrapping functions. #&#39; Boostrap and genarate a dataframe of estimates with CI #&#39; #&#39; Boostrap and genarate a dataframe of estimates with CI. #&#39; #&#39; Generate a dataframe of estimates with the columns #&#39; \\code{c(&quot;est&quot;, &quot;conf&quot;, &quot;lci&quot;, &quot;uci&quot;)}. #&#39; #&#39; @param data Dataframe of raw data. #&#39; @param statistic Function applied to data by bootstraaping. #&#39; @param R Number of boostrap replicates. Default is 1000. #&#39; @param conf Confidence interval width. Default is 0.95. #&#39; #&#39; @return Dataframe of estimates with CI. #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } run_boot &lt;- function(data, statistic, R = 1000, conf = 0.95) { stopifnot(R &gt;= 1, conf &gt; 0, conf &lt; 1) # run the bootstrapping boot.out &lt;- boot::boot(data = data, statistic = statistic, R = R) # extract the estimated values and confidence intervals from the boot object out &lt;- sapply(X = seq_along(boot.out$t0), FUN = function(i) { est &lt;- boot.out$t0[i] ci &lt;- boot::boot.ci(boot.out, conf = conf, type = &quot;norm&quot;, index = i)$normal out &lt;- c(est, ci) names(out) &lt;- c(&quot;est&quot;, &quot;conf&quot;, &quot;lci&quot;, &quot;uci&quot;) out }) # create the dataframe to hold the results out &lt;- data.frame(t(out)) # add the first column as the names of the results data.frame(name = names(boot.out$t0), out) } #&#39; Exponentiate the effect measures #&#39; #&#39; Exponentiate the effect measures. #&#39; #&#39; Exponentiate each selected measure in the dataframe and replace its name #&#39; accordingly. #&#39; #&#39; @param data Dataframe. #&#39; @param vars Character() of measure names. #&#39; #&#39; @return Dataframe of converted effects measures. #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } exp_effects &lt;- function(data, vars = c(&quot;rr&quot; = &quot;logrr&quot;,&quot;rrstar&quot; = &quot;logrrstar&quot;, &quot;or&quot; = &quot;logor&quot;)) { pos &lt;- match(vars, data$name) within(data, { est[pos] &lt;- exp(est[pos]) lci[pos] &lt;- exp(lci[pos]) uci[pos] &lt;- exp(uci[pos]) name[pos] &lt;- names(vars) }) } #&#39; Inverse logit the effect measures #&#39; #&#39; Inverse logit the effect measures. #&#39; #&#39; Inverse logit each selected measure in the dataframe and replace its name #&#39; accordingly. #&#39; #&#39; @param data Dataframe. #&#39; @param vars Character() of measure names. #&#39; #&#39; @return Dataframe of converted effects measures. #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } invlogit_effects &lt;- function(data, vars = c(&quot;p&quot; = &quot;logitp&quot;)) { pos &lt;- match(vars, data$name) within(data, { est[pos] &lt;- plogis(est[pos]) lci[pos] &lt;- plogis(lci[pos]) uci[pos] &lt;- plogis(uci[pos]) name[pos] &lt;- names(vars) }) } C.2 Chapter 3 C.2.1 gt_measures.R #&#39; Create a table of effect measures with their CI #&#39; #&#39; Create a table of effect measures with their CI. #&#39; #&#39; The table will have 3 columns. The measure name, the estimates and the #&#39; confidence interval. #&#39; #&#39; @param df Dataframe of results #&#39; @param conf Numeric, confidence interval #&#39; @param digits Integer, number of digits to the right of the decimal. #&#39; @param title The title of the table #&#39; @param subtitle Subtitle of the table #&#39; #&#39; @return A gt object create by the \\code{gt} package #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } gt_measures &lt;- function(df, conf = df$conf[1], digits = 3, title = &quot;Title&quot;, subtitle = &quot;Subtitle&quot;) { # confidence interval label used in footnote ci_label &lt;- sprintf(&quot;%.0f%% confidence interval&quot;, 100 * conf) df %&gt;% select(name, est, lci, uci) %&gt;% mutate(est = round(est, digits), lci = round(lci, digits), uci = round(uci, digits), ci = paste0(&quot;(&quot;, lci, &quot;, &quot;, uci, &quot;)&quot;), lci = NULL, uci = NULL) %&gt;% gt() %&gt;% tab_header( title = md(paste0(&quot;**&quot;, title, &quot;**&quot;)), subtitle = md(paste0(&quot;**&quot;, subtitle, &quot;**&quot;)) ) %&gt;% cols_align(align = &quot;center&quot;, columns = !matches(&quot;name&quot;)) %&gt;% cols_label( name = &quot;Measure&quot;, est = &quot;Estimate&quot;, ci = &quot;CI&quot;) %&gt;% opt_row_striping() %&gt;% tab_footnote( footnote = ci_label, locations = cells_column_labels(columns = ci) ) %&gt;% tab_source_note( source_note = &quot;Fundamentals of Causal Inference, Babette A. Brumback, 2022&quot; ) %&gt;% tab_options( heading.background.color = &quot;gainsboro&quot;, column_labels.font.weight = &quot;bold&quot;) } C.3 Chapter 4 C.3.1 gt_measures_modif.R #&#39; Create a table of effect-measure modifications with their CI #&#39; #&#39; Create a table of effect-measure modifications with their CI. #&#39; #&#39; The table will have 3 columns for each of the 2 strata and the #&#39; difference column. The measure name, the estimates and the #&#39; confidence interval. #&#39; #&#39; @param df Dataframe of results #&#39; @param conf Numeric, confidence interval #&#39; @param digits Integer, number of digits to the right of the decimal. #&#39; @param title The title of the table #&#39; @param subtitle Subtitle of the table #&#39; #&#39; @return A gt object create by the \\code{gt} package #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } gt_measures_modif &lt;- function(df, conf = df$conf[1], digits = 3, title = &quot;Title&quot;, subtitle = &quot;Effect-measure Modification&quot;) { # confidence interval label used in footnote ci_label &lt;- sprintf(&quot;%.0f%% confidence interval&quot;, 100 * conf) # prepare the dataframe to create the table df &lt;- df %&gt;% filter(!grepl(pattern = &quot;log.+&quot;, name)) %&gt;% select(-conf) %&gt;% mutate(est = round(est, digits = digits), lci = round(lci, digits = digits), uci = round(uci, digits = digits)) %&gt;% tidyr::pivot_longer(cols = c(est, lci, uci), names_to = &quot;point&quot;, values_to = &quot;value&quot;) %&gt;% tidyr::separate(col = &quot;name&quot;, into = c(&quot;name&quot;, &quot;stratum&quot;), sep = &quot;[.]&quot;) %&gt;% tidyr::unite(col = &quot;estimate&quot;, stratum, point, sep = &quot;_&quot;) %&gt;% pivot_wider(names_from = &quot;estimate&quot;, values_from = &quot;value&quot;) %&gt;% mutate(M0_ci = paste0(&quot;(&quot;, M0_lci, &quot;, &quot;, M0_uci, &quot;)&quot;), M1_ci = paste0(&quot;(&quot;, M1_lci, &quot;, &quot;, M1_uci, &quot;)&quot;), diff_ci = paste0(&quot;(&quot;, diff_lci, &quot;, &quot;, diff_uci, &quot;)&quot;), M0_lci = NULL, M0_uci = NULL, M1_lci = NULL, M1_uci = NULL, diff_lci = NULL, diff_uci = NULL) # create the table with gt gt::gt(df, rowname_col = &quot;name&quot;) %&gt;% tab_header(title = md(paste0(&quot;**&quot;, title, &quot;**&quot;)), subtitle = md(paste0(&quot;**&quot;, subtitle, &quot;**&quot;))) %&gt;% tab_spanner_delim(delim = &quot;_&quot;, columns = everything(), split = &quot;last&quot;) %&gt;% cols_align(align = &quot;center&quot;, columns = everything()) %&gt;% cols_label( name = &quot;Measure&quot;, M0_est = &quot;Estimate&quot;, M0_ci = &quot;CI&quot;, M1_est = &quot;Estimate&quot;, M1_ci = &quot;CI&quot;, diff_est = &quot;Estimate&quot;, diff_ci = &quot;CI&quot;) %&gt;% opt_row_striping() %&gt;% tab_style( style = cell_borders(sides = &quot;left&quot;, color = &quot;grey60&quot;, weight = px(1.5), style = &quot;solid&quot;), locations = cells_body(columns = c(&quot;M1_est&quot;, &quot;diff_est&quot;)) ) %&gt;% tab_style( style = cell_borders(sides = &quot;left&quot;, color = &quot;grey60&quot;, weight = px(1.5), style = &quot;solid&quot;), locations = cells_column_labels(columns = c(&quot;M1_est&quot;, &quot;diff_est&quot;)) ) %&gt;% tab_footnote( footnote = ci_label, locations = cells_column_labels(columns = c(&quot;M0_ci&quot;, &quot;M1_ci&quot;, &quot;diff_ci&quot;)) ) %&gt;% tab_source_note( source_note = &quot;Fundamentals of Causal Inference, Babette A. Brumback, 2022&quot; ) %&gt;% tab_options( heading.title.font.weight = &quot;bold&quot;, heading.subtitle.font.weight = &quot;bold&quot;, heading.background.color = &quot;gainsboro&quot;, column_labels.font.weight = &quot;bold&quot;) } C.3.2 ggp_measures_modif.R #&#39; Create a plot of effect-measures modifications #&#39; #&#39; Create a plot of effect-measures modifications #&#39; #&#39; Create a plot of effect-measures modifications. The measures are shoen #&#39; as solid lines. The actual effects are shown in dashed lines #&#39; #&#39; @param df Dataframe to plot #&#39; @param title Title of the plot #&#39; #&#39; @return A ggplot object #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } ggp_measures_modif &lt;- function(df, title = &quot;Change in effect measures&quot;) { # prepare the dataframe used to pcreate the plot df &lt;- df %&gt;% filter(!grepl(pattern = &quot;log.+&quot;, name)) %&gt;% select(-conf) %&gt;% tidyr::separate(col = &quot;name&quot;, into = c(&quot;name&quot;, &quot;stratum&quot;), sep = &quot;[.]&quot;) %&gt;% filter(stratum != &quot;diff&quot;) # create the plot ggplot(df, aes(x = stratum, y = est, color = name, linetype = name, group = name)) + geom_line(size = 1) + geom_point(mapping = aes(fill = name), size = 3, shape = 21) + geom_text(mapping = aes(label = round(est, 1)), nudge_x = 0.05, nudge_y = 0.05) + scale_linetype_manual(values = c(&quot;EYT0&quot; = &quot;dashed&quot;, &quot;EYT1&quot; = &quot;dashed&quot;, &quot;OR&quot; = &quot;solid&quot;, &quot;RD&quot; = &quot;solid&quot;, &quot;RR&quot; = &quot;solid&quot;, &quot;RRstar&quot; = &quot;solid&quot;)) + theme_minimal() + theme(legend.position = &quot;right&quot;, legend.title = element_blank()) + labs(title = title, subtitle = &quot;Effect-Measure Modification and Statistical Interaction&quot;, y = &quot;estimated expected value&quot;) } C.3.3 betasim_effect_measures.R #&#39; Monte Carlo Sim of Effect Measures using the Beta distribution #&#39; #&#39; Monte Carlo Sim of Effect Measures using the Beta distribution. #&#39; #&#39; Perform a Monte Carlo simulation of effect measures using a grid #&#39; of \\code{shape1} and \\code{shape2} parameters. See the `rbeta()` function #&#39; for more details #&#39; #&#39; @param shape1_prms Vector of shape 2 parameter for the `rbeta` function #&#39; @param shape2_prms Vector of shape 2 parameter for the `rbeta` function #&#39; @param nrep Nb of repetitions #&#39; @param constrained Logical. If \\code{FALSE} the data is not constrained. #&#39; Otherwise it is constrained. That is when \\code{RR0} and \\code{RR1} are on #&#39; different sides of 1, the data point is excluded. #&#39; #&#39; @return List of matrices. One per event of effect measure. #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } betasim_effect_measures &lt;- function(shape1_prms = 1, shape2_prms = 1, nrep = 5000, constrained = FALSE) { stopifnot(nrep &gt;= 1) # the shape parameters must be &gt;= 0.5 to maintain # the positivity assumption stopifnot(all(shape1_prms &gt;= 0.5), all(shape2_prms &gt;= 0.5)) # the function used by Monte Carlo for each parameter in the grid calc_measures &lt;- function(shape1, shape2) { # get the random sample from beta distribution s &lt;- rbeta(n = 4, shape1 = shape1, shape2 = shape2) EY_T0_M0 &lt;- s[1] EY_T1_M0 &lt;- s[2] EY_T0_M1 &lt;- s[3] EY_T1_M1 &lt;- s[4] # IMPORTANT: Make sure the positivity assumption is met. stopifnot(EY_T0_M0 &gt; 0, EY_T0_M0 &lt; 1, EY_T1_M0 &gt; 0, EY_T1_M0 &lt; 1, EY_T0_M1 &gt; 0, EY_T0_M1 &lt; 1, EY_T1_M1 &gt; 0, EY_T1_M1 &lt; 1) # compute the effect measures RD0 &lt;- EY_T1_M0 - EY_T0_M0 RD1 &lt;- EY_T1_M1 - EY_T0_M1 RR0 &lt;- EY_T1_M0 / EY_T0_M0 RR1 &lt;- EY_T1_M1 / EY_T0_M1 RR0star &lt;- (1 - EY_T0_M0) / (1 - EY_T1_M0) RR1star &lt;- (1 - EY_T0_M1) / (1 - EY_T1_M1) OR0 &lt;- RR0 * RR0star OR1 &lt;- RR1 * RR1star # How did the measures change with the modifier? RD &lt;- sign(RD1 - RD0) RR &lt;- sign(RR1 - RR0) RRstar &lt;- sign(RR1star - RR0star) OR &lt;- sign(OR1 - OR0) # We want to know if the various subsets of the four causal measures would # agree (i.e. change together from one stratum to the other) # 1 pair only RD_RR &lt;- (RD == RR) &amp; (RD != RRstar) &amp; (RD != OR) &amp; (RR != RRstar) &amp; (RR != OR) &amp; (RRstar != OR) RD_RRstar &lt;- (RD != RR) &amp; (RD == RRstar) &amp; (RD != OR) &amp; (RR != RRstar) &amp; (RR != OR) &amp; (RRstar != OR) RD_OR &lt;- (RD != RR) &amp; (RD != RRstar) &amp; (RD == OR) &amp; (RR != RRstar) &amp; (RR != OR) &amp; (RRstar != OR) RR_RRstar &lt;- (RD != RR) &amp; (RD != RRstar) &amp; (RD != OR) &amp; (RR == RRstar) &amp; (RR != OR) &amp; (RRstar != OR) RR_OR &lt;- (RD != RR) &amp; (RD != RRstar) &amp; (RD != OR) &amp; (RR != RRstar) &amp; (RR == OR) &amp; (RRstar != OR) RRstar_OR &lt;- (RD != RR) &amp; (RD != RRstar) &amp; (RD != OR) &amp; (RR != RRstar) &amp; (RR != OR) &amp; (RRstar == OR) # 2 pairs not being 3-wise # called &quot;Opposite pairwise events&quot; RD_RR_vs_RRstar_OR &lt;- (RD == RR) &amp; (RD != RRstar) &amp; (RD != OR) &amp; (RR != RRstar) &amp; (RR != OR) &amp; (RRstar == OR) RD_RRstar_vs_RR_OR &lt;- (RD != RR) &amp; (RD == RRstar) &amp; (RD != OR) &amp; (RR != RRstar) &amp; (RR == OR) &amp; (RRstar != OR) RD_OR_vs_RR_RRstar &lt;- (RD != RR) &amp; (RD != RRstar) &amp; (RD == OR) &amp; (RR == RRstar) &amp; (RR != OR) &amp; (RRstar != OR) # 3-wise RD_RR_RRstar &lt;- (RD == RR) &amp; (RD == RRstar) &amp; (RD != OR) &amp; (RR == RRstar) &amp; (RR != OR) &amp; (RRstar != OR) RD_RR_OR &lt;- (RD == RR) &amp; (RD != RRstar) &amp; (RD == OR) &amp; (RR != RRstar) &amp; (RR == OR) &amp; (RRstar != OR) RD_RRstar_OR &lt;- (RD != RR) &amp; (RD == RRstar) &amp; (RD == OR) &amp; (RR != RRstar) &amp; (RR != OR) &amp; (RRstar == OR) RR_RRstar_OR &lt;- (RD != RR) &amp; (RD != RRstar) &amp; (RD != OR) &amp; (RR == RRstar) &amp; (RR == OR) &amp; (RRstar == OR) # 4-wise RD_RR_RRstar_OR &lt;- (RD == RR) &amp; (RD == RRstar) &amp; (RD == OR) &amp; (RR == RRstar) &amp; (RR == OR) &amp; (RRstar == OR) # All measures move in different directions # This is an impossible event and represent the empty set NONE &lt;- (RD != RR) &amp; (RD != RRstar) &amp; (RD != OR) &amp; (RR != RRstar) &amp; (RR != OR) &amp; (RRstar != OR) # create the output list out &lt;- list(&quot;RD_RR&quot; = RD_RR, &quot;RD_RRstar&quot; = RD_RRstar, &quot;RD_OR&quot; = RD_OR, &quot;RR_RRstar&quot; = RR_RRstar, &quot;RR_OR&quot; = RR_OR, &quot;RRstar_OR&quot; = RRstar_OR, &quot;RD_RR_vs_RRstar_OR&quot; = RD_RR_vs_RRstar_OR, &quot;RD_RRstar_vs_RR_OR&quot; = RD_RRstar_vs_RR_OR, &quot;RD_OR_vs_RR_RRstar&quot; = RD_OR_vs_RR_RRstar, &quot;RD_RR_RRstar&quot; = RD_RR_RRstar, &quot;RD_RR_OR&quot; = RD_RR_OR, &quot;RD_RRstar_OR&quot; = RD_RRstar_OR, &quot;RR_RRstar_OR&quot; = RR_RRstar_OR, &quot;RD_RR_RRstar_OR&quot; = RD_RR_RRstar_OR, &quot;NONE&quot; = NONE) # if constrained and condition is met, set to NA # is constrained the set to NA # if RR0 and RR1 are on different side of 1 # then the constraint is met cond &lt;- sign(RR0 - 1) != sign(RR1 - 1) if (constrained &amp; cond) out[seq_along(out)] &lt;- NA out } # run parametric Monte Carlo simulation params &lt;- list(&quot;shape1&quot; = shape1_prms, &quot;shape2&quot; = shape2_prms) mc.out &lt;- MonteCarlo::MonteCarlo(func = calc_measures, nrep = nrep, param_list = params) # output the results. One matrix per event where every matrix element # is a percentage frequency for given shape1 and shape2 parameters out &lt;- lapply(mc.out$results, FUN = function(x) { m &lt;- sapply( X = seq_len(dim(x)[1]), FUN = function(s1) { sapply(X = seq_len(dim(x)[2]), function(s2) { # since the constrained items are set to NA, we must # remove NA from the calculations, only has an effect # when constrained = TRUE nb &lt;- sum(!is.na(x[s1, s2, ])) sum(x[s1, s2, ], na.rm = TRUE) / nb }) }) # Convert array to matrix and name row and columns m &lt;- as.matrix(m) rownames(m) &lt;- paste(&quot;s2&quot;, shape2_prms, sep = &quot;=&quot;) colnames(m) &lt;- paste(&quot;s1&quot;, shape1_prms, sep = &quot;=&quot;) m }) out } C.3.4 ggp_venn_sim.R #&#39; Create Venn diagram of the Monte Carlo sim with beta distribution #&#39; #&#39; Create Venn diagram of the Monte Carlo sim with beta distribution. #&#39; #&#39; Create Venn diagram of the Monte Carlo. The colors can be changed. #&#39; #&#39; @param sim Monte Carlo sim data from \\code{betasim_effect_measures()} #&#39; @param n total nb of elments in the whole diagram #&#39; @param fill_colr Vector of 4 fill colors #&#39; @param title Title of the diagram #&#39; #&#39; @return ggplot object #&#39; @export #&#39; #&#39; @seealso betasim_effect_measures #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } ggp_venn_sim &lt;- function(sim, n = 1000, fill_colr = c(&quot;blue&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;red&quot;), title = &quot;Venn diagram of effect measure modifications&quot;) { n &lt;- 1000 dfs &lt;- list() id &lt;- &quot;RD_RR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = T, &quot;RRstar&quot; = F, &quot;OR&quot; = F) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_RRstar&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = F, &quot;RRstar&quot; = T, &quot;OR&quot; = F) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_OR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = F, &quot;RRstar&quot; = F, &quot;OR&quot; = T) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RR_RRstar&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = F, &quot;RR&quot; = T, &quot;RRstar&quot; = T, &quot;OR&quot; = F) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RR_OR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = F, &quot;RR&quot; = T, &quot;RRstar&quot; = F, &quot;OR&quot; = T) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RRstar_OR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = F, &quot;RR&quot; = F, &quot;RRstar&quot; = T, &quot;OR&quot; = T) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_RR_vs_RRstar_OR&quot; nreps &lt;- sim[[id]] * n * 0.5 df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = T, &quot;RRstar&quot; = F, &quot;OR&quot; = F) dfs[[&quot;RD_RR_vs_RRstar_OR_1&quot;]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) df &lt;- data.frame(&quot;RD&quot; = F, &quot;RR&quot; = F, &quot;RRstar&quot; = T, &quot;OR&quot; = T) dfs[[&quot;RD_RR_vs_RRstar_OR_2&quot;]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_RRstar_vs_RR_OR&quot; nreps &lt;- sim[[id]] * n * 0.5 df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = F, &quot;RRstar&quot; = T, &quot;OR&quot; = F) dfs[[&quot;RD_RRstar_vs_RR_OR_1&quot;]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) df &lt;- data.frame(&quot;RD&quot; = F, &quot;RR&quot; = T, &quot;RRstar&quot; = F, &quot;OR&quot; = T) dfs[[&quot;RD_RRstar_vs_RR_OR_2&quot;]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_OR_vs_RR_RRstar&quot; p &lt;- sim[[id]] nreps &lt;- sim[[id]] * n * 0.5 df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = F, &quot;RRstar&quot; = F, &quot;OR&quot; = T) dfs[[&quot;RD_OR_vs_RR_RRstar_1&quot;]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) df &lt;- data.frame(&quot;RD&quot; = F, &quot;RR&quot; = T, &quot;RRstar&quot; = T, &quot;OR&quot; = F) dfs[[&quot;RD_OR_vs_RR_RRstar_2&quot;]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_RR_RRstar&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = T, &quot;RRstar&quot; = T, &quot;OR&quot; = F) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_RR_OR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = T, &quot;RRstar&quot; = F, &quot;OR&quot; = T) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_RRstar_OR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = F, &quot;RRstar&quot; = T, &quot;OR&quot; = T) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RR_RRstar_OR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = F, &quot;RR&quot; = T, &quot;RRstar&quot; = T, &quot;OR&quot; = T) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) id &lt;- &quot;RD_RR_RRstar_OR&quot; nreps &lt;- sim[[id]] * n df &lt;- data.frame(&quot;RD&quot; = T, &quot;RR&quot; = T, &quot;RRstar&quot; = T, &quot;OR&quot; = T) dfs[[id]] &lt;- do.call(rbind, replicate(nreps, df, simplify = FALSE)) df &lt;- do.call(rbind, dfs) # create the venn diagram ggplot(df) + ggvenn::geom_venn(aes(A = RD, B = RR, C = RRstar, D = OR), show_percentage = TRUE, fill_color = fill_colr) + theme_void() + labs(title = title, subtitle = sprintf(&quot;%d items&quot;, n)) } C.3.5 ggp_betasim.R #&#39; Heatmap of a matrix from \\code{betasim_effect_measures()} #&#39; #&#39; Heatmap of a matrix from \\code{betasim_effect_measures()}. #&#39; #&#39; Heatmap of a matrix from \\code{betasim_effect_measures()} with the #&#39; possibilitiy of changing the color. #&#39; #&#39; @param sim Monte Carlo sim data from \\code{betasim_effect_measures()} #&#39; @param var Variable from the Monte Carlo sim to plot. #&#39; @param colr Vector of colors for the heatmap. #&#39; @param title Title of the plot #&#39; #&#39; @return ggplot object #&#39; @export #&#39; #&#39; @seealso betasim_effect_measures #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } ggp_betasim &lt;- function(sim, var = &quot;RD_RR_RRstar_OR&quot;, colr = list(&quot;low&quot; = &quot;cadetblue1&quot;, &quot;high&quot; = &quot;cadetblue4&quot;), title = &quot;Monte Carlo simulation with beta distribution&quot;) { mat &lt;- sim[[var]] df &lt;- mat %&gt;% as.data.frame() %&gt;% mutate(shape2 = rownames(.)) %&gt;% pivot_longer(cols = starts_with(&quot;s1&quot;), names_to = &quot;shape1&quot;, values_to = &quot;value&quot;) ggplot(df, aes(x = shape1, y = shape2, fill = value)) + geom_tile() + geom_text(aes(label = round(value, 2)), color = &quot;floralwhite&quot;, fontface = &quot;bold&quot;, size = 5) + scale_fill_gradient(low = colr$low, high = colr$high) + theme_minimal() + theme(legend.position = &quot;none&quot;) + labs(title = title, subtitle = sprintf(&quot;Event = %s&quot;, var)) } C.4 Chapter 5 C.4.1 ggp_dag.R #&#39; Plot a DAG with ggplot and node names with subscripts #&#39; #&#39; Plot a DAG with ggplot and node names with subscripts. #&#39; #&#39; The DAG will be plotted using \\code{ggplot2} and the nodes&#39; names can have #&#39; subscript as in mathematical notations. See the \\code{source} below for #&#39; more details. #&#39; #&#39; @param dag #&#39; @param layout #&#39; @param text_labels If NULL (default) the nodes&#39; names are used as is. If #&#39; a vector of text labels is given they MUST BE IN ALPHABETICAL ORDER. #&#39; @param text_size Integer. Size of the nodes&#39; name. #&#39; #&#39; @return ggplot object #&#39; @export #&#39; #&#39; @source https://www.r-bloggers.com/2019/10/how-to-use-math-symbols-with-ggdag-2/ #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } ggp_dag &lt;- function(dag, layout = &quot;sugiyama&quot;, text_labels = NULL, text_size = 7, box_padding = 1, legend_pos = &quot;bottom&quot;) { # the default colors bg_colr &lt;- &quot;snow&quot; label_colr &lt;- &quot;oldlace&quot; text_colr &lt;- &quot;midnightblue&quot; status_colrs &lt;- c(&quot;latent&quot; = &quot;snow3&quot;, &quot;exposure&quot; = &quot;burlywood&quot;, &quot;outcome&quot; = &quot;aquamarine&quot;) # Check if any variable was given a status is_status &lt;- any(length(exposures(dag)) &gt; 0, length(outcomes(dag)) &gt; 0, length(latents(dag)) &gt; 0) if (is_status) { status_guide &lt;- &quot;legend&quot; } else { status_guide &lt;- &quot;none&quot; } # create the dagitty object out &lt;- dag %&gt;% tidy_dagitty(layout = layout) %&gt;% arrange(name) # must sort by name to use mathematical expressions # get the names of the variables the_names &lt;- sort(unique(out$data$name)) # flag if label column is available is_label &lt;- &quot;label&quot; %in% names(out$data) # create the plot out &lt;- out %&gt;% ggdag_status(color = status) + geom_dag_point(aes(color = status)) + scale_color_manual(values = status_colrs, na.value = bg_colr, guide = status_guide) + ggdag::theme_dag_blank(panel.background = element_rect(fill=bg_colr, color=bg_colr)) + theme(legend.position = legend_pos, legend.title = element_blank()) # add the node names if (is.null(text_labels)) { out &lt;- out + geom_dag_text(size = text_size, color = text_colr) } else { # a common mistake is to forget a variable stopifnot(length(text_labels) == length(the_names)) out &lt;- out + geom_dag_text(size = text_size, color = text_colr, parse = TRUE, label = text_labels) } # add the labels when the label column is available if (is_label) { out &lt;- out + geom_dag_label_repel(aes(label = label), color = text_colr, fill = label_colr, box.padding = box_padding) } out } C.4.2 gt_probs.R #&#39; Create table of probabilities with \\code{gt} package #&#39; #&#39; Create table of probabilities with \\code{gt} package. #&#39; #&#39; Create table of probabilities with \\code{gt} package. The last column #&#39; repesents the probabilitis. #&#39; #&#39; @param df Datafframe #&#39; @param digits Integer, number of digits to the right of decimal #&#39; @param title Title of the table #&#39; @param subtitle Subtitle of the table #&#39; #&#39; @return A gt object create by the \\code{gt} package #&#39; @export #&#39; #&#39; @examples #&#39; \\dontrun{ #&#39; } gt_probs &lt;- function(df, digits = 3, title, subtitle) { df %&gt;% gt() %&gt;% tab_header( title = md(paste0(&quot;**&quot;, title, &quot;**&quot;)), subtitle = md(paste0(&quot;**&quot;, subtitle, &quot;**&quot;))) %&gt;% fmt_number(columns = &quot;prob&quot;, decimals = digits) %&gt;% cols_align(align = &quot;center&quot;, columns = everything()) %&gt;% opt_row_striping() %&gt;% tab_source_note( source_note = &quot;Fundamentals of Causal Inference, Babette A. Brumback, 2022&quot; ) %&gt;% tab_options( heading.background.color = &quot;gainsboro&quot;, column_labels.font.weight = &quot;bold&quot;) } "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
