[["instrument.html", "Chapter 9 Instrumental Variables 9.1 Complier Average Causal Effect and Principal Stratification 9.2 Average Effect of Treatment on the Treated and Structural Nested mean Models 9.3 Examples", " Chapter 9 Instrumental Variables library(rsample) library(dplyr) library(ggdag) library(patchwork) library(ggplot2) library(fciR) options(dplyr.summarise.inform = FALSE) Figure 9.1: Instrumental Variable for the Effect of A on Y We enlist the following notation for this chapter. Let \\(Y(t,a)\\) be the potential outcome for \\(Y\\) assuming we set \\(T=t\\) and then \\(A=a\\). We assume consistency \\(E(Y(t) \\mid T=t)= E(Y \\mid T=t\\)) We assume exclusion \\(Y(t,a)=Y(a)\\) Lets say that participants to treatment \\(T\\) may comply or not and let \\(A\\) be the treatment actually taken. That is \\(A=1\\) means that the treatment was taken by the participant. \\(A\\) is therefore a post-randomization event. When \\(A\\) does not equal \\(T\\) there is 2 historical methods: as-treated: Compare $E(Y A=1) with $E(Y A=0) per-protocol: We let \\(Z=1\\) if \\(A=T\\) and use ordinary stratification on \\(Z=1\\) to compare \\(E(Y \\mid T=1, Z=1)\\) with \\(E(Y \\mid T=0, Z=1)\\) \\(Z=1\\) is not a randomization event since it uses observed measurements after they occur. As a result \\(Z\\) cannot be expected to balance across 2 treatments groups. For example sicker patients could alwyas comply but healthy ones might. In thsi case we have \\(T=1, A=1\\) for the sicker patient but the healthy patients would be a mix of \\(T=1, A-1\\) and \\(T=1, A=0\\). For these reasons, many studies rely on the intent-to-treat effect (ITT) \\(E(Y \\mid T=1) - E(Y \\mid T=0)\\). This equates to the causal effect \\[ ITT = E(Y(1,A(1))) - E(Y, A(0, 0))) \\] 9.1 Complier Average Causal Effect and Principal Stratification 9.1.1 Principal Stratification Principal stratification classifies participants according to the potential occurence of a post-randomization event. We define 4 principal strata of participants according tottheir potential outcome \\(A(t)\\). never-taker: \\(A(0)=A(1)=0\\). Will not take the treatment regardless of randomized assignment. always-taker: \\(A(0)=A(1)=1\\). Will not take the treatment regardless of randomized assignment. complier: \\(A(0)=0, A(1)=1\\), i.e. \\(A(t)=t\\). Will take the treatment as required. defier: \\(A(0)=1, A(1)=0\\), i.e. \\(A(t)=1-t\\). Will refuse to take the treatment as required. Let \\(C\\) indicate a complier, i.e. that \\(A(t)=t\\). Then since \\(T\\) is a randomized, i.e. \\(Y \\perp\\!\\!\\!\\perp T \\mid C\\) \\(C\\) is a pre-randomization variable, i.e. \\(T \\perp\\!\\!\\!\\perp C\\) \\(Y(t,a) = Y(a)\\) it is reasonable to assume \\[ Y(a) \\perp\\!\\!\\!\\perp T \\mid C \\] 9.1.2 Complier Average Causal Effect The complier average causal effect (CACE) is defined as the average effect of treatment (ATT) in the compliers. That is \\[ \\begin{align*} CACE &amp;= E(Y(1) \\mid C=1) - E(Y(0) \\mid C=1) \\\\ &amp;= E(Y \\mid T=1, C=1) - E(Y \\mid T=0, C=1) \\end{align*} \\] The equation shows CACE as a stratified treatment effct, but \\(C=1\\) defines a principal stratum instead of an ordinary one. We can estimate CACE assuming exclusion and no defiers. Assuming no defiers implies \\[ E(Y \\mid T=1, C=0) = E(Y \\mid T=0, C=0) \\] because no defiers implies that \\(C=0\\) includes only never-takers and always-takers and these 2 groups act the same way regardless of what \\(T\\) is. In addition, exclusion ensures that randomization of \\(T\\) cannot affect the outcome of the never-takers and always-takers since \\(Y \\perp\\!\\!\\!\\perp T \\mid A\\). The, assuming no defierss we can say the \\[ E(Y \\mid T=1) = E(Y \\mid T=1, C=1)P(C=1) + E(Y \\mid T=1, C=0)(1-P(C=1)) \\] and \\[ E(Y \\mid T=0) = E(Y \\mid T=0, C=1)P(C=1) + E(Y \\mid T=0, C=0)(1-P(C=1)) \\] and therefore \\[ \\begin{align*} E(Y \\mid T=1) - E(Y \\mid T=0) &amp;= E(Y \\mid T=1, C=1)P(C=1) + E(Y \\mid T=1, C=0)(1-P(C=1)) - \\left[ E(Y \\mid T=0, C=1)P(C=1) + E(Y \\mid T=0, C=0)(1-P(C=1)) \\right] \\\\ \\frac{E(Y \\mid T=1) - E(Y \\mid T=0)}{P(C=1)} &amp;= E(Y \\mid T=1, C=1) + \\frac{E(Y \\mid T=1, C=0)}{P(C=1)} - E(Y \\mid T=1, C=0) - \\left[ E(Y \\mid T=0, C=1) + \\frac{E(Y \\mid T=0, C=0)}{P(C=1)} - E(Y \\mid T=0, C=0) \\right] \\\\ \\end{align*} \\] and since from above we know that \\[ E(Y \\mid T=1, C=0) = E(Y \\mid T=0, C=0) \\] then \\[ \\begin{align*} \\frac{E(Y \\mid T=1) - E(Y \\mid T=0)}{P(C=1)} = E(Y \\mid T=1, C=1) - E(Y \\mid T=1, C=0) \\end{align*} \\] and to find \\(P(C=1)\\) since we assume no defiers then we know that \\[ P(C=1) + P(A=0 \\mid T=1) + P(A=1 \\mid T=0) = 1 \\] and therefore \\[ \\begin{align*} &amp;\\text{assuming no defiers} \\\\ P(C=1) &amp;= 1 - P(A=0 \\mid T=1) + P(A=1 \\mid T=0) \\\\ &amp;= P(A=1 \\mid T=1) + P(A=1 \\mid T=0) \\end{align*} \\] and putting it together we obtain \\[ \\begin{align*} \\text{CACE} &amp;= E(Y \\mid T=1, C=1) - E(Y \\mid T=1, C=0) \\\\ &amp;= \\frac{E(Y \\mid T=1) - E(Y \\mid T=0)}{P(A=1 \\mid T=1) + P(A=1 \\mid T=0)} \\\\ &amp;= \\frac{ITT}{P(A=1 \\mid T=1) + P(A=1 \\mid T=0)} \\end{align*} \\] 9.2 Average Effect of Treatment on the Treated and Structural Nested mean Models A drawback of the CACE is that it applies only to the compliers, a subgroup of the populaiton that we cannot even identify. Another way to do it is to use the average effect of treatment on the treated \\[ \\text{ATT} = E(Y(1) - Y(0) \\mid A=1) = E(Y - Y(0) \\mid A=1) \\] To estimate the ATT using the instrumental variable, \\(T\\), we introduce structural nested mean models. The linear structural nested mean model is \\[ E(Y - Y(0) \\mid A, T) = A \\beta \\] \\(Y-Y(0)\\) is assumed to be mean indedendent of \\(T\\) given \\(A\\). Thsi therefore implies that there is no defiers as they create a dependency on \\(T\\). It also implies that *any effect modifiers of \\(Y-Y(0)\\) is balanced across \\(T=0\\) and \\(T=1\\) groups. The non-causal linear model is using \\(D\\) which is a function of \\(A\\) and \\(T\\) \\[ E(Y \\mid A,T)=D \\eta \\] therefore \\[ D \\eta - A \\beta = E(Y(0) \\mid A, T) \\] and so \\[ E_{A \\mid T} (D \\eta - A \\beta) = E(Y(0) \\mid A, T) \\] The solution for \\(\\eta\\) is found using the method of chapter 2, section 2.3. \\[ \\sum_{n=1}^n (1,T_i)^T(D_i \\hat{\\eta} -A_i \\beta - \\alpha) = 0 \\] and for \\(\\alpha\\) and \\(\\beta\\) we use instrumental variable regression which can be done with the ivreg function from the package \\(AER\\). \\[ \\sum_{n=1}^n (1,T_i)^T(Y_i^* - A_i^* \\beta - \\alpha) = 0 \\] 9.3 Examples 9.3.1 What-If Study data(&quot;whatifdat&quot;, package = &quot;fciR&quot;) whatif &lt;- whatifdat round(prop.table(xtabs(data = whatif, formula = ~ `T` + A), margin = 1), 2) ## A ## T 0 1 ## 0 0.38 0.62 ## 1 0.35 0.65 rm(whatifdat) and the function as found on p. 164 is modified to allow the bootstrapping with many iterations by setting IV to NA where the denominator is too small. instr_vars &lt;- function(data, outcome.name = &quot;Y&quot;, exposure.name = &quot;A&quot;, instrument.name = &quot;T&quot;, tol = .Machine$double.eps^0.5) { # estimate the ITT dat0 &lt;- data[, instrument.name] == 0 dat1 &lt;- data[, instrument.name] == 1 ITT &lt;- mean(data[dat1, outcome.name]) - mean(data[dat0, outcome.name]) # estimate the denominator of the CAE and ATT with equation (9.5) denom &lt;- mean(data[dat1, exposure.name]) - mean(data[dat0, exposure.name]) # denominator should not be near zero to avoid numerical problems check &lt;- abs(denom) &gt;= tol if(check) { IV &lt;- ITT / denom } else { IV &lt;- NA_real_ } c(&quot;ITT&quot; = ITT, &quot;IV&quot; = IV) } with the results whatif.est &lt;- instr_vars(whatif, outcome.name = &quot;Y&quot;, exposure.name = &quot;A&quot;, instrument.name = &quot;T&quot;) stopifnot(sum(abs(whatif.est - c(0.007352941, 0.27777778))) &lt; .Machine$double.eps^0.5) whatif.est ## ITT IV ## 0.007352941 0.277777778 .Machine$double.eps^0.5 ## [1] 1.490116e-08 and using only 100 boots to estimate the CI whatif.out &lt;- fciR::boot_est( whatif, instr_vars, R = 1000, conf = 0.95, inv = &quot;none&quot;, outcome.name = &quot;Y&quot;, exposure.name = &quot;A&quot;, instrument.name = &quot;T&quot;, tol = 1e-6) %&gt;% mutate(across(.cols = where(is.numeric), .fns = round, digits = 4)) whatif.out ## name est conf lci uci ## 1 ITT 0.0074 0.95 -0.1350 0.1544 ## 2 IV 0.2778 0.95 -54.8789 53.4541 Note: Although we used 1000 iterations for bootstraping with NA when the denominator is too close to zero. It is more flexible than the code in the book but still with a lot of variability for the CI of IV. In fact, in very many iterations, the CI were much wider than what the author calculated and most of the time the CI was about c(-30, 30). 9.3.2 Double What-if Study data(&quot;doublewhatifdat&quot;, package = &quot;fciR&quot;) dwhatif &lt;- doublewhatifdat We compute the estimator for the linear, loglinear and logistic SNMM using the Double What-If Study. The functions are in the fciR package and can be consulted as usual by using F2 on the function. The jacknife function from the package resample is replaced by using the loo_cv from the rsample package. This function creates n sets of data, with n being the nb of rows in the data, where 1 row is left out for every set. This is the same as a jackknife. Using the rsample package offers a more versatile and modern way of working with R as it is the tidyverse way of coding. In addition, the author of resample mentions that he has stopped maintaining the resample package and recommends using rsample. See STA 430 for an easy to understand explanation on how to compute the standard error of a jackknife. dwhatif.lininstr &lt;- fciR::instr_linear(dwhatif, outcome.name = &quot;VL1&quot;, exposure.name = &quot;A&quot;, instrument.name = &quot;T&quot;) dwhatif.lininstr ## EY0 EY1 RD logRR logRR* logOR ## 0.6400410 0.2307692 -0.4092717 -1.0201140 -0.7594008 -1.7795147 and we use a jackknife as discussed above. Since the jacknife is custom-made, we test it with the mtcars data set as follows. # the function to compute the standard error and confidence interval jack_ci &lt;- function(x, conf = 0.95) { n &lt;- length(x) nsample &lt;- n - 1 m &lt;- mean(x) v &lt;- (nsample / n) * sum((x - m)^2) se &lt;- sqrt(v) ci &lt;- qt(conf, df = nsample) c(&quot;est&quot; = m, &quot;se&quot; = sqrt(v), &quot;conf&quot; = conf, &quot;lci&quot; = m - ci * se, &quot;uci&quot; = m + ci * se) } mtcars.jack &lt;- sapply(seq_along(mtcars$mpg), FUN = function(i) { x &lt;- mtcars$mpg[-i] mean(x) }) mtcars.out &lt;- jack_ci(mtcars.jack) stopifnot(mean(mtcars$mpg) == mtcars.out[&quot;est&quot;], # the standard error abs(sd(mtcars$mpg) / sqrt(nrow(mtcars)) - mtcars.out[&quot;se&quot;]) &lt; .Machine$double.eps^0.5) jack_run &lt;- function(data, func, conf = 0.95, ...) { # get the leave-one-out samples the_samples &lt;- rsample::loo_cv(data) # estimates the effect measures the_results &lt;- purrr::map_dfr(.x = the_samples$splits, .f = function(x) { df &lt;- analysis(x) func(df, ...) }) # compute the confidence intervals purrr::map_dfr(.x = the_results, .f = ~jack_ci(., conf = conf), .id = &quot;name&quot;) } df &lt;- jack_run(data = dwhatif, conf = 0.95, func = fciR::instr_linear, outcome.name = &quot;VL1&quot;, exposure.name = &quot;A&quot;, instrument.name = &quot;T&quot;) df ## # A tibble: 6 x 6 ## name est se conf lci uci ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 EY0 0.640 0.0754 0.95 0.516 0.764 ## 2 EY1 0.231 0.0269 0.95 0.186 0.275 ## 3 RD -0.409 0.0792 0.95 -0.540 -0.279 ## 4 logRR -1.02 0.163 0.95 -1.29 -0.751 ## 5 logRR* -0.759 0.211 0.95 -1.11 -0.412 ## 6 logOR -1.78 0.356 0.95 -2.37 -1.19 and the function to do the full jackknife in one function is included in the fci package and cn be used as follows. First with the linear model message(&quot;This takes about 25 sec. Load from file.&quot;) ## This takes about 25 sec. Load from file. # startTime &lt;- Sys.time() # dwhatif.lin &lt;- fciR::jack_est(data = dwhatif, func = fciR::instr_linear, conf = 0.95, # inv = &quot;none&quot;, evars = &quot;standard&quot;, # outcome.name = &quot;VL1&quot;, exposure.name = &quot;A&quot;, # instrument.name = &quot;T&quot;) # endTime &lt;- Sys.time() # print(endTime - startTime) a_file &lt;- file.path(dir_data, &quot;chap09_lin.rds&quot;) # saveRDS(dwhatif.lin, file = a_file) dwhatif.lin &lt;- readRDS(file = a_file) dwhatif.lin ## # A tibble: 6 x 6 ## name est se conf lci uci ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 EY0 0.640 0.0754 0.95 0.516 0.764 ## 2 EY1 0.231 0.0269 0.95 0.186 0.275 ## 3 RD -0.409 0.0792 0.95 -0.540 -0.279 ## 4 logRR -1.02 0.163 0.95 -1.29 -0.751 ## 5 logRR* -0.759 0.211 0.95 -1.11 -0.412 ## 6 logOR -1.78 0.356 0.95 -2.37 -1.19 then the loglinear model message(&quot;This takes about 45 sec. Load from file.&quot;) ## This takes about 45 sec. Load from file. # startTime &lt;- Sys.time() # dwhatif.loglin &lt;- fciR::jack_est(data = dwhatif, func = fciR::instr_loglinear, conf = 0.95, # inv = &quot;none&quot;, evars = &quot;standard&quot;, # outcome.name = &quot;VL1&quot;, exposure.name = &quot;A&quot;, # instrument.name = &quot;T&quot;) # endTime &lt;- Sys.time() # print(endTime - startTime) a_file &lt;- file.path(dir_data, &quot;chap09_loglin.rds&quot;) # saveRDS(dwhatif.loglin, file = a_file) dwhatif.loglin &lt;- readRDS(file = a_file) dwhatif.loglin ## # A tibble: 6 x 6 ## name est se conf lci uci ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 EY0 0.713 0.131 0.95 0.498 0.928 ## 2 EY1 0.231 0.0269 0.95 0.186 0.275 ## 3 RD -0.483 0.135 0.95 -0.704 -0.261 ## 4 logRR -1.13 0.222 0.95 -1.49 -0.762 ## 5 logRR* -0.987 0.453 0.95 -1.73 -0.241 ## 6 logOR -2.12 0.660 0.95 -3.20 -1.03 an the logistic model message(&quot;This takes about 40 sec. Load from file.&quot;) ## This takes about 40 sec. Load from file. # startTime &lt;- Sys.time() # dwhatif.logistic &lt;- fciR::jack_est(data = dwhatif, func = fciR::instr_logistic, conf = 0.95, # inv = &quot;none&quot;, evars = &quot;standard&quot;, # outcome.name = &quot;VL1&quot;, exposure.name = &quot;A&quot;, # instrument.name = &quot;T&quot;) # endTime &lt;- Sys.time() # print(endTime - startTime) a_file &lt;- file.path(dir_data, &quot;chap09_logistic.rds&quot;) # saveRDS(dwhatif.logistic, file = a_file) dwhatif.logistic &lt;- readRDS(file = a_file) dwhatif.logistic ## # A tibble: 6 x 6 ## name est se conf lci uci ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 EY0 0.643 0.0705 0.95 0.527 0.759 ## 2 EY1 0.231 0.0269 0.95 0.186 0.275 ## 3 RD -0.413 0.0753 0.95 -0.537 -0.289 ## 4 logRR -1.03 0.160 0.95 -1.29 -0.762 ## 5 logRR* -0.769 0.201 0.95 -1.10 -0.439 ## 6 logOR -1.79 0.342 0.95 -2.36 -1.23 which gives us the following result, tbl_9.1 &lt;- rbind( data.frame( method = &quot;Linear&quot;, dwhatif.lin), data.frame( method = &quot;Loglinear&quot;, dwhatif.loglin), data.frame( method = &quot;Logistic&quot;, dwhatif.logistic)) |&gt; filter(name %in% c(&quot;RD&quot;, &quot;logRR&quot;, &quot;logOR&quot;)) gt_measures_rowgrp(tbl_9.1, rowgroup = &quot;name&quot;, rowname = &quot;method&quot;, conf = 0.95, title = &quot;Table 9.1&lt;em&gt;(by FL)&lt;/em&gt;&quot;, subtitle = paste(&quot;Double What-If Study&quot;, &quot;Instrumental Variables Analysis&quot;, sep = &quot;&lt;br&gt;&quot;) ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gnjkueirvl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gnjkueirvl .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gnjkueirvl .gt_title { color: #333333; font-size: 125%; font-weight: bold; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gnjkueirvl .gt_subtitle { color: #333333; font-size: 85%; font-weight: bold; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #gnjkueirvl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gnjkueirvl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gnjkueirvl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gnjkueirvl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gnjkueirvl .gt_column_spanner_outer:first-child { padding-left: 0; } #gnjkueirvl .gt_column_spanner_outer:last-child { padding-right: 0; } #gnjkueirvl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gnjkueirvl .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gnjkueirvl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gnjkueirvl .gt_from_md > :first-child { margin-top: 0; } #gnjkueirvl .gt_from_md > :last-child { margin-bottom: 0; } #gnjkueirvl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gnjkueirvl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #gnjkueirvl .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #gnjkueirvl .gt_row_group_first td { border-top-width: 2px; } #gnjkueirvl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gnjkueirvl .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #gnjkueirvl .gt_first_summary_row.thick { border-top-width: 2px; } #gnjkueirvl .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gnjkueirvl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gnjkueirvl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gnjkueirvl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gnjkueirvl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gnjkueirvl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gnjkueirvl .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #gnjkueirvl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gnjkueirvl .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gnjkueirvl .gt_left { text-align: left; } #gnjkueirvl .gt_center { text-align: center; } #gnjkueirvl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gnjkueirvl .gt_font_normal { font-weight: normal; } #gnjkueirvl .gt_font_bold { font-weight: bold; } #gnjkueirvl .gt_font_italic { font-style: italic; } #gnjkueirvl .gt_super { font-size: 65%; } #gnjkueirvl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #gnjkueirvl .gt_asterisk { font-size: 100%; vertical-align: 0; } #gnjkueirvl .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #gnjkueirvl .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #gnjkueirvl .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Table 9.1(by FL) Double What-If StudyInstrumental Variables Analysis Estimate se CI1 RD Linear -0.409 0.079 (-0.54, -0.279) Loglinear -0.483 0.135 (-0.704, -0.261) Logistic -0.413 0.075 (-0.537, -0.289) logRR Linear -1.020 0.163 (-1.289, -0.751) Loglinear -1.129 0.222 (-1.495, -0.762) Logistic -1.025 0.160 (-1.288, -0.762) logOR Linear -1.780 0.356 (-2.366, -1.193) Loglinear -2.116 0.660 (-3.202, -1.029) Logistic -1.794 0.342 (-2.357, -1.231) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval The difference in confidence intervals is because the author uses 1.96 = round(qnorm(0.95), 2) as a whereas fciR::jack_est uses qt(0.95, df = nrow(data)-1). data(&quot;fci_tbl_09_01&quot;, package = &quot;fciR&quot;) bb_dwhatif &lt;- fci_tbl_09_01 # bb_dwhatif gt_measures_rowgrp( bb_dwhatif, rowgroup = &quot;name&quot;, rowname = &quot;method&quot;, conf = 0.95, title = &quot;Table 9.1&quot;, subtitle = paste(&quot;Double What-If Study&quot;, &quot;Instrumental Variables Analysis&quot;, sep = &quot;&lt;br&gt;&quot;)) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gsezvcubba .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gsezvcubba .gt_heading { background-color: #DCDCDC; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gsezvcubba .gt_title { color: #333333; font-size: 125%; font-weight: bold; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gsezvcubba .gt_subtitle { color: #333333; font-size: 85%; font-weight: bold; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #gsezvcubba .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gsezvcubba .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gsezvcubba .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gsezvcubba .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gsezvcubba .gt_column_spanner_outer:first-child { padding-left: 0; } #gsezvcubba .gt_column_spanner_outer:last-child { padding-right: 0; } #gsezvcubba .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gsezvcubba .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gsezvcubba .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: bold; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gsezvcubba .gt_from_md > :first-child { margin-top: 0; } #gsezvcubba .gt_from_md > :last-child { margin-bottom: 0; } #gsezvcubba .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gsezvcubba .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #gsezvcubba .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #gsezvcubba .gt_row_group_first td { border-top-width: 2px; } #gsezvcubba .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gsezvcubba .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #gsezvcubba .gt_first_summary_row.thick { border-top-width: 2px; } #gsezvcubba .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gsezvcubba .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gsezvcubba .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gsezvcubba .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gsezvcubba .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gsezvcubba .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gsezvcubba .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #gsezvcubba .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gsezvcubba .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #gsezvcubba .gt_left { text-align: left; } #gsezvcubba .gt_center { text-align: center; } #gsezvcubba .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gsezvcubba .gt_font_normal { font-weight: normal; } #gsezvcubba .gt_font_bold { font-weight: bold; } #gsezvcubba .gt_font_italic { font-style: italic; } #gsezvcubba .gt_super { font-size: 65%; } #gsezvcubba .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #gsezvcubba .gt_asterisk { font-size: 100%; vertical-align: 0; } #gsezvcubba .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #gsezvcubba .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #gsezvcubba .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Table 9.1 Double What-If StudyInstrumental Variables Analysis Truth Estimate CI1 E(Y(1)-Y(0)|C=1) CACE NA -0.409 (-0.564, -0.254) E(Y-Y(0)|A=1) Linear -0.360 -0.409 (-0.564, -0.254) Loglinear -0.360 -0.483 (-0.746, -0.219) Logistic -0.360 -0.413 (-0.56, -0.265) log(E(Y|A=1))-log(E(Y(0)|A=1)) Linear -1.033 -1.020 (-1.34, -0.7) Loglinear -1.033 -1.129 (-1.564, -0.693) Logistic -1.033 -1.025 (-1.339, -0.712) logit(E(Y|A=1))-logit(E(Y(0)|A=1)) Linear -1.630 -1.780 (-2.478, -1.081) Loglinear -1.630 -2.116 (-3.409, -0.822) Logistic -1.630 -1.794 (-2.464, -1.124) Fundamentals of Causal Inference, Babette A. Brumback, 2022 1 95% confidence interval "]]
